
swith.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000003b4  00000000  00000000  00000174  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007f9  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 8e 00 	jmp	0x11c	; 0x11c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define PORTA *((u8*)0x3B)
#define PINA *((u8*)0x39)

typedef unsigned char u8;

int main(void){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62

	DDRA&=~(1<<3);  //pin 3A is input
  74:	aa e3       	ldi	r26, 0x3A	; 58
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	87 7f       	andi	r24, 0xF7	; 247
  80:	8c 93       	st	X, r24
	PORTA|=(1<<3);  //pull up resistor is activated
  82:	ab e3       	ldi	r26, 0x3B	; 59
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	eb e3       	ldi	r30, 0x3B	; 59
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	88 60       	ori	r24, 0x08	; 8
  8e:	8c 93       	st	X, r24

	DDRA|=(1<<5);  //pin 5a is output
  90:	aa e3       	ldi	r26, 0x3A	; 58
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	ea e3       	ldi	r30, 0x3A	; 58
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	80 62       	ori	r24, 0x20	; 32
  9c:	8c 93       	st	X, r24
	PORTA&=~(1<<5); //start with led off
  9e:	ab e3       	ldi	r26, 0x3B	; 59
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	eb e3       	ldi	r30, 0x3B	; 59
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	8f 7d       	andi	r24, 0xDF	; 223
  aa:	8c 93       	st	X, r24
	DDRA|=(1<<7);
  ac:	aa e3       	ldi	r26, 0x3A	; 58
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	ea e3       	ldi	r30, 0x3A	; 58
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	80 68       	ori	r24, 0x80	; 128
  b8:	8c 93       	st	X, r24
	PORTA&=~(1<<7);
  ba:	ab e3       	ldi	r26, 0x3B	; 59
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	eb e3       	ldi	r30, 0x3B	; 59
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8f 77       	andi	r24, 0x7F	; 127
  c6:	8c 93       	st	X, r24

	while (1){
		//if(PINA&(1<<3)==0)  //signal is 0 ,, switch closed
		if(((PINA>>3)&1)==0){
  c8:	e9 e3       	ldi	r30, 0x39	; 57
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	86 95       	lsr	r24
  d0:	86 95       	lsr	r24
  d2:	86 95       	lsr	r24
  d4:	88 2f       	mov	r24, r24
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	81 70       	andi	r24, 0x01	; 1
  da:	90 70       	andi	r25, 0x00	; 0
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	79 f4       	brne	.+30     	; 0xfe <main+0x92>
			PORTA|=(1<<7);
  e0:	ab e3       	ldi	r26, 0x3B	; 59
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	eb e3       	ldi	r30, 0x3B	; 59
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	80 68       	ori	r24, 0x80	; 128
  ec:	8c 93       	st	X, r24
		PORTA &=~(1<<5);}
  ee:	ab e3       	ldi	r26, 0x3B	; 59
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	eb e3       	ldi	r30, 0x3B	; 59
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	8f 7d       	andi	r24, 0xDF	; 223
  fa:	8c 93       	st	X, r24
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <main+0x5c>
		else  {                // SIGNAL is 1 ,, switch off
			PORTA&=~(1<<7);
  fe:	ab e3       	ldi	r26, 0x3B	; 59
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	eb e3       	ldi	r30, 0x3B	; 59
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	8f 77       	andi	r24, 0x7F	; 127
 10a:	8c 93       	st	X, r24
		    PORTA|=(1<<5);
 10c:	ab e3       	ldi	r26, 0x3B	; 59
 10e:	b0 e0       	ldi	r27, 0x00	; 0
 110:	eb e3       	ldi	r30, 0x3B	; 59
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	80 62       	ori	r24, 0x20	; 32
 118:	8c 93       	st	X, r24
 11a:	d6 cf       	rjmp	.-84     	; 0xc8 <main+0x5c>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
