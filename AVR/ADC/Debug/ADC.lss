
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000018a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  000018a8  0000191c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000e94  00000000  00000000  00001a24  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000772  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  0000302a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001b6  00000000  00000000  0000318a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f0d  00000000  00000000  00003340  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010d2  00000000  00000000  0000524d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001030  00000000  00000000  0000631f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00007350  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002e6  00000000  00000000  000074d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008f6  00000000  00000000  000077b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000080ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ea       	ldi	r30, 0xA8	; 168
      68:	f8 e1       	ldi	r31, 0x18	; 24
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 c3 0b 	call	0x1786	; 0x1786 <main>
      7a:	0c 94 52 0c 	jmp	0x18a4	; 0x18a4 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 bd 03 	call	0x77a	; 0x77a <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 1b 0c 	jmp	0x1836	; 0x1836 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 37 0c 	jmp	0x186e	; 0x186e <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 09 05 	call	0xa12	; 0xa12 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 43 0c 	jmp	0x1886	; 0x1886 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 09 05 	call	0xa12	; 0xa12 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 43 0c 	jmp	0x1886	; 0x1886 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 1b 0c 	jmp	0x1836	; 0x1836 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 09 05 	call	0xa12	; 0xa12 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 37 0c 	jmp	0x186e	; 0x186e <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 23 0c 	jmp	0x1846	; 0x1846 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 09 05 	call	0xa12	; 0xa12 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__epilogue_restores__+0x10>

0000077a <__gesf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gesf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gesf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 56 06 	call	0xcac	; 0xcac <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gesf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 43 0c 	jmp	0x1886	; 0x1886 <__epilogue_restores__+0x18>

000007da <__fixsfsi>:
     7da:	ac e0       	ldi	r26, 0x0C	; 12
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 2b 0c 	jmp	0x1856	; 0x1856 <__prologue_saves__+0x20>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	ce 01       	movw	r24, r28
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	be 01       	movw	r22, r28
     7f4:	6b 5f       	subi	r22, 0xFB	; 251
     7f6:	7f 4f       	sbci	r23, 0xFF	; 255
     7f8:	0e 94 de 05 	call	0xbbc	; 0xbbc <__unpack_f>
     7fc:	8d 81       	ldd	r24, Y+5	; 0x05
     7fe:	82 30       	cpi	r24, 0x02	; 2
     800:	61 f1       	breq	.+88     	; 0x85a <__fixsfsi+0x80>
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	50 f1       	brcs	.+84     	; 0x85a <__fixsfsi+0x80>
     806:	84 30       	cpi	r24, 0x04	; 4
     808:	21 f4       	brne	.+8      	; 0x812 <__fixsfsi+0x38>
     80a:	8e 81       	ldd	r24, Y+6	; 0x06
     80c:	88 23       	and	r24, r24
     80e:	51 f1       	breq	.+84     	; 0x864 <__stack+0x5>
     810:	2e c0       	rjmp	.+92     	; 0x86e <__stack+0xf>
     812:	2f 81       	ldd	r18, Y+7	; 0x07
     814:	38 85       	ldd	r19, Y+8	; 0x08
     816:	37 fd       	sbrc	r19, 7
     818:	20 c0       	rjmp	.+64     	; 0x85a <__fixsfsi+0x80>
     81a:	6e 81       	ldd	r22, Y+6	; 0x06
     81c:	2f 31       	cpi	r18, 0x1F	; 31
     81e:	31 05       	cpc	r19, r1
     820:	1c f0       	brlt	.+6      	; 0x828 <__fixsfsi+0x4e>
     822:	66 23       	and	r22, r22
     824:	f9 f0       	breq	.+62     	; 0x864 <__stack+0x5>
     826:	23 c0       	rjmp	.+70     	; 0x86e <__stack+0xf>
     828:	8e e1       	ldi	r24, 0x1E	; 30
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	82 1b       	sub	r24, r18
     82e:	93 0b       	sbc	r25, r19
     830:	29 85       	ldd	r18, Y+9	; 0x09
     832:	3a 85       	ldd	r19, Y+10	; 0x0a
     834:	4b 85       	ldd	r20, Y+11	; 0x0b
     836:	5c 85       	ldd	r21, Y+12	; 0x0c
     838:	04 c0       	rjmp	.+8      	; 0x842 <__fixsfsi+0x68>
     83a:	56 95       	lsr	r21
     83c:	47 95       	ror	r20
     83e:	37 95       	ror	r19
     840:	27 95       	ror	r18
     842:	8a 95       	dec	r24
     844:	d2 f7       	brpl	.-12     	; 0x83a <__fixsfsi+0x60>
     846:	66 23       	and	r22, r22
     848:	b1 f0       	breq	.+44     	; 0x876 <__stack+0x17>
     84a:	50 95       	com	r21
     84c:	40 95       	com	r20
     84e:	30 95       	com	r19
     850:	21 95       	neg	r18
     852:	3f 4f       	sbci	r19, 0xFF	; 255
     854:	4f 4f       	sbci	r20, 0xFF	; 255
     856:	5f 4f       	sbci	r21, 0xFF	; 255
     858:	0e c0       	rjmp	.+28     	; 0x876 <__stack+0x17>
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	40 e0       	ldi	r20, 0x00	; 0
     860:	50 e0       	ldi	r21, 0x00	; 0
     862:	09 c0       	rjmp	.+18     	; 0x876 <__stack+0x17>
     864:	2f ef       	ldi	r18, 0xFF	; 255
     866:	3f ef       	ldi	r19, 0xFF	; 255
     868:	4f ef       	ldi	r20, 0xFF	; 255
     86a:	5f e7       	ldi	r21, 0x7F	; 127
     86c:	04 c0       	rjmp	.+8      	; 0x876 <__stack+0x17>
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	40 e0       	ldi	r20, 0x00	; 0
     874:	50 e8       	ldi	r21, 0x80	; 128
     876:	b9 01       	movw	r22, r18
     878:	ca 01       	movw	r24, r20
     87a:	2c 96       	adiw	r28, 0x0c	; 12
     87c:	e2 e0       	ldi	r30, 0x02	; 2
     87e:	0c 94 47 0c 	jmp	0x188e	; 0x188e <__epilogue_restores__+0x20>

00000882 <__floatunsisf>:
     882:	a8 e0       	ldi	r26, 0x08	; 8
     884:	b0 e0       	ldi	r27, 0x00	; 0
     886:	e7 e4       	ldi	r30, 0x47	; 71
     888:	f4 e0       	ldi	r31, 0x04	; 4
     88a:	0c 94 23 0c 	jmp	0x1846	; 0x1846 <__prologue_saves__+0x10>
     88e:	7b 01       	movw	r14, r22
     890:	8c 01       	movw	r16, r24
     892:	61 15       	cp	r22, r1
     894:	71 05       	cpc	r23, r1
     896:	81 05       	cpc	r24, r1
     898:	91 05       	cpc	r25, r1
     89a:	19 f4       	brne	.+6      	; 0x8a2 <__floatunsisf+0x20>
     89c:	82 e0       	ldi	r24, 0x02	; 2
     89e:	89 83       	std	Y+1, r24	; 0x01
     8a0:	60 c0       	rjmp	.+192    	; 0x962 <__floatunsisf+0xe0>
     8a2:	83 e0       	ldi	r24, 0x03	; 3
     8a4:	89 83       	std	Y+1, r24	; 0x01
     8a6:	8e e1       	ldi	r24, 0x1E	; 30
     8a8:	c8 2e       	mov	r12, r24
     8aa:	d1 2c       	mov	r13, r1
     8ac:	dc 82       	std	Y+4, r13	; 0x04
     8ae:	cb 82       	std	Y+3, r12	; 0x03
     8b0:	ed 82       	std	Y+5, r14	; 0x05
     8b2:	fe 82       	std	Y+6, r15	; 0x06
     8b4:	0f 83       	std	Y+7, r16	; 0x07
     8b6:	18 87       	std	Y+8, r17	; 0x08
     8b8:	c8 01       	movw	r24, r16
     8ba:	b7 01       	movw	r22, r14
     8bc:	0e 94 ba 04 	call	0x974	; 0x974 <__clzsi2>
     8c0:	fc 01       	movw	r30, r24
     8c2:	31 97       	sbiw	r30, 0x01	; 1
     8c4:	f7 ff       	sbrs	r31, 7
     8c6:	3b c0       	rjmp	.+118    	; 0x93e <__floatunsisf+0xbc>
     8c8:	22 27       	eor	r18, r18
     8ca:	33 27       	eor	r19, r19
     8cc:	2e 1b       	sub	r18, r30
     8ce:	3f 0b       	sbc	r19, r31
     8d0:	57 01       	movw	r10, r14
     8d2:	68 01       	movw	r12, r16
     8d4:	02 2e       	mov	r0, r18
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__floatunsisf+0x5e>
     8d8:	d6 94       	lsr	r13
     8da:	c7 94       	ror	r12
     8dc:	b7 94       	ror	r11
     8de:	a7 94       	ror	r10
     8e0:	0a 94       	dec	r0
     8e2:	d2 f7       	brpl	.-12     	; 0x8d8 <__floatunsisf+0x56>
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	60 e0       	ldi	r22, 0x00	; 0
     8ea:	70 e0       	ldi	r23, 0x00	; 0
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	a0 e0       	ldi	r26, 0x00	; 0
     8f2:	b0 e0       	ldi	r27, 0x00	; 0
     8f4:	04 c0       	rjmp	.+8      	; 0x8fe <__floatunsisf+0x7c>
     8f6:	88 0f       	add	r24, r24
     8f8:	99 1f       	adc	r25, r25
     8fa:	aa 1f       	adc	r26, r26
     8fc:	bb 1f       	adc	r27, r27
     8fe:	2a 95       	dec	r18
     900:	d2 f7       	brpl	.-12     	; 0x8f6 <__floatunsisf+0x74>
     902:	01 97       	sbiw	r24, 0x01	; 1
     904:	a1 09       	sbc	r26, r1
     906:	b1 09       	sbc	r27, r1
     908:	8e 21       	and	r24, r14
     90a:	9f 21       	and	r25, r15
     90c:	a0 23       	and	r26, r16
     90e:	b1 23       	and	r27, r17
     910:	00 97       	sbiw	r24, 0x00	; 0
     912:	a1 05       	cpc	r26, r1
     914:	b1 05       	cpc	r27, r1
     916:	21 f0       	breq	.+8      	; 0x920 <__floatunsisf+0x9e>
     918:	41 e0       	ldi	r20, 0x01	; 1
     91a:	50 e0       	ldi	r21, 0x00	; 0
     91c:	60 e0       	ldi	r22, 0x00	; 0
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	4a 29       	or	r20, r10
     922:	5b 29       	or	r21, r11
     924:	6c 29       	or	r22, r12
     926:	7d 29       	or	r23, r13
     928:	4d 83       	std	Y+5, r20	; 0x05
     92a:	5e 83       	std	Y+6, r21	; 0x06
     92c:	6f 83       	std	Y+7, r22	; 0x07
     92e:	78 87       	std	Y+8, r23	; 0x08
     930:	8e e1       	ldi	r24, 0x1E	; 30
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	8e 1b       	sub	r24, r30
     936:	9f 0b       	sbc	r25, r31
     938:	9c 83       	std	Y+4, r25	; 0x04
     93a:	8b 83       	std	Y+3, r24	; 0x03
     93c:	12 c0       	rjmp	.+36     	; 0x962 <__floatunsisf+0xe0>
     93e:	30 97       	sbiw	r30, 0x00	; 0
     940:	81 f0       	breq	.+32     	; 0x962 <__floatunsisf+0xe0>
     942:	0e 2e       	mov	r0, r30
     944:	04 c0       	rjmp	.+8      	; 0x94e <__floatunsisf+0xcc>
     946:	ee 0c       	add	r14, r14
     948:	ff 1c       	adc	r15, r15
     94a:	00 1f       	adc	r16, r16
     94c:	11 1f       	adc	r17, r17
     94e:	0a 94       	dec	r0
     950:	d2 f7       	brpl	.-12     	; 0x946 <__floatunsisf+0xc4>
     952:	ed 82       	std	Y+5, r14	; 0x05
     954:	fe 82       	std	Y+6, r15	; 0x06
     956:	0f 83       	std	Y+7, r16	; 0x07
     958:	18 87       	std	Y+8, r17	; 0x08
     95a:	ce 1a       	sub	r12, r30
     95c:	df 0a       	sbc	r13, r31
     95e:	dc 82       	std	Y+4, r13	; 0x04
     960:	cb 82       	std	Y+3, r12	; 0x03
     962:	1a 82       	std	Y+2, r1	; 0x02
     964:	ce 01       	movw	r24, r28
     966:	01 96       	adiw	r24, 0x01	; 1
     968:	0e 94 09 05 	call	0xa12	; 0xa12 <__pack_f>
     96c:	28 96       	adiw	r28, 0x08	; 8
     96e:	ea e0       	ldi	r30, 0x0A	; 10
     970:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__epilogue_restores__+0x10>

00000974 <__clzsi2>:
     974:	ef 92       	push	r14
     976:	ff 92       	push	r15
     978:	0f 93       	push	r16
     97a:	1f 93       	push	r17
     97c:	7b 01       	movw	r14, r22
     97e:	8c 01       	movw	r16, r24
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	e8 16       	cp	r14, r24
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	f8 06       	cpc	r15, r24
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	08 07       	cpc	r16, r24
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	18 07       	cpc	r17, r24
     990:	88 f4       	brcc	.+34     	; 0x9b4 <__clzsi2+0x40>
     992:	8f ef       	ldi	r24, 0xFF	; 255
     994:	e8 16       	cp	r14, r24
     996:	f1 04       	cpc	r15, r1
     998:	01 05       	cpc	r16, r1
     99a:	11 05       	cpc	r17, r1
     99c:	31 f0       	breq	.+12     	; 0x9aa <__clzsi2+0x36>
     99e:	28 f0       	brcs	.+10     	; 0x9aa <__clzsi2+0x36>
     9a0:	88 e0       	ldi	r24, 0x08	; 8
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	a0 e0       	ldi	r26, 0x00	; 0
     9a6:	b0 e0       	ldi	r27, 0x00	; 0
     9a8:	17 c0       	rjmp	.+46     	; 0x9d8 <__clzsi2+0x64>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	a0 e0       	ldi	r26, 0x00	; 0
     9b0:	b0 e0       	ldi	r27, 0x00	; 0
     9b2:	12 c0       	rjmp	.+36     	; 0x9d8 <__clzsi2+0x64>
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	e8 16       	cp	r14, r24
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	f8 06       	cpc	r15, r24
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	08 07       	cpc	r16, r24
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	18 07       	cpc	r17, r24
     9c4:	28 f0       	brcs	.+10     	; 0x9d0 <__clzsi2+0x5c>
     9c6:	88 e1       	ldi	r24, 0x18	; 24
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	a0 e0       	ldi	r26, 0x00	; 0
     9cc:	b0 e0       	ldi	r27, 0x00	; 0
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__clzsi2+0x64>
     9d0:	80 e1       	ldi	r24, 0x10	; 16
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	a0 e0       	ldi	r26, 0x00	; 0
     9d6:	b0 e0       	ldi	r27, 0x00	; 0
     9d8:	20 e2       	ldi	r18, 0x20	; 32
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	40 e0       	ldi	r20, 0x00	; 0
     9de:	50 e0       	ldi	r21, 0x00	; 0
     9e0:	28 1b       	sub	r18, r24
     9e2:	39 0b       	sbc	r19, r25
     9e4:	4a 0b       	sbc	r20, r26
     9e6:	5b 0b       	sbc	r21, r27
     9e8:	04 c0       	rjmp	.+8      	; 0x9f2 <__clzsi2+0x7e>
     9ea:	16 95       	lsr	r17
     9ec:	07 95       	ror	r16
     9ee:	f7 94       	ror	r15
     9f0:	e7 94       	ror	r14
     9f2:	8a 95       	dec	r24
     9f4:	d2 f7       	brpl	.-12     	; 0x9ea <__clzsi2+0x76>
     9f6:	f7 01       	movw	r30, r14
     9f8:	e8 59       	subi	r30, 0x98	; 152
     9fa:	ff 4f       	sbci	r31, 0xFF	; 255
     9fc:	80 81       	ld	r24, Z
     9fe:	28 1b       	sub	r18, r24
     a00:	31 09       	sbc	r19, r1
     a02:	41 09       	sbc	r20, r1
     a04:	51 09       	sbc	r21, r1
     a06:	c9 01       	movw	r24, r18
     a08:	1f 91       	pop	r17
     a0a:	0f 91       	pop	r16
     a0c:	ff 90       	pop	r15
     a0e:	ef 90       	pop	r14
     a10:	08 95       	ret

00000a12 <__pack_f>:
     a12:	df 92       	push	r13
     a14:	ef 92       	push	r14
     a16:	ff 92       	push	r15
     a18:	0f 93       	push	r16
     a1a:	1f 93       	push	r17
     a1c:	fc 01       	movw	r30, r24
     a1e:	e4 80       	ldd	r14, Z+4	; 0x04
     a20:	f5 80       	ldd	r15, Z+5	; 0x05
     a22:	06 81       	ldd	r16, Z+6	; 0x06
     a24:	17 81       	ldd	r17, Z+7	; 0x07
     a26:	d1 80       	ldd	r13, Z+1	; 0x01
     a28:	80 81       	ld	r24, Z
     a2a:	82 30       	cpi	r24, 0x02	; 2
     a2c:	48 f4       	brcc	.+18     	; 0xa40 <__pack_f+0x2e>
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	a0 e1       	ldi	r26, 0x10	; 16
     a34:	b0 e0       	ldi	r27, 0x00	; 0
     a36:	e8 2a       	or	r14, r24
     a38:	f9 2a       	or	r15, r25
     a3a:	0a 2b       	or	r16, r26
     a3c:	1b 2b       	or	r17, r27
     a3e:	a5 c0       	rjmp	.+330    	; 0xb8a <__pack_f+0x178>
     a40:	84 30       	cpi	r24, 0x04	; 4
     a42:	09 f4       	brne	.+2      	; 0xa46 <__pack_f+0x34>
     a44:	9f c0       	rjmp	.+318    	; 0xb84 <__pack_f+0x172>
     a46:	82 30       	cpi	r24, 0x02	; 2
     a48:	21 f4       	brne	.+8      	; 0xa52 <__pack_f+0x40>
     a4a:	ee 24       	eor	r14, r14
     a4c:	ff 24       	eor	r15, r15
     a4e:	87 01       	movw	r16, r14
     a50:	05 c0       	rjmp	.+10     	; 0xa5c <__pack_f+0x4a>
     a52:	e1 14       	cp	r14, r1
     a54:	f1 04       	cpc	r15, r1
     a56:	01 05       	cpc	r16, r1
     a58:	11 05       	cpc	r17, r1
     a5a:	19 f4       	brne	.+6      	; 0xa62 <__pack_f+0x50>
     a5c:	e0 e0       	ldi	r30, 0x00	; 0
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	96 c0       	rjmp	.+300    	; 0xb8e <__pack_f+0x17c>
     a62:	62 81       	ldd	r22, Z+2	; 0x02
     a64:	73 81       	ldd	r23, Z+3	; 0x03
     a66:	9f ef       	ldi	r25, 0xFF	; 255
     a68:	62 38       	cpi	r22, 0x82	; 130
     a6a:	79 07       	cpc	r23, r25
     a6c:	0c f0       	brlt	.+2      	; 0xa70 <__pack_f+0x5e>
     a6e:	5b c0       	rjmp	.+182    	; 0xb26 <__pack_f+0x114>
     a70:	22 e8       	ldi	r18, 0x82	; 130
     a72:	3f ef       	ldi	r19, 0xFF	; 255
     a74:	26 1b       	sub	r18, r22
     a76:	37 0b       	sbc	r19, r23
     a78:	2a 31       	cpi	r18, 0x1A	; 26
     a7a:	31 05       	cpc	r19, r1
     a7c:	2c f0       	brlt	.+10     	; 0xa88 <__pack_f+0x76>
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	40 e0       	ldi	r20, 0x00	; 0
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	2a c0       	rjmp	.+84     	; 0xadc <__pack_f+0xca>
     a88:	b8 01       	movw	r22, r16
     a8a:	a7 01       	movw	r20, r14
     a8c:	02 2e       	mov	r0, r18
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <__pack_f+0x86>
     a90:	76 95       	lsr	r23
     a92:	67 95       	ror	r22
     a94:	57 95       	ror	r21
     a96:	47 95       	ror	r20
     a98:	0a 94       	dec	r0
     a9a:	d2 f7       	brpl	.-12     	; 0xa90 <__pack_f+0x7e>
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	a0 e0       	ldi	r26, 0x00	; 0
     aa2:	b0 e0       	ldi	r27, 0x00	; 0
     aa4:	04 c0       	rjmp	.+8      	; 0xaae <__pack_f+0x9c>
     aa6:	88 0f       	add	r24, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	aa 1f       	adc	r26, r26
     aac:	bb 1f       	adc	r27, r27
     aae:	2a 95       	dec	r18
     ab0:	d2 f7       	brpl	.-12     	; 0xaa6 <__pack_f+0x94>
     ab2:	01 97       	sbiw	r24, 0x01	; 1
     ab4:	a1 09       	sbc	r26, r1
     ab6:	b1 09       	sbc	r27, r1
     ab8:	8e 21       	and	r24, r14
     aba:	9f 21       	and	r25, r15
     abc:	a0 23       	and	r26, r16
     abe:	b1 23       	and	r27, r17
     ac0:	00 97       	sbiw	r24, 0x00	; 0
     ac2:	a1 05       	cpc	r26, r1
     ac4:	b1 05       	cpc	r27, r1
     ac6:	21 f0       	breq	.+8      	; 0xad0 <__pack_f+0xbe>
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	a0 e0       	ldi	r26, 0x00	; 0
     ace:	b0 e0       	ldi	r27, 0x00	; 0
     ad0:	9a 01       	movw	r18, r20
     ad2:	ab 01       	movw	r20, r22
     ad4:	28 2b       	or	r18, r24
     ad6:	39 2b       	or	r19, r25
     ad8:	4a 2b       	or	r20, r26
     ada:	5b 2b       	or	r21, r27
     adc:	da 01       	movw	r26, r20
     ade:	c9 01       	movw	r24, r18
     ae0:	8f 77       	andi	r24, 0x7F	; 127
     ae2:	90 70       	andi	r25, 0x00	; 0
     ae4:	a0 70       	andi	r26, 0x00	; 0
     ae6:	b0 70       	andi	r27, 0x00	; 0
     ae8:	80 34       	cpi	r24, 0x40	; 64
     aea:	91 05       	cpc	r25, r1
     aec:	a1 05       	cpc	r26, r1
     aee:	b1 05       	cpc	r27, r1
     af0:	39 f4       	brne	.+14     	; 0xb00 <__pack_f+0xee>
     af2:	27 ff       	sbrs	r18, 7
     af4:	09 c0       	rjmp	.+18     	; 0xb08 <__pack_f+0xf6>
     af6:	20 5c       	subi	r18, 0xC0	; 192
     af8:	3f 4f       	sbci	r19, 0xFF	; 255
     afa:	4f 4f       	sbci	r20, 0xFF	; 255
     afc:	5f 4f       	sbci	r21, 0xFF	; 255
     afe:	04 c0       	rjmp	.+8      	; 0xb08 <__pack_f+0xf6>
     b00:	21 5c       	subi	r18, 0xC1	; 193
     b02:	3f 4f       	sbci	r19, 0xFF	; 255
     b04:	4f 4f       	sbci	r20, 0xFF	; 255
     b06:	5f 4f       	sbci	r21, 0xFF	; 255
     b08:	e0 e0       	ldi	r30, 0x00	; 0
     b0a:	f0 e0       	ldi	r31, 0x00	; 0
     b0c:	20 30       	cpi	r18, 0x00	; 0
     b0e:	a0 e0       	ldi	r26, 0x00	; 0
     b10:	3a 07       	cpc	r19, r26
     b12:	a0 e0       	ldi	r26, 0x00	; 0
     b14:	4a 07       	cpc	r20, r26
     b16:	a0 e4       	ldi	r26, 0x40	; 64
     b18:	5a 07       	cpc	r21, r26
     b1a:	10 f0       	brcs	.+4      	; 0xb20 <__pack_f+0x10e>
     b1c:	e1 e0       	ldi	r30, 0x01	; 1
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	79 01       	movw	r14, r18
     b22:	8a 01       	movw	r16, r20
     b24:	27 c0       	rjmp	.+78     	; 0xb74 <__pack_f+0x162>
     b26:	60 38       	cpi	r22, 0x80	; 128
     b28:	71 05       	cpc	r23, r1
     b2a:	64 f5       	brge	.+88     	; 0xb84 <__pack_f+0x172>
     b2c:	fb 01       	movw	r30, r22
     b2e:	e1 58       	subi	r30, 0x81	; 129
     b30:	ff 4f       	sbci	r31, 0xFF	; 255
     b32:	d8 01       	movw	r26, r16
     b34:	c7 01       	movw	r24, r14
     b36:	8f 77       	andi	r24, 0x7F	; 127
     b38:	90 70       	andi	r25, 0x00	; 0
     b3a:	a0 70       	andi	r26, 0x00	; 0
     b3c:	b0 70       	andi	r27, 0x00	; 0
     b3e:	80 34       	cpi	r24, 0x40	; 64
     b40:	91 05       	cpc	r25, r1
     b42:	a1 05       	cpc	r26, r1
     b44:	b1 05       	cpc	r27, r1
     b46:	39 f4       	brne	.+14     	; 0xb56 <__pack_f+0x144>
     b48:	e7 fe       	sbrs	r14, 7
     b4a:	0d c0       	rjmp	.+26     	; 0xb66 <__pack_f+0x154>
     b4c:	80 e4       	ldi	r24, 0x40	; 64
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	a0 e0       	ldi	r26, 0x00	; 0
     b52:	b0 e0       	ldi	r27, 0x00	; 0
     b54:	04 c0       	rjmp	.+8      	; 0xb5e <__pack_f+0x14c>
     b56:	8f e3       	ldi	r24, 0x3F	; 63
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	a0 e0       	ldi	r26, 0x00	; 0
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	e8 0e       	add	r14, r24
     b60:	f9 1e       	adc	r15, r25
     b62:	0a 1f       	adc	r16, r26
     b64:	1b 1f       	adc	r17, r27
     b66:	17 ff       	sbrs	r17, 7
     b68:	05 c0       	rjmp	.+10     	; 0xb74 <__pack_f+0x162>
     b6a:	16 95       	lsr	r17
     b6c:	07 95       	ror	r16
     b6e:	f7 94       	ror	r15
     b70:	e7 94       	ror	r14
     b72:	31 96       	adiw	r30, 0x01	; 1
     b74:	87 e0       	ldi	r24, 0x07	; 7
     b76:	16 95       	lsr	r17
     b78:	07 95       	ror	r16
     b7a:	f7 94       	ror	r15
     b7c:	e7 94       	ror	r14
     b7e:	8a 95       	dec	r24
     b80:	d1 f7       	brne	.-12     	; 0xb76 <__pack_f+0x164>
     b82:	05 c0       	rjmp	.+10     	; 0xb8e <__pack_f+0x17c>
     b84:	ee 24       	eor	r14, r14
     b86:	ff 24       	eor	r15, r15
     b88:	87 01       	movw	r16, r14
     b8a:	ef ef       	ldi	r30, 0xFF	; 255
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	6e 2f       	mov	r22, r30
     b90:	67 95       	ror	r22
     b92:	66 27       	eor	r22, r22
     b94:	67 95       	ror	r22
     b96:	90 2f       	mov	r25, r16
     b98:	9f 77       	andi	r25, 0x7F	; 127
     b9a:	d7 94       	ror	r13
     b9c:	dd 24       	eor	r13, r13
     b9e:	d7 94       	ror	r13
     ba0:	8e 2f       	mov	r24, r30
     ba2:	86 95       	lsr	r24
     ba4:	49 2f       	mov	r20, r25
     ba6:	46 2b       	or	r20, r22
     ba8:	58 2f       	mov	r21, r24
     baa:	5d 29       	or	r21, r13
     bac:	b7 01       	movw	r22, r14
     bae:	ca 01       	movw	r24, r20
     bb0:	1f 91       	pop	r17
     bb2:	0f 91       	pop	r16
     bb4:	ff 90       	pop	r15
     bb6:	ef 90       	pop	r14
     bb8:	df 90       	pop	r13
     bba:	08 95       	ret

00000bbc <__unpack_f>:
     bbc:	fc 01       	movw	r30, r24
     bbe:	db 01       	movw	r26, r22
     bc0:	40 81       	ld	r20, Z
     bc2:	51 81       	ldd	r21, Z+1	; 0x01
     bc4:	22 81       	ldd	r18, Z+2	; 0x02
     bc6:	62 2f       	mov	r22, r18
     bc8:	6f 77       	andi	r22, 0x7F	; 127
     bca:	70 e0       	ldi	r23, 0x00	; 0
     bcc:	22 1f       	adc	r18, r18
     bce:	22 27       	eor	r18, r18
     bd0:	22 1f       	adc	r18, r18
     bd2:	93 81       	ldd	r25, Z+3	; 0x03
     bd4:	89 2f       	mov	r24, r25
     bd6:	88 0f       	add	r24, r24
     bd8:	82 2b       	or	r24, r18
     bda:	28 2f       	mov	r18, r24
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	99 1f       	adc	r25, r25
     be0:	99 27       	eor	r25, r25
     be2:	99 1f       	adc	r25, r25
     be4:	11 96       	adiw	r26, 0x01	; 1
     be6:	9c 93       	st	X, r25
     be8:	11 97       	sbiw	r26, 0x01	; 1
     bea:	21 15       	cp	r18, r1
     bec:	31 05       	cpc	r19, r1
     bee:	a9 f5       	brne	.+106    	; 0xc5a <__unpack_f+0x9e>
     bf0:	41 15       	cp	r20, r1
     bf2:	51 05       	cpc	r21, r1
     bf4:	61 05       	cpc	r22, r1
     bf6:	71 05       	cpc	r23, r1
     bf8:	11 f4       	brne	.+4      	; 0xbfe <__unpack_f+0x42>
     bfa:	82 e0       	ldi	r24, 0x02	; 2
     bfc:	37 c0       	rjmp	.+110    	; 0xc6c <__unpack_f+0xb0>
     bfe:	82 e8       	ldi	r24, 0x82	; 130
     c00:	9f ef       	ldi	r25, 0xFF	; 255
     c02:	13 96       	adiw	r26, 0x03	; 3
     c04:	9c 93       	st	X, r25
     c06:	8e 93       	st	-X, r24
     c08:	12 97       	sbiw	r26, 0x02	; 2
     c0a:	9a 01       	movw	r18, r20
     c0c:	ab 01       	movw	r20, r22
     c0e:	67 e0       	ldi	r22, 0x07	; 7
     c10:	22 0f       	add	r18, r18
     c12:	33 1f       	adc	r19, r19
     c14:	44 1f       	adc	r20, r20
     c16:	55 1f       	adc	r21, r21
     c18:	6a 95       	dec	r22
     c1a:	d1 f7       	brne	.-12     	; 0xc10 <__unpack_f+0x54>
     c1c:	83 e0       	ldi	r24, 0x03	; 3
     c1e:	8c 93       	st	X, r24
     c20:	0d c0       	rjmp	.+26     	; 0xc3c <__unpack_f+0x80>
     c22:	22 0f       	add	r18, r18
     c24:	33 1f       	adc	r19, r19
     c26:	44 1f       	adc	r20, r20
     c28:	55 1f       	adc	r21, r21
     c2a:	12 96       	adiw	r26, 0x02	; 2
     c2c:	8d 91       	ld	r24, X+
     c2e:	9c 91       	ld	r25, X
     c30:	13 97       	sbiw	r26, 0x03	; 3
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	13 96       	adiw	r26, 0x03	; 3
     c36:	9c 93       	st	X, r25
     c38:	8e 93       	st	-X, r24
     c3a:	12 97       	sbiw	r26, 0x02	; 2
     c3c:	20 30       	cpi	r18, 0x00	; 0
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	38 07       	cpc	r19, r24
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	48 07       	cpc	r20, r24
     c46:	80 e4       	ldi	r24, 0x40	; 64
     c48:	58 07       	cpc	r21, r24
     c4a:	58 f3       	brcs	.-42     	; 0xc22 <__unpack_f+0x66>
     c4c:	14 96       	adiw	r26, 0x04	; 4
     c4e:	2d 93       	st	X+, r18
     c50:	3d 93       	st	X+, r19
     c52:	4d 93       	st	X+, r20
     c54:	5c 93       	st	X, r21
     c56:	17 97       	sbiw	r26, 0x07	; 7
     c58:	08 95       	ret
     c5a:	2f 3f       	cpi	r18, 0xFF	; 255
     c5c:	31 05       	cpc	r19, r1
     c5e:	79 f4       	brne	.+30     	; 0xc7e <__unpack_f+0xc2>
     c60:	41 15       	cp	r20, r1
     c62:	51 05       	cpc	r21, r1
     c64:	61 05       	cpc	r22, r1
     c66:	71 05       	cpc	r23, r1
     c68:	19 f4       	brne	.+6      	; 0xc70 <__unpack_f+0xb4>
     c6a:	84 e0       	ldi	r24, 0x04	; 4
     c6c:	8c 93       	st	X, r24
     c6e:	08 95       	ret
     c70:	64 ff       	sbrs	r22, 4
     c72:	03 c0       	rjmp	.+6      	; 0xc7a <__unpack_f+0xbe>
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	8c 93       	st	X, r24
     c78:	12 c0       	rjmp	.+36     	; 0xc9e <__unpack_f+0xe2>
     c7a:	1c 92       	st	X, r1
     c7c:	10 c0       	rjmp	.+32     	; 0xc9e <__unpack_f+0xe2>
     c7e:	2f 57       	subi	r18, 0x7F	; 127
     c80:	30 40       	sbci	r19, 0x00	; 0
     c82:	13 96       	adiw	r26, 0x03	; 3
     c84:	3c 93       	st	X, r19
     c86:	2e 93       	st	-X, r18
     c88:	12 97       	sbiw	r26, 0x02	; 2
     c8a:	83 e0       	ldi	r24, 0x03	; 3
     c8c:	8c 93       	st	X, r24
     c8e:	87 e0       	ldi	r24, 0x07	; 7
     c90:	44 0f       	add	r20, r20
     c92:	55 1f       	adc	r21, r21
     c94:	66 1f       	adc	r22, r22
     c96:	77 1f       	adc	r23, r23
     c98:	8a 95       	dec	r24
     c9a:	d1 f7       	brne	.-12     	; 0xc90 <__unpack_f+0xd4>
     c9c:	70 64       	ori	r23, 0x40	; 64
     c9e:	14 96       	adiw	r26, 0x04	; 4
     ca0:	4d 93       	st	X+, r20
     ca2:	5d 93       	st	X+, r21
     ca4:	6d 93       	st	X+, r22
     ca6:	7c 93       	st	X, r23
     ca8:	17 97       	sbiw	r26, 0x07	; 7
     caa:	08 95       	ret

00000cac <__fpcmp_parts_f>:
     cac:	1f 93       	push	r17
     cae:	dc 01       	movw	r26, r24
     cb0:	fb 01       	movw	r30, r22
     cb2:	9c 91       	ld	r25, X
     cb4:	92 30       	cpi	r25, 0x02	; 2
     cb6:	08 f4       	brcc	.+2      	; 0xcba <__fpcmp_parts_f+0xe>
     cb8:	47 c0       	rjmp	.+142    	; 0xd48 <__fpcmp_parts_f+0x9c>
     cba:	80 81       	ld	r24, Z
     cbc:	82 30       	cpi	r24, 0x02	; 2
     cbe:	08 f4       	brcc	.+2      	; 0xcc2 <__fpcmp_parts_f+0x16>
     cc0:	43 c0       	rjmp	.+134    	; 0xd48 <__fpcmp_parts_f+0x9c>
     cc2:	94 30       	cpi	r25, 0x04	; 4
     cc4:	51 f4       	brne	.+20     	; 0xcda <__fpcmp_parts_f+0x2e>
     cc6:	11 96       	adiw	r26, 0x01	; 1
     cc8:	1c 91       	ld	r17, X
     cca:	84 30       	cpi	r24, 0x04	; 4
     ccc:	99 f5       	brne	.+102    	; 0xd34 <__fpcmp_parts_f+0x88>
     cce:	81 81       	ldd	r24, Z+1	; 0x01
     cd0:	68 2f       	mov	r22, r24
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	61 1b       	sub	r22, r17
     cd6:	71 09       	sbc	r23, r1
     cd8:	3f c0       	rjmp	.+126    	; 0xd58 <__fpcmp_parts_f+0xac>
     cda:	84 30       	cpi	r24, 0x04	; 4
     cdc:	21 f0       	breq	.+8      	; 0xce6 <__fpcmp_parts_f+0x3a>
     cde:	92 30       	cpi	r25, 0x02	; 2
     ce0:	31 f4       	brne	.+12     	; 0xcee <__fpcmp_parts_f+0x42>
     ce2:	82 30       	cpi	r24, 0x02	; 2
     ce4:	b9 f1       	breq	.+110    	; 0xd54 <__fpcmp_parts_f+0xa8>
     ce6:	81 81       	ldd	r24, Z+1	; 0x01
     ce8:	88 23       	and	r24, r24
     cea:	89 f1       	breq	.+98     	; 0xd4e <__fpcmp_parts_f+0xa2>
     cec:	2d c0       	rjmp	.+90     	; 0xd48 <__fpcmp_parts_f+0x9c>
     cee:	11 96       	adiw	r26, 0x01	; 1
     cf0:	1c 91       	ld	r17, X
     cf2:	11 97       	sbiw	r26, 0x01	; 1
     cf4:	82 30       	cpi	r24, 0x02	; 2
     cf6:	f1 f0       	breq	.+60     	; 0xd34 <__fpcmp_parts_f+0x88>
     cf8:	81 81       	ldd	r24, Z+1	; 0x01
     cfa:	18 17       	cp	r17, r24
     cfc:	d9 f4       	brne	.+54     	; 0xd34 <__fpcmp_parts_f+0x88>
     cfe:	12 96       	adiw	r26, 0x02	; 2
     d00:	2d 91       	ld	r18, X+
     d02:	3c 91       	ld	r19, X
     d04:	13 97       	sbiw	r26, 0x03	; 3
     d06:	82 81       	ldd	r24, Z+2	; 0x02
     d08:	93 81       	ldd	r25, Z+3	; 0x03
     d0a:	82 17       	cp	r24, r18
     d0c:	93 07       	cpc	r25, r19
     d0e:	94 f0       	brlt	.+36     	; 0xd34 <__fpcmp_parts_f+0x88>
     d10:	28 17       	cp	r18, r24
     d12:	39 07       	cpc	r19, r25
     d14:	bc f0       	brlt	.+46     	; 0xd44 <__fpcmp_parts_f+0x98>
     d16:	14 96       	adiw	r26, 0x04	; 4
     d18:	8d 91       	ld	r24, X+
     d1a:	9d 91       	ld	r25, X+
     d1c:	0d 90       	ld	r0, X+
     d1e:	bc 91       	ld	r27, X
     d20:	a0 2d       	mov	r26, r0
     d22:	24 81       	ldd	r18, Z+4	; 0x04
     d24:	35 81       	ldd	r19, Z+5	; 0x05
     d26:	46 81       	ldd	r20, Z+6	; 0x06
     d28:	57 81       	ldd	r21, Z+7	; 0x07
     d2a:	28 17       	cp	r18, r24
     d2c:	39 07       	cpc	r19, r25
     d2e:	4a 07       	cpc	r20, r26
     d30:	5b 07       	cpc	r21, r27
     d32:	18 f4       	brcc	.+6      	; 0xd3a <__fpcmp_parts_f+0x8e>
     d34:	11 23       	and	r17, r17
     d36:	41 f0       	breq	.+16     	; 0xd48 <__fpcmp_parts_f+0x9c>
     d38:	0a c0       	rjmp	.+20     	; 0xd4e <__fpcmp_parts_f+0xa2>
     d3a:	82 17       	cp	r24, r18
     d3c:	93 07       	cpc	r25, r19
     d3e:	a4 07       	cpc	r26, r20
     d40:	b5 07       	cpc	r27, r21
     d42:	40 f4       	brcc	.+16     	; 0xd54 <__fpcmp_parts_f+0xa8>
     d44:	11 23       	and	r17, r17
     d46:	19 f0       	breq	.+6      	; 0xd4e <__fpcmp_parts_f+0xa2>
     d48:	61 e0       	ldi	r22, 0x01	; 1
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	05 c0       	rjmp	.+10     	; 0xd58 <__fpcmp_parts_f+0xac>
     d4e:	6f ef       	ldi	r22, 0xFF	; 255
     d50:	7f ef       	ldi	r23, 0xFF	; 255
     d52:	02 c0       	rjmp	.+4      	; 0xd58 <__fpcmp_parts_f+0xac>
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	cb 01       	movw	r24, r22
     d5a:	1f 91       	pop	r17
     d5c:	08 95       	ret

00000d5e <DIO_enuInit>:
#include"DIO_cofig.h"
#include"..\errorState.h"
#include "..\stdTypes.h"


ES_ERROR DIO_enuInit(void){
     d5e:	df 93       	push	r29
     d60:	cf 93       	push	r28
     d62:	0f 92       	push	r0
     d64:	cd b7       	in	r28, 0x3d	; 61
     d66:	de b7       	in	r29, 0x3e	; 62
ES_ERROR local_enuerrorstate=ES_NOK;
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	89 83       	std	Y+1, r24	; 0x01

DDRA=conc(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
     d6c:	ea e3       	ldi	r30, 0x3A	; 58
     d6e:	f0 e0       	ldi	r31, 0x00	; 0
     d70:	8f ef       	ldi	r24, 0xFF	; 255
     d72:	80 83       	st	Z, r24
DDRB=conc(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
     d74:	e7 e3       	ldi	r30, 0x37	; 55
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	8f ef       	ldi	r24, 0xFF	; 255
     d7a:	80 83       	st	Z, r24
DDRC=conc(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
     d7c:	e4 e3       	ldi	r30, 0x34	; 52
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	8f e0       	ldi	r24, 0x0F	; 15
     d82:	80 83       	st	Z, r24
DDRD=conc(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
     d84:	e1 e3       	ldi	r30, 0x31	; 49
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	85 ed       	ldi	r24, 0xD5	; 213
     d8a:	80 83       	st	Z, r24

PORTA=conc(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
     d8c:	eb e3       	ldi	r30, 0x3B	; 59
     d8e:	f0 e0       	ldi	r31, 0x00	; 0
     d90:	10 82       	st	Z, r1
PORTB=conc(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
     d92:	e8 e3       	ldi	r30, 0x38	; 56
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	10 82       	st	Z, r1
PORTC=conc(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
     d98:	e5 e3       	ldi	r30, 0x35	; 53
     d9a:	f0 e0       	ldi	r31, 0x00	; 0
     d9c:	8f ef       	ldi	r24, 0xFF	; 255
     d9e:	80 83       	st	Z, r24
PORTD=conc(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
     da0:	e2 e3       	ldi	r30, 0x32	; 50
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	10 82       	st	Z, r1

    local_enuerrorstate=ES_OK;
     da6:	19 82       	std	Y+1, r1	; 0x01

return local_enuerrorstate;
     da8:	89 81       	ldd	r24, Y+1	; 0x01
}
     daa:	0f 90       	pop	r0
     dac:	cf 91       	pop	r28
     dae:	df 91       	pop	r29
     db0:	08 95       	ret

00000db2 <DIO_enuSetportdir>:

ES_ERROR DIO_enuSetportdir(u8 copy_u8portid,u8 copy_u8value){
     db2:	df 93       	push	r29
     db4:	cf 93       	push	r28
     db6:	00 d0       	rcall	.+0      	; 0xdb8 <DIO_enuSetportdir+0x6>
     db8:	00 d0       	rcall	.+0      	; 0xdba <DIO_enuSetportdir+0x8>
     dba:	0f 92       	push	r0
     dbc:	cd b7       	in	r28, 0x3d	; 61
     dbe:	de b7       	in	r29, 0x3e	; 62
     dc0:	8a 83       	std	Y+2, r24	; 0x02
     dc2:	6b 83       	std	Y+3, r22	; 0x03
	ES_ERROR local_enuerrorstate=ES_NOK;
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	89 83       	std	Y+1, r24	; 0x01

	 if( copy_u8portid<=DIO_PORTD){
     dc8:	8a 81       	ldd	r24, Y+2	; 0x02
     dca:	84 30       	cpi	r24, 0x04	; 4
     dcc:	a0 f5       	brcc	.+104    	; 0xe36 <DIO_enuSetportdir+0x84>
		 switch(copy_u8portid){
     dce:	8a 81       	ldd	r24, Y+2	; 0x02
     dd0:	28 2f       	mov	r18, r24
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	3d 83       	std	Y+5, r19	; 0x05
     dd6:	2c 83       	std	Y+4, r18	; 0x04
     dd8:	8c 81       	ldd	r24, Y+4	; 0x04
     dda:	9d 81       	ldd	r25, Y+5	; 0x05
     ddc:	81 30       	cpi	r24, 0x01	; 1
     dde:	91 05       	cpc	r25, r1
     de0:	d1 f0       	breq	.+52     	; 0xe16 <DIO_enuSetportdir+0x64>
     de2:	2c 81       	ldd	r18, Y+4	; 0x04
     de4:	3d 81       	ldd	r19, Y+5	; 0x05
     de6:	22 30       	cpi	r18, 0x02	; 2
     de8:	31 05       	cpc	r19, r1
     dea:	2c f4       	brge	.+10     	; 0xdf6 <DIO_enuSetportdir+0x44>
     dec:	8c 81       	ldd	r24, Y+4	; 0x04
     dee:	9d 81       	ldd	r25, Y+5	; 0x05
     df0:	00 97       	sbiw	r24, 0x00	; 0
     df2:	61 f0       	breq	.+24     	; 0xe0c <DIO_enuSetportdir+0x5a>
     df4:	1e c0       	rjmp	.+60     	; 0xe32 <DIO_enuSetportdir+0x80>
     df6:	2c 81       	ldd	r18, Y+4	; 0x04
     df8:	3d 81       	ldd	r19, Y+5	; 0x05
     dfa:	22 30       	cpi	r18, 0x02	; 2
     dfc:	31 05       	cpc	r19, r1
     dfe:	81 f0       	breq	.+32     	; 0xe20 <DIO_enuSetportdir+0x6e>
     e00:	8c 81       	ldd	r24, Y+4	; 0x04
     e02:	9d 81       	ldd	r25, Y+5	; 0x05
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	91 05       	cpc	r25, r1
     e08:	81 f0       	breq	.+32     	; 0xe2a <DIO_enuSetportdir+0x78>
     e0a:	13 c0       	rjmp	.+38     	; 0xe32 <DIO_enuSetportdir+0x80>
		 case DIO_PORTA :
			DDRA=copy_u8value;
     e0c:	ea e3       	ldi	r30, 0x3A	; 58
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	8b 81       	ldd	r24, Y+3	; 0x03
     e12:	80 83       	st	Z, r24
     e14:	0e c0       	rjmp	.+28     	; 0xe32 <DIO_enuSetportdir+0x80>
		   break;
		 case DIO_PORTB :
			DDRB=copy_u8value;
     e16:	e7 e3       	ldi	r30, 0x37	; 55
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	8b 81       	ldd	r24, Y+3	; 0x03
     e1c:	80 83       	st	Z, r24
     e1e:	09 c0       	rjmp	.+18     	; 0xe32 <DIO_enuSetportdir+0x80>
			   break;
		 case DIO_PORTC :
			DDRC=copy_u8value;
     e20:	e4 e3       	ldi	r30, 0x34	; 52
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	80 83       	st	Z, r24
     e28:	04 c0       	rjmp	.+8      	; 0xe32 <DIO_enuSetportdir+0x80>
			   break;
		 case DIO_PORTD :
			DDRD=copy_u8value;
     e2a:	e1 e3       	ldi	r30, 0x31	; 49
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	80 83       	st	Z, r24
			   break;
		 }
		  local_enuerrorstate=ES_OK;
     e32:	19 82       	std	Y+1, r1	; 0x01
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <DIO_enuSetportdir+0x88>
	 }
	 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
     e36:	83 e0       	ldi	r24, 0x03	; 3
     e38:	89 83       	std	Y+1, r24	; 0x01

	return local_enuerrorstate;
     e3a:	89 81       	ldd	r24, Y+1	; 0x01
}
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	0f 90       	pop	r0
     e42:	0f 90       	pop	r0
     e44:	0f 90       	pop	r0
     e46:	cf 91       	pop	r28
     e48:	df 91       	pop	r29
     e4a:	08 95       	ret

00000e4c <DIO_enuSetportval>:



ES_ERROR DIO_enuSetportval(u8 copy_u8portid,u8 copy_u8value){
     e4c:	df 93       	push	r29
     e4e:	cf 93       	push	r28
     e50:	00 d0       	rcall	.+0      	; 0xe52 <DIO_enuSetportval+0x6>
     e52:	00 d0       	rcall	.+0      	; 0xe54 <DIO_enuSetportval+0x8>
     e54:	0f 92       	push	r0
     e56:	cd b7       	in	r28, 0x3d	; 61
     e58:	de b7       	in	r29, 0x3e	; 62
     e5a:	8a 83       	std	Y+2, r24	; 0x02
     e5c:	6b 83       	std	Y+3, r22	; 0x03
	ES_ERROR local_enuerrorstate=ES_NOK;
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	89 83       	std	Y+1, r24	; 0x01

	 if( copy_u8portid<=DIO_PORTD){
     e62:	8a 81       	ldd	r24, Y+2	; 0x02
     e64:	84 30       	cpi	r24, 0x04	; 4
     e66:	a0 f5       	brcc	.+104    	; 0xed0 <DIO_enuSetportval+0x84>
		 switch(copy_u8portid){
     e68:	8a 81       	ldd	r24, Y+2	; 0x02
     e6a:	28 2f       	mov	r18, r24
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	3d 83       	std	Y+5, r19	; 0x05
     e70:	2c 83       	std	Y+4, r18	; 0x04
     e72:	8c 81       	ldd	r24, Y+4	; 0x04
     e74:	9d 81       	ldd	r25, Y+5	; 0x05
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	91 05       	cpc	r25, r1
     e7a:	d1 f0       	breq	.+52     	; 0xeb0 <DIO_enuSetportval+0x64>
     e7c:	2c 81       	ldd	r18, Y+4	; 0x04
     e7e:	3d 81       	ldd	r19, Y+5	; 0x05
     e80:	22 30       	cpi	r18, 0x02	; 2
     e82:	31 05       	cpc	r19, r1
     e84:	2c f4       	brge	.+10     	; 0xe90 <DIO_enuSetportval+0x44>
     e86:	8c 81       	ldd	r24, Y+4	; 0x04
     e88:	9d 81       	ldd	r25, Y+5	; 0x05
     e8a:	00 97       	sbiw	r24, 0x00	; 0
     e8c:	61 f0       	breq	.+24     	; 0xea6 <DIO_enuSetportval+0x5a>
     e8e:	1e c0       	rjmp	.+60     	; 0xecc <DIO_enuSetportval+0x80>
     e90:	2c 81       	ldd	r18, Y+4	; 0x04
     e92:	3d 81       	ldd	r19, Y+5	; 0x05
     e94:	22 30       	cpi	r18, 0x02	; 2
     e96:	31 05       	cpc	r19, r1
     e98:	81 f0       	breq	.+32     	; 0xeba <DIO_enuSetportval+0x6e>
     e9a:	8c 81       	ldd	r24, Y+4	; 0x04
     e9c:	9d 81       	ldd	r25, Y+5	; 0x05
     e9e:	83 30       	cpi	r24, 0x03	; 3
     ea0:	91 05       	cpc	r25, r1
     ea2:	81 f0       	breq	.+32     	; 0xec4 <DIO_enuSetportval+0x78>
     ea4:	13 c0       	rjmp	.+38     	; 0xecc <DIO_enuSetportval+0x80>
		 case DIO_PORTA :
			PORTA=copy_u8value;
     ea6:	eb e3       	ldi	r30, 0x3B	; 59
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	8b 81       	ldd	r24, Y+3	; 0x03
     eac:	80 83       	st	Z, r24
     eae:	0e c0       	rjmp	.+28     	; 0xecc <DIO_enuSetportval+0x80>
		   break;
		 case DIO_PORTB :
			PORTB=copy_u8value;
     eb0:	e8 e3       	ldi	r30, 0x38	; 56
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	8b 81       	ldd	r24, Y+3	; 0x03
     eb6:	80 83       	st	Z, r24
     eb8:	09 c0       	rjmp	.+18     	; 0xecc <DIO_enuSetportval+0x80>
			   break;
		 case DIO_PORTC :
			PORTC=copy_u8value;
     eba:	e5 e3       	ldi	r30, 0x35	; 53
     ebc:	f0 e0       	ldi	r31, 0x00	; 0
     ebe:	8b 81       	ldd	r24, Y+3	; 0x03
     ec0:	80 83       	st	Z, r24
     ec2:	04 c0       	rjmp	.+8      	; 0xecc <DIO_enuSetportval+0x80>
			   break;
		 case DIO_PORTD :
			PORTD=copy_u8value;
     ec4:	e2 e3       	ldi	r30, 0x32	; 50
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
     eca:	80 83       	st	Z, r24
			   break;
		 }
		  local_enuerrorstate=ES_OK;
     ecc:	19 82       	std	Y+1, r1	; 0x01
     ece:	02 c0       	rjmp	.+4      	; 0xed4 <DIO_enuSetportval+0x88>
	 }
	 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
     ed0:	83 e0       	ldi	r24, 0x03	; 3
     ed2:	89 83       	std	Y+1, r24	; 0x01

	return local_enuerrorstate;
     ed4:	89 81       	ldd	r24, Y+1	; 0x01
}
     ed6:	0f 90       	pop	r0
     ed8:	0f 90       	pop	r0
     eda:	0f 90       	pop	r0
     edc:	0f 90       	pop	r0
     ede:	0f 90       	pop	r0
     ee0:	cf 91       	pop	r28
     ee2:	df 91       	pop	r29
     ee4:	08 95       	ret

00000ee6 <DIO_enuSetpindir>:
ES_ERROR DIO_enuSetpindir(u8 copy_u8portid,u8 copy_u8pinid,u8 copy_u8value){
     ee6:	df 93       	push	r29
     ee8:	cf 93       	push	r28
     eea:	00 d0       	rcall	.+0      	; 0xeec <DIO_enuSetpindir+0x6>
     eec:	00 d0       	rcall	.+0      	; 0xeee <DIO_enuSetpindir+0x8>
     eee:	00 d0       	rcall	.+0      	; 0xef0 <DIO_enuSetpindir+0xa>
     ef0:	cd b7       	in	r28, 0x3d	; 61
     ef2:	de b7       	in	r29, 0x3e	; 62
     ef4:	8a 83       	std	Y+2, r24	; 0x02
     ef6:	6b 83       	std	Y+3, r22	; 0x03
     ef8:	4c 83       	std	Y+4, r20	; 0x04
	ES_ERROR local_enuerrorstate=ES_NOK;
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	89 83       	std	Y+1, r24	; 0x01

if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7&&copy_u8value<=OUTPUT ){
     efe:	8a 81       	ldd	r24, Y+2	; 0x02
     f00:	84 30       	cpi	r24, 0x04	; 4
     f02:	08 f0       	brcs	.+2      	; 0xf06 <DIO_enuSetpindir+0x20>
     f04:	d4 c0       	rjmp	.+424    	; 0x10ae <DIO_enuSetpindir+0x1c8>
     f06:	8b 81       	ldd	r24, Y+3	; 0x03
     f08:	88 30       	cpi	r24, 0x08	; 8
     f0a:	08 f0       	brcs	.+2      	; 0xf0e <DIO_enuSetpindir+0x28>
     f0c:	d0 c0       	rjmp	.+416    	; 0x10ae <DIO_enuSetpindir+0x1c8>
     f0e:	8c 81       	ldd	r24, Y+4	; 0x04
     f10:	82 30       	cpi	r24, 0x02	; 2
     f12:	08 f0       	brcs	.+2      	; 0xf16 <DIO_enuSetpindir+0x30>
     f14:	cc c0       	rjmp	.+408    	; 0x10ae <DIO_enuSetpindir+0x1c8>
	 if( copy_u8portid<=DIO_PORTD){
     f16:	8a 81       	ldd	r24, Y+2	; 0x02
     f18:	84 30       	cpi	r24, 0x04	; 4
     f1a:	08 f0       	brcs	.+2      	; 0xf1e <DIO_enuSetpindir+0x38>
     f1c:	ca c0       	rjmp	.+404    	; 0x10b2 <DIO_enuSetpindir+0x1cc>
			 switch(copy_u8portid){
     f1e:	8a 81       	ldd	r24, Y+2	; 0x02
     f20:	28 2f       	mov	r18, r24
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	3e 83       	std	Y+6, r19	; 0x06
     f26:	2d 83       	std	Y+5, r18	; 0x05
     f28:	6d 81       	ldd	r22, Y+5	; 0x05
     f2a:	7e 81       	ldd	r23, Y+6	; 0x06
     f2c:	61 30       	cpi	r22, 0x01	; 1
     f2e:	71 05       	cpc	r23, r1
     f30:	09 f4       	brne	.+2      	; 0xf34 <DIO_enuSetpindir+0x4e>
     f32:	41 c0       	rjmp	.+130    	; 0xfb6 <DIO_enuSetpindir+0xd0>
     f34:	8d 81       	ldd	r24, Y+5	; 0x05
     f36:	9e 81       	ldd	r25, Y+6	; 0x06
     f38:	82 30       	cpi	r24, 0x02	; 2
     f3a:	91 05       	cpc	r25, r1
     f3c:	34 f4       	brge	.+12     	; 0xf4a <DIO_enuSetpindir+0x64>
     f3e:	2d 81       	ldd	r18, Y+5	; 0x05
     f40:	3e 81       	ldd	r19, Y+6	; 0x06
     f42:	21 15       	cp	r18, r1
     f44:	31 05       	cpc	r19, r1
     f46:	71 f0       	breq	.+28     	; 0xf64 <DIO_enuSetpindir+0x7e>
     f48:	b0 c0       	rjmp	.+352    	; 0x10aa <DIO_enuSetpindir+0x1c4>
     f4a:	6d 81       	ldd	r22, Y+5	; 0x05
     f4c:	7e 81       	ldd	r23, Y+6	; 0x06
     f4e:	62 30       	cpi	r22, 0x02	; 2
     f50:	71 05       	cpc	r23, r1
     f52:	09 f4       	brne	.+2      	; 0xf56 <DIO_enuSetpindir+0x70>
     f54:	59 c0       	rjmp	.+178    	; 0x1008 <DIO_enuSetpindir+0x122>
     f56:	8d 81       	ldd	r24, Y+5	; 0x05
     f58:	9e 81       	ldd	r25, Y+6	; 0x06
     f5a:	83 30       	cpi	r24, 0x03	; 3
     f5c:	91 05       	cpc	r25, r1
     f5e:	09 f4       	brne	.+2      	; 0xf62 <DIO_enuSetpindir+0x7c>
     f60:	7c c0       	rjmp	.+248    	; 0x105a <DIO_enuSetpindir+0x174>
     f62:	a3 c0       	rjmp	.+326    	; 0x10aa <DIO_enuSetpindir+0x1c4>
			 case DIO_PORTA :
				DDRA&=~(MASK_BIT<<copy_u8pinid);
     f64:	aa e3       	ldi	r26, 0x3A	; 58
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	ea e3       	ldi	r30, 0x3A	; 58
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	48 2f       	mov	r20, r24
     f70:	8b 81       	ldd	r24, Y+3	; 0x03
     f72:	28 2f       	mov	r18, r24
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	81 e0       	ldi	r24, 0x01	; 1
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <DIO_enuSetpindir+0x9a>
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	2a 95       	dec	r18
     f82:	e2 f7       	brpl	.-8      	; 0xf7c <DIO_enuSetpindir+0x96>
     f84:	80 95       	com	r24
     f86:	84 23       	and	r24, r20
     f88:	8c 93       	st	X, r24
				DDRA|=(copy_u8value<<copy_u8pinid);
     f8a:	aa e3       	ldi	r26, 0x3A	; 58
     f8c:	b0 e0       	ldi	r27, 0x00	; 0
     f8e:	ea e3       	ldi	r30, 0x3A	; 58
     f90:	f0 e0       	ldi	r31, 0x00	; 0
     f92:	80 81       	ld	r24, Z
     f94:	48 2f       	mov	r20, r24
     f96:	8c 81       	ldd	r24, Y+4	; 0x04
     f98:	28 2f       	mov	r18, r24
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	8b 81       	ldd	r24, Y+3	; 0x03
     f9e:	88 2f       	mov	r24, r24
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	b9 01       	movw	r22, r18
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <DIO_enuSetpindir+0xc4>
     fa6:	66 0f       	add	r22, r22
     fa8:	77 1f       	adc	r23, r23
     faa:	8a 95       	dec	r24
     fac:	e2 f7       	brpl	.-8      	; 0xfa6 <DIO_enuSetpindir+0xc0>
     fae:	cb 01       	movw	r24, r22
     fb0:	84 2b       	or	r24, r20
     fb2:	8c 93       	st	X, r24
     fb4:	7a c0       	rjmp	.+244    	; 0x10aa <DIO_enuSetpindir+0x1c4>
			   break;
			 case DIO_PORTB :
					DDRB&=~(MASK_BIT<<copy_u8pinid);
     fb6:	a7 e3       	ldi	r26, 0x37	; 55
     fb8:	b0 e0       	ldi	r27, 0x00	; 0
     fba:	e7 e3       	ldi	r30, 0x37	; 55
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	80 81       	ld	r24, Z
     fc0:	48 2f       	mov	r20, r24
     fc2:	8b 81       	ldd	r24, Y+3	; 0x03
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	81 e0       	ldi	r24, 0x01	; 1
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	02 c0       	rjmp	.+4      	; 0xfd2 <DIO_enuSetpindir+0xec>
     fce:	88 0f       	add	r24, r24
     fd0:	99 1f       	adc	r25, r25
     fd2:	2a 95       	dec	r18
     fd4:	e2 f7       	brpl	.-8      	; 0xfce <DIO_enuSetpindir+0xe8>
     fd6:	80 95       	com	r24
     fd8:	84 23       	and	r24, r20
     fda:	8c 93       	st	X, r24
				    DDRB|=(copy_u8value<<copy_u8pinid);
     fdc:	a7 e3       	ldi	r26, 0x37	; 55
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	e7 e3       	ldi	r30, 0x37	; 55
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	80 81       	ld	r24, Z
     fe6:	48 2f       	mov	r20, r24
     fe8:	8c 81       	ldd	r24, Y+4	; 0x04
     fea:	28 2f       	mov	r18, r24
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	88 2f       	mov	r24, r24
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	b9 01       	movw	r22, r18
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <DIO_enuSetpindir+0x116>
     ff8:	66 0f       	add	r22, r22
     ffa:	77 1f       	adc	r23, r23
     ffc:	8a 95       	dec	r24
     ffe:	e2 f7       	brpl	.-8      	; 0xff8 <DIO_enuSetpindir+0x112>
    1000:	cb 01       	movw	r24, r22
    1002:	84 2b       	or	r24, r20
    1004:	8c 93       	st	X, r24
    1006:	51 c0       	rjmp	.+162    	; 0x10aa <DIO_enuSetpindir+0x1c4>
				   break;
			 case DIO_PORTC :
				 DDRC&=~(MASK_BIT<<copy_u8pinid);
    1008:	a4 e3       	ldi	r26, 0x34	; 52
    100a:	b0 e0       	ldi	r27, 0x00	; 0
    100c:	e4 e3       	ldi	r30, 0x34	; 52
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	80 81       	ld	r24, Z
    1012:	48 2f       	mov	r20, r24
    1014:	8b 81       	ldd	r24, Y+3	; 0x03
    1016:	28 2f       	mov	r18, r24
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <DIO_enuSetpindir+0x13e>
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	2a 95       	dec	r18
    1026:	e2 f7       	brpl	.-8      	; 0x1020 <DIO_enuSetpindir+0x13a>
    1028:	80 95       	com	r24
    102a:	84 23       	and	r24, r20
    102c:	8c 93       	st	X, r24
				 DDRC|=(copy_u8value<<copy_u8pinid);
    102e:	a4 e3       	ldi	r26, 0x34	; 52
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	e4 e3       	ldi	r30, 0x34	; 52
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	48 2f       	mov	r20, r24
    103a:	8c 81       	ldd	r24, Y+4	; 0x04
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	8b 81       	ldd	r24, Y+3	; 0x03
    1042:	88 2f       	mov	r24, r24
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	b9 01       	movw	r22, r18
    1048:	02 c0       	rjmp	.+4      	; 0x104e <DIO_enuSetpindir+0x168>
    104a:	66 0f       	add	r22, r22
    104c:	77 1f       	adc	r23, r23
    104e:	8a 95       	dec	r24
    1050:	e2 f7       	brpl	.-8      	; 0x104a <DIO_enuSetpindir+0x164>
    1052:	cb 01       	movw	r24, r22
    1054:	84 2b       	or	r24, r20
    1056:	8c 93       	st	X, r24
    1058:	28 c0       	rjmp	.+80     	; 0x10aa <DIO_enuSetpindir+0x1c4>
				   break;
			 case DIO_PORTD :
				 DDRD&=~(MASK_BIT<<copy_u8pinid);
    105a:	a1 e3       	ldi	r26, 0x31	; 49
    105c:	b0 e0       	ldi	r27, 0x00	; 0
    105e:	e1 e3       	ldi	r30, 0x31	; 49
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	80 81       	ld	r24, Z
    1064:	48 2f       	mov	r20, r24
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <DIO_enuSetpindir+0x190>
    1072:	88 0f       	add	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	2a 95       	dec	r18
    1078:	e2 f7       	brpl	.-8      	; 0x1072 <DIO_enuSetpindir+0x18c>
    107a:	80 95       	com	r24
    107c:	84 23       	and	r24, r20
    107e:	8c 93       	st	X, r24
				 DDRD|=(copy_u8value<<copy_u8pinid);
    1080:	a1 e3       	ldi	r26, 0x31	; 49
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	e1 e3       	ldi	r30, 0x31	; 49
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	80 81       	ld	r24, Z
    108a:	48 2f       	mov	r20, r24
    108c:	8c 81       	ldd	r24, Y+4	; 0x04
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	8b 81       	ldd	r24, Y+3	; 0x03
    1094:	88 2f       	mov	r24, r24
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	b9 01       	movw	r22, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <DIO_enuSetpindir+0x1ba>
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	8a 95       	dec	r24
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <DIO_enuSetpindir+0x1b6>
    10a4:	cb 01       	movw	r24, r22
    10a6:	84 2b       	or	r24, r20
    10a8:	8c 93       	st	X, r24
				   break;
			 }
			 local_enuerrorstate=ES_OK;
    10aa:	19 82       	std	Y+1, r1	; 0x01
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <DIO_enuSetpindir+0x1cc>
		 }
}
else  {local_enuerrorstate=ES_OUT_OF_RANGE;}
    10ae:	83 e0       	ldi	r24, 0x03	; 3
    10b0:	89 83       	std	Y+1, r24	; 0x01

		return local_enuerrorstate;
    10b2:	89 81       	ldd	r24, Y+1	; 0x01
}
    10b4:	26 96       	adiw	r28, 0x06	; 6
    10b6:	0f b6       	in	r0, 0x3f	; 63
    10b8:	f8 94       	cli
    10ba:	de bf       	out	0x3e, r29	; 62
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	cd bf       	out	0x3d, r28	; 61
    10c0:	cf 91       	pop	r28
    10c2:	df 91       	pop	r29
    10c4:	08 95       	ret

000010c6 <DIO_enuSetpinval>:

ES_ERROR DIO_enuSetpinval(u8 copy_u8portid,u8 copy_u8pinid,u8 copy_u8value){
    10c6:	df 93       	push	r29
    10c8:	cf 93       	push	r28
    10ca:	00 d0       	rcall	.+0      	; 0x10cc <DIO_enuSetpinval+0x6>
    10cc:	00 d0       	rcall	.+0      	; 0x10ce <DIO_enuSetpinval+0x8>
    10ce:	00 d0       	rcall	.+0      	; 0x10d0 <DIO_enuSetpinval+0xa>
    10d0:	cd b7       	in	r28, 0x3d	; 61
    10d2:	de b7       	in	r29, 0x3e	; 62
    10d4:	8a 83       	std	Y+2, r24	; 0x02
    10d6:	6b 83       	std	Y+3, r22	; 0x03
    10d8:	4c 83       	std	Y+4, r20	; 0x04
	ES_ERROR local_enuerrorstate=ES_NOK;
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	89 83       	std	Y+1, r24	; 0x01

	if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7&&copy_u8value<=OUTPUT ){
    10de:	8a 81       	ldd	r24, Y+2	; 0x02
    10e0:	84 30       	cpi	r24, 0x04	; 4
    10e2:	08 f0       	brcs	.+2      	; 0x10e6 <DIO_enuSetpinval+0x20>
    10e4:	d0 c0       	rjmp	.+416    	; 0x1286 <DIO_enuSetpinval+0x1c0>
    10e6:	8b 81       	ldd	r24, Y+3	; 0x03
    10e8:	88 30       	cpi	r24, 0x08	; 8
    10ea:	08 f0       	brcs	.+2      	; 0x10ee <DIO_enuSetpinval+0x28>
    10ec:	cc c0       	rjmp	.+408    	; 0x1286 <DIO_enuSetpinval+0x1c0>
    10ee:	8c 81       	ldd	r24, Y+4	; 0x04
    10f0:	82 30       	cpi	r24, 0x02	; 2
    10f2:	08 f0       	brcs	.+2      	; 0x10f6 <DIO_enuSetpinval+0x30>
    10f4:	c8 c0       	rjmp	.+400    	; 0x1286 <DIO_enuSetpinval+0x1c0>

				 switch(copy_u8portid){
    10f6:	8a 81       	ldd	r24, Y+2	; 0x02
    10f8:	28 2f       	mov	r18, r24
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	3e 83       	std	Y+6, r19	; 0x06
    10fe:	2d 83       	std	Y+5, r18	; 0x05
    1100:	6d 81       	ldd	r22, Y+5	; 0x05
    1102:	7e 81       	ldd	r23, Y+6	; 0x06
    1104:	61 30       	cpi	r22, 0x01	; 1
    1106:	71 05       	cpc	r23, r1
    1108:	09 f4       	brne	.+2      	; 0x110c <DIO_enuSetpinval+0x46>
    110a:	41 c0       	rjmp	.+130    	; 0x118e <DIO_enuSetpinval+0xc8>
    110c:	8d 81       	ldd	r24, Y+5	; 0x05
    110e:	9e 81       	ldd	r25, Y+6	; 0x06
    1110:	82 30       	cpi	r24, 0x02	; 2
    1112:	91 05       	cpc	r25, r1
    1114:	34 f4       	brge	.+12     	; 0x1122 <DIO_enuSetpinval+0x5c>
    1116:	2d 81       	ldd	r18, Y+5	; 0x05
    1118:	3e 81       	ldd	r19, Y+6	; 0x06
    111a:	21 15       	cp	r18, r1
    111c:	31 05       	cpc	r19, r1
    111e:	71 f0       	breq	.+28     	; 0x113c <DIO_enuSetpinval+0x76>
    1120:	b0 c0       	rjmp	.+352    	; 0x1282 <DIO_enuSetpinval+0x1bc>
    1122:	6d 81       	ldd	r22, Y+5	; 0x05
    1124:	7e 81       	ldd	r23, Y+6	; 0x06
    1126:	62 30       	cpi	r22, 0x02	; 2
    1128:	71 05       	cpc	r23, r1
    112a:	09 f4       	brne	.+2      	; 0x112e <DIO_enuSetpinval+0x68>
    112c:	59 c0       	rjmp	.+178    	; 0x11e0 <DIO_enuSetpinval+0x11a>
    112e:	8d 81       	ldd	r24, Y+5	; 0x05
    1130:	9e 81       	ldd	r25, Y+6	; 0x06
    1132:	83 30       	cpi	r24, 0x03	; 3
    1134:	91 05       	cpc	r25, r1
    1136:	09 f4       	brne	.+2      	; 0x113a <DIO_enuSetpinval+0x74>
    1138:	7c c0       	rjmp	.+248    	; 0x1232 <DIO_enuSetpinval+0x16c>
    113a:	a3 c0       	rjmp	.+326    	; 0x1282 <DIO_enuSetpinval+0x1bc>
				 case DIO_PORTA :
					PORTA&=~(MASK_BIT<<copy_u8pinid);
    113c:	ab e3       	ldi	r26, 0x3B	; 59
    113e:	b0 e0       	ldi	r27, 0x00	; 0
    1140:	eb e3       	ldi	r30, 0x3B	; 59
    1142:	f0 e0       	ldi	r31, 0x00	; 0
    1144:	80 81       	ld	r24, Z
    1146:	48 2f       	mov	r20, r24
    1148:	8b 81       	ldd	r24, Y+3	; 0x03
    114a:	28 2f       	mov	r18, r24
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	81 e0       	ldi	r24, 0x01	; 1
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <DIO_enuSetpinval+0x92>
    1154:	88 0f       	add	r24, r24
    1156:	99 1f       	adc	r25, r25
    1158:	2a 95       	dec	r18
    115a:	e2 f7       	brpl	.-8      	; 0x1154 <DIO_enuSetpinval+0x8e>
    115c:	80 95       	com	r24
    115e:	84 23       	and	r24, r20
    1160:	8c 93       	st	X, r24
					PORTA|=(copy_u8value<<copy_u8pinid);
    1162:	ab e3       	ldi	r26, 0x3B	; 59
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	eb e3       	ldi	r30, 0x3B	; 59
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	48 2f       	mov	r20, r24
    116e:	8c 81       	ldd	r24, Y+4	; 0x04
    1170:	28 2f       	mov	r18, r24
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	8b 81       	ldd	r24, Y+3	; 0x03
    1176:	88 2f       	mov	r24, r24
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	b9 01       	movw	r22, r18
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <DIO_enuSetpinval+0xbc>
    117e:	66 0f       	add	r22, r22
    1180:	77 1f       	adc	r23, r23
    1182:	8a 95       	dec	r24
    1184:	e2 f7       	brpl	.-8      	; 0x117e <DIO_enuSetpinval+0xb8>
    1186:	cb 01       	movw	r24, r22
    1188:	84 2b       	or	r24, r20
    118a:	8c 93       	st	X, r24
    118c:	7a c0       	rjmp	.+244    	; 0x1282 <DIO_enuSetpinval+0x1bc>
				   break;
				 case DIO_PORTB :
						PORTB&=~(MASK_BIT<<copy_u8pinid);
    118e:	a8 e3       	ldi	r26, 0x38	; 56
    1190:	b0 e0       	ldi	r27, 0x00	; 0
    1192:	e8 e3       	ldi	r30, 0x38	; 56
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	80 81       	ld	r24, Z
    1198:	48 2f       	mov	r20, r24
    119a:	8b 81       	ldd	r24, Y+3	; 0x03
    119c:	28 2f       	mov	r18, r24
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	81 e0       	ldi	r24, 0x01	; 1
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <DIO_enuSetpinval+0xe4>
    11a6:	88 0f       	add	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	2a 95       	dec	r18
    11ac:	e2 f7       	brpl	.-8      	; 0x11a6 <DIO_enuSetpinval+0xe0>
    11ae:	80 95       	com	r24
    11b0:	84 23       	and	r24, r20
    11b2:	8c 93       	st	X, r24
					    PORTB|=(copy_u8value<<copy_u8pinid);
    11b4:	a8 e3       	ldi	r26, 0x38	; 56
    11b6:	b0 e0       	ldi	r27, 0x00	; 0
    11b8:	e8 e3       	ldi	r30, 0x38	; 56
    11ba:	f0 e0       	ldi	r31, 0x00	; 0
    11bc:	80 81       	ld	r24, Z
    11be:	48 2f       	mov	r20, r24
    11c0:	8c 81       	ldd	r24, Y+4	; 0x04
    11c2:	28 2f       	mov	r18, r24
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	8b 81       	ldd	r24, Y+3	; 0x03
    11c8:	88 2f       	mov	r24, r24
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	b9 01       	movw	r22, r18
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <DIO_enuSetpinval+0x10e>
    11d0:	66 0f       	add	r22, r22
    11d2:	77 1f       	adc	r23, r23
    11d4:	8a 95       	dec	r24
    11d6:	e2 f7       	brpl	.-8      	; 0x11d0 <DIO_enuSetpinval+0x10a>
    11d8:	cb 01       	movw	r24, r22
    11da:	84 2b       	or	r24, r20
    11dc:	8c 93       	st	X, r24
    11de:	51 c0       	rjmp	.+162    	; 0x1282 <DIO_enuSetpinval+0x1bc>
					   break;
				 case DIO_PORTC :
					 PORTC&=~(MASK_BIT<<copy_u8pinid);
    11e0:	a5 e3       	ldi	r26, 0x35	; 53
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	e5 e3       	ldi	r30, 0x35	; 53
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	80 81       	ld	r24, Z
    11ea:	48 2f       	mov	r20, r24
    11ec:	8b 81       	ldd	r24, Y+3	; 0x03
    11ee:	28 2f       	mov	r18, r24
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <DIO_enuSetpinval+0x136>
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	2a 95       	dec	r18
    11fe:	e2 f7       	brpl	.-8      	; 0x11f8 <DIO_enuSetpinval+0x132>
    1200:	80 95       	com	r24
    1202:	84 23       	and	r24, r20
    1204:	8c 93       	st	X, r24
					 PORTC|=(copy_u8value<<copy_u8pinid);
    1206:	a5 e3       	ldi	r26, 0x35	; 53
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	e5 e3       	ldi	r30, 0x35	; 53
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	48 2f       	mov	r20, r24
    1212:	8c 81       	ldd	r24, Y+4	; 0x04
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	8b 81       	ldd	r24, Y+3	; 0x03
    121a:	88 2f       	mov	r24, r24
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	b9 01       	movw	r22, r18
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <DIO_enuSetpinval+0x160>
    1222:	66 0f       	add	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	8a 95       	dec	r24
    1228:	e2 f7       	brpl	.-8      	; 0x1222 <DIO_enuSetpinval+0x15c>
    122a:	cb 01       	movw	r24, r22
    122c:	84 2b       	or	r24, r20
    122e:	8c 93       	st	X, r24
    1230:	28 c0       	rjmp	.+80     	; 0x1282 <DIO_enuSetpinval+0x1bc>
					   break;
				 case DIO_PORTD :
					 PORTD&=~(MASK_BIT<<copy_u8pinid);
    1232:	a2 e3       	ldi	r26, 0x32	; 50
    1234:	b0 e0       	ldi	r27, 0x00	; 0
    1236:	e2 e3       	ldi	r30, 0x32	; 50
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	80 81       	ld	r24, Z
    123c:	48 2f       	mov	r20, r24
    123e:	8b 81       	ldd	r24, Y+3	; 0x03
    1240:	28 2f       	mov	r18, r24
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	02 c0       	rjmp	.+4      	; 0x124e <DIO_enuSetpinval+0x188>
    124a:	88 0f       	add	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	2a 95       	dec	r18
    1250:	e2 f7       	brpl	.-8      	; 0x124a <DIO_enuSetpinval+0x184>
    1252:	80 95       	com	r24
    1254:	84 23       	and	r24, r20
    1256:	8c 93       	st	X, r24
					 PORTD|=(copy_u8value<<copy_u8pinid);
    1258:	a2 e3       	ldi	r26, 0x32	; 50
    125a:	b0 e0       	ldi	r27, 0x00	; 0
    125c:	e2 e3       	ldi	r30, 0x32	; 50
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	48 2f       	mov	r20, r24
    1264:	8c 81       	ldd	r24, Y+4	; 0x04
    1266:	28 2f       	mov	r18, r24
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	8b 81       	ldd	r24, Y+3	; 0x03
    126c:	88 2f       	mov	r24, r24
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	b9 01       	movw	r22, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_enuSetpinval+0x1b2>
    1274:	66 0f       	add	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	8a 95       	dec	r24
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_enuSetpinval+0x1ae>
    127c:	cb 01       	movw	r24, r22
    127e:	84 2b       	or	r24, r20
    1280:	8c 93       	st	X, r24
					   break;
				 }
				  local_enuerrorstate=ES_OK;
    1282:	19 82       	std	Y+1, r1	; 0x01
    1284:	02 c0       	rjmp	.+4      	; 0x128a <DIO_enuSetpinval+0x1c4>

	}
	else  {local_enuerrorstate=ES_OUT_OF_RANGE;}
    1286:	83 e0       	ldi	r24, 0x03	; 3
    1288:	89 83       	std	Y+1, r24	; 0x01

		return local_enuerrorstate;
    128a:	89 81       	ldd	r24, Y+1	; 0x01
}
    128c:	26 96       	adiw	r28, 0x06	; 6
    128e:	0f b6       	in	r0, 0x3f	; 63
    1290:	f8 94       	cli
    1292:	de bf       	out	0x3e, r29	; 62
    1294:	0f be       	out	0x3f, r0	; 63
    1296:	cd bf       	out	0x3d, r28	; 61
    1298:	cf 91       	pop	r28
    129a:	df 91       	pop	r29
    129c:	08 95       	ret

0000129e <DIO_enutogport>:

ES_ERROR DIO_enutogport(u8 copy_u8portid){
    129e:	df 93       	push	r29
    12a0:	cf 93       	push	r28
    12a2:	00 d0       	rcall	.+0      	; 0x12a4 <DIO_enutogport+0x6>
    12a4:	00 d0       	rcall	.+0      	; 0x12a6 <DIO_enutogport+0x8>
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	8a 83       	std	Y+2, r24	; 0x02
	ES_ERROR local_enuerrorstate=ES_NOK;
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	89 83       	std	Y+1, r24	; 0x01


	 if( copy_u8portid<=DIO_PORTD){
    12b0:	8a 81       	ldd	r24, Y+2	; 0x02
    12b2:	84 30       	cpi	r24, 0x04	; 4
    12b4:	08 f0       	brcs	.+2      	; 0x12b8 <DIO_enutogport+0x1a>
    12b6:	40 c0       	rjmp	.+128    	; 0x1338 <DIO_enutogport+0x9a>
			 switch(copy_u8portid){
    12b8:	8a 81       	ldd	r24, Y+2	; 0x02
    12ba:	28 2f       	mov	r18, r24
    12bc:	30 e0       	ldi	r19, 0x00	; 0
    12be:	3c 83       	std	Y+4, r19	; 0x04
    12c0:	2b 83       	std	Y+3, r18	; 0x03
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	9c 81       	ldd	r25, Y+4	; 0x04
    12c6:	81 30       	cpi	r24, 0x01	; 1
    12c8:	91 05       	cpc	r25, r1
    12ca:	e9 f0       	breq	.+58     	; 0x1306 <DIO_enutogport+0x68>
    12cc:	2b 81       	ldd	r18, Y+3	; 0x03
    12ce:	3c 81       	ldd	r19, Y+4	; 0x04
    12d0:	22 30       	cpi	r18, 0x02	; 2
    12d2:	31 05       	cpc	r19, r1
    12d4:	2c f4       	brge	.+10     	; 0x12e0 <DIO_enutogport+0x42>
    12d6:	8b 81       	ldd	r24, Y+3	; 0x03
    12d8:	9c 81       	ldd	r25, Y+4	; 0x04
    12da:	00 97       	sbiw	r24, 0x00	; 0
    12dc:	61 f0       	breq	.+24     	; 0x12f6 <DIO_enutogport+0x58>
    12de:	2a c0       	rjmp	.+84     	; 0x1334 <DIO_enutogport+0x96>
    12e0:	2b 81       	ldd	r18, Y+3	; 0x03
    12e2:	3c 81       	ldd	r19, Y+4	; 0x04
    12e4:	22 30       	cpi	r18, 0x02	; 2
    12e6:	31 05       	cpc	r19, r1
    12e8:	b1 f0       	breq	.+44     	; 0x1316 <DIO_enutogport+0x78>
    12ea:	8b 81       	ldd	r24, Y+3	; 0x03
    12ec:	9c 81       	ldd	r25, Y+4	; 0x04
    12ee:	83 30       	cpi	r24, 0x03	; 3
    12f0:	91 05       	cpc	r25, r1
    12f2:	c9 f0       	breq	.+50     	; 0x1326 <DIO_enutogport+0x88>
    12f4:	1f c0       	rjmp	.+62     	; 0x1334 <DIO_enutogport+0x96>
			 case DIO_PORTA :
				PORTA=~PORTA;
    12f6:	ab e3       	ldi	r26, 0x3B	; 59
    12f8:	b0 e0       	ldi	r27, 0x00	; 0
    12fa:	eb e3       	ldi	r30, 0x3B	; 59
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	80 81       	ld	r24, Z
    1300:	80 95       	com	r24
    1302:	8c 93       	st	X, r24
    1304:	17 c0       	rjmp	.+46     	; 0x1334 <DIO_enutogport+0x96>
			   break;
			 case DIO_PORTB :
				PORTB=~PORTB;
    1306:	a8 e3       	ldi	r26, 0x38	; 56
    1308:	b0 e0       	ldi	r27, 0x00	; 0
    130a:	e8 e3       	ldi	r30, 0x38	; 56
    130c:	f0 e0       	ldi	r31, 0x00	; 0
    130e:	80 81       	ld	r24, Z
    1310:	80 95       	com	r24
    1312:	8c 93       	st	X, r24
    1314:	0f c0       	rjmp	.+30     	; 0x1334 <DIO_enutogport+0x96>
				   break;
			 case DIO_PORTC :
				PORTC=~PORTC;
    1316:	a5 e3       	ldi	r26, 0x35	; 53
    1318:	b0 e0       	ldi	r27, 0x00	; 0
    131a:	e5 e3       	ldi	r30, 0x35	; 53
    131c:	f0 e0       	ldi	r31, 0x00	; 0
    131e:	80 81       	ld	r24, Z
    1320:	80 95       	com	r24
    1322:	8c 93       	st	X, r24
    1324:	07 c0       	rjmp	.+14     	; 0x1334 <DIO_enutogport+0x96>
				   break;
			 case DIO_PORTD :
				PORTD=~PORTD;
    1326:	a2 e3       	ldi	r26, 0x32	; 50
    1328:	b0 e0       	ldi	r27, 0x00	; 0
    132a:	e2 e3       	ldi	r30, 0x32	; 50
    132c:	f0 e0       	ldi	r31, 0x00	; 0
    132e:	80 81       	ld	r24, Z
    1330:	80 95       	com	r24
    1332:	8c 93       	st	X, r24
				   break;
			 }
			  local_enuerrorstate=ES_OK;
    1334:	19 82       	std	Y+1, r1	; 0x01
    1336:	02 c0       	rjmp	.+4      	; 0x133c <DIO_enutogport+0x9e>
		 }
		 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
    1338:	83 e0       	ldi	r24, 0x03	; 3
    133a:	89 83       	std	Y+1, r24	; 0x01


		return local_enuerrorstate;
    133c:	89 81       	ldd	r24, Y+1	; 0x01
}
    133e:	0f 90       	pop	r0
    1340:	0f 90       	pop	r0
    1342:	0f 90       	pop	r0
    1344:	0f 90       	pop	r0
    1346:	cf 91       	pop	r28
    1348:	df 91       	pop	r29
    134a:	08 95       	ret

0000134c <DIO_enutogpin>:

ES_ERROR DIO_enutogpin(u8 copy_u8portid,u8 copy_u8pinid){
    134c:	df 93       	push	r29
    134e:	cf 93       	push	r28
    1350:	00 d0       	rcall	.+0      	; 0x1352 <DIO_enutogpin+0x6>
    1352:	00 d0       	rcall	.+0      	; 0x1354 <DIO_enutogpin+0x8>
    1354:	0f 92       	push	r0
    1356:	cd b7       	in	r28, 0x3d	; 61
    1358:	de b7       	in	r29, 0x3e	; 62
    135a:	8a 83       	std	Y+2, r24	; 0x02
    135c:	6b 83       	std	Y+3, r22	; 0x03
	ES_ERROR local_enuerrorstate=ES_OK;
    135e:	19 82       	std	Y+1, r1	; 0x01

	if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7 ){
    1360:	8a 81       	ldd	r24, Y+2	; 0x02
    1362:	84 30       	cpi	r24, 0x04	; 4
    1364:	08 f0       	brcs	.+2      	; 0x1368 <DIO_enutogpin+0x1c>
    1366:	74 c0       	rjmp	.+232    	; 0x1450 <DIO_enutogpin+0x104>
    1368:	8b 81       	ldd	r24, Y+3	; 0x03
    136a:	88 30       	cpi	r24, 0x08	; 8
    136c:	08 f0       	brcs	.+2      	; 0x1370 <DIO_enutogpin+0x24>
    136e:	70 c0       	rjmp	.+224    	; 0x1450 <DIO_enutogpin+0x104>

					 switch(copy_u8portid){
    1370:	8a 81       	ldd	r24, Y+2	; 0x02
    1372:	28 2f       	mov	r18, r24
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	3d 83       	std	Y+5, r19	; 0x05
    1378:	2c 83       	std	Y+4, r18	; 0x04
    137a:	8c 81       	ldd	r24, Y+4	; 0x04
    137c:	9d 81       	ldd	r25, Y+5	; 0x05
    137e:	81 30       	cpi	r24, 0x01	; 1
    1380:	91 05       	cpc	r25, r1
    1382:	49 f1       	breq	.+82     	; 0x13d6 <DIO_enutogpin+0x8a>
    1384:	2c 81       	ldd	r18, Y+4	; 0x04
    1386:	3d 81       	ldd	r19, Y+5	; 0x05
    1388:	22 30       	cpi	r18, 0x02	; 2
    138a:	31 05       	cpc	r19, r1
    138c:	2c f4       	brge	.+10     	; 0x1398 <DIO_enutogpin+0x4c>
    138e:	8c 81       	ldd	r24, Y+4	; 0x04
    1390:	9d 81       	ldd	r25, Y+5	; 0x05
    1392:	00 97       	sbiw	r24, 0x00	; 0
    1394:	61 f0       	breq	.+24     	; 0x13ae <DIO_enutogpin+0x62>
    1396:	5a c0       	rjmp	.+180    	; 0x144c <DIO_enutogpin+0x100>
    1398:	2c 81       	ldd	r18, Y+4	; 0x04
    139a:	3d 81       	ldd	r19, Y+5	; 0x05
    139c:	22 30       	cpi	r18, 0x02	; 2
    139e:	31 05       	cpc	r19, r1
    13a0:	71 f1       	breq	.+92     	; 0x13fe <DIO_enutogpin+0xb2>
    13a2:	8c 81       	ldd	r24, Y+4	; 0x04
    13a4:	9d 81       	ldd	r25, Y+5	; 0x05
    13a6:	83 30       	cpi	r24, 0x03	; 3
    13a8:	91 05       	cpc	r25, r1
    13aa:	e9 f1       	breq	.+122    	; 0x1426 <DIO_enutogpin+0xda>
    13ac:	4f c0       	rjmp	.+158    	; 0x144c <DIO_enutogpin+0x100>
					 case DIO_PORTA :
						PORTA^=(MASK_BIT<<copy_u8pinid);
    13ae:	ab e3       	ldi	r26, 0x3B	; 59
    13b0:	b0 e0       	ldi	r27, 0x00	; 0
    13b2:	eb e3       	ldi	r30, 0x3B	; 59
    13b4:	f0 e0       	ldi	r31, 0x00	; 0
    13b6:	80 81       	ld	r24, Z
    13b8:	48 2f       	mov	r20, r24
    13ba:	8b 81       	ldd	r24, Y+3	; 0x03
    13bc:	28 2f       	mov	r18, r24
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	02 2e       	mov	r0, r18
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <DIO_enutogpin+0x80>
    13c8:	88 0f       	add	r24, r24
    13ca:	99 1f       	adc	r25, r25
    13cc:	0a 94       	dec	r0
    13ce:	e2 f7       	brpl	.-8      	; 0x13c8 <DIO_enutogpin+0x7c>
    13d0:	84 27       	eor	r24, r20
    13d2:	8c 93       	st	X, r24
    13d4:	3b c0       	rjmp	.+118    	; 0x144c <DIO_enutogpin+0x100>

					   break;
					 case DIO_PORTB :
						 PORTB^=(MASK_BIT<<copy_u8pinid);
    13d6:	a8 e3       	ldi	r26, 0x38	; 56
    13d8:	b0 e0       	ldi	r27, 0x00	; 0
    13da:	e8 e3       	ldi	r30, 0x38	; 56
    13dc:	f0 e0       	ldi	r31, 0x00	; 0
    13de:	80 81       	ld	r24, Z
    13e0:	48 2f       	mov	r20, r24
    13e2:	8b 81       	ldd	r24, Y+3	; 0x03
    13e4:	28 2f       	mov	r18, r24
    13e6:	30 e0       	ldi	r19, 0x00	; 0
    13e8:	81 e0       	ldi	r24, 0x01	; 1
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	02 2e       	mov	r0, r18
    13ee:	02 c0       	rjmp	.+4      	; 0x13f4 <DIO_enutogpin+0xa8>
    13f0:	88 0f       	add	r24, r24
    13f2:	99 1f       	adc	r25, r25
    13f4:	0a 94       	dec	r0
    13f6:	e2 f7       	brpl	.-8      	; 0x13f0 <DIO_enutogpin+0xa4>
    13f8:	84 27       	eor	r24, r20
    13fa:	8c 93       	st	X, r24
    13fc:	27 c0       	rjmp	.+78     	; 0x144c <DIO_enutogpin+0x100>
						   break;
					 case DIO_PORTC :
						 PORTC^=(MASK_BIT<<copy_u8pinid);
    13fe:	a5 e3       	ldi	r26, 0x35	; 53
    1400:	b0 e0       	ldi	r27, 0x00	; 0
    1402:	e5 e3       	ldi	r30, 0x35	; 53
    1404:	f0 e0       	ldi	r31, 0x00	; 0
    1406:	80 81       	ld	r24, Z
    1408:	48 2f       	mov	r20, r24
    140a:	8b 81       	ldd	r24, Y+3	; 0x03
    140c:	28 2f       	mov	r18, r24
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	02 2e       	mov	r0, r18
    1416:	02 c0       	rjmp	.+4      	; 0x141c <DIO_enutogpin+0xd0>
    1418:	88 0f       	add	r24, r24
    141a:	99 1f       	adc	r25, r25
    141c:	0a 94       	dec	r0
    141e:	e2 f7       	brpl	.-8      	; 0x1418 <DIO_enutogpin+0xcc>
    1420:	84 27       	eor	r24, r20
    1422:	8c 93       	st	X, r24
    1424:	13 c0       	rjmp	.+38     	; 0x144c <DIO_enutogpin+0x100>
						   break;
					 case DIO_PORTD :
						 PORTD^=(MASK_BIT<<copy_u8pinid);
    1426:	a2 e3       	ldi	r26, 0x32	; 50
    1428:	b0 e0       	ldi	r27, 0x00	; 0
    142a:	e2 e3       	ldi	r30, 0x32	; 50
    142c:	f0 e0       	ldi	r31, 0x00	; 0
    142e:	80 81       	ld	r24, Z
    1430:	48 2f       	mov	r20, r24
    1432:	8b 81       	ldd	r24, Y+3	; 0x03
    1434:	28 2f       	mov	r18, r24
    1436:	30 e0       	ldi	r19, 0x00	; 0
    1438:	81 e0       	ldi	r24, 0x01	; 1
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	02 2e       	mov	r0, r18
    143e:	02 c0       	rjmp	.+4      	; 0x1444 <DIO_enutogpin+0xf8>
    1440:	88 0f       	add	r24, r24
    1442:	99 1f       	adc	r25, r25
    1444:	0a 94       	dec	r0
    1446:	e2 f7       	brpl	.-8      	; 0x1440 <DIO_enutogpin+0xf4>
    1448:	84 27       	eor	r24, r20
    144a:	8c 93       	st	X, r24
						   break;
					 }
					  local_enuerrorstate=ES_OK;
    144c:	19 82       	std	Y+1, r1	; 0x01
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <DIO_enutogpin+0x108>
				 }

		else  {local_enuerrorstate=ES_OUT_OF_RANGE;}
    1450:	83 e0       	ldi	r24, 0x03	; 3
    1452:	89 83       	std	Y+1, r24	; 0x01


		return local_enuerrorstate;
    1454:	89 81       	ldd	r24, Y+1	; 0x01
}
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	0f 90       	pop	r0
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
    1460:	cf 91       	pop	r28
    1462:	df 91       	pop	r29
    1464:	08 95       	ret

00001466 <DIO_enugetportval>:

ES_ERROR DIO_enugetportval(u8 copy_u8portid,u8* copy_pu8value){
    1466:	df 93       	push	r29
    1468:	cf 93       	push	r28
    146a:	00 d0       	rcall	.+0      	; 0x146c <DIO_enugetportval+0x6>
    146c:	00 d0       	rcall	.+0      	; 0x146e <DIO_enugetportval+0x8>
    146e:	00 d0       	rcall	.+0      	; 0x1470 <DIO_enugetportval+0xa>
    1470:	cd b7       	in	r28, 0x3d	; 61
    1472:	de b7       	in	r29, 0x3e	; 62
    1474:	8a 83       	std	Y+2, r24	; 0x02
    1476:	7c 83       	std	Y+4, r23	; 0x04
    1478:	6b 83       	std	Y+3, r22	; 0x03
	ES_ERROR local_enuerrorstate=ES_OK;
    147a:	19 82       	std	Y+1, r1	; 0x01
 if(copy_pu8value!=NULL){
    147c:	8b 81       	ldd	r24, Y+3	; 0x03
    147e:	9c 81       	ldd	r25, Y+4	; 0x04
    1480:	00 97       	sbiw	r24, 0x00	; 0
    1482:	09 f4       	brne	.+2      	; 0x1486 <DIO_enugetportval+0x20>
    1484:	42 c0       	rjmp	.+132    	; 0x150a <DIO_enugetportval+0xa4>
	 if( copy_u8portid<=DIO_PORTD){
    1486:	8a 81       	ldd	r24, Y+2	; 0x02
    1488:	84 30       	cpi	r24, 0x04	; 4
    148a:	e0 f5       	brcc	.+120    	; 0x1504 <DIO_enugetportval+0x9e>
	 		 switch(copy_u8portid){
    148c:	8a 81       	ldd	r24, Y+2	; 0x02
    148e:	28 2f       	mov	r18, r24
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	3e 83       	std	Y+6, r19	; 0x06
    1494:	2d 83       	std	Y+5, r18	; 0x05
    1496:	8d 81       	ldd	r24, Y+5	; 0x05
    1498:	9e 81       	ldd	r25, Y+6	; 0x06
    149a:	81 30       	cpi	r24, 0x01	; 1
    149c:	91 05       	cpc	r25, r1
    149e:	e1 f0       	breq	.+56     	; 0x14d8 <DIO_enugetportval+0x72>
    14a0:	2d 81       	ldd	r18, Y+5	; 0x05
    14a2:	3e 81       	ldd	r19, Y+6	; 0x06
    14a4:	22 30       	cpi	r18, 0x02	; 2
    14a6:	31 05       	cpc	r19, r1
    14a8:	2c f4       	brge	.+10     	; 0x14b4 <DIO_enugetportval+0x4e>
    14aa:	8d 81       	ldd	r24, Y+5	; 0x05
    14ac:	9e 81       	ldd	r25, Y+6	; 0x06
    14ae:	00 97       	sbiw	r24, 0x00	; 0
    14b0:	61 f0       	breq	.+24     	; 0x14ca <DIO_enugetportval+0x64>
    14b2:	26 c0       	rjmp	.+76     	; 0x1500 <DIO_enugetportval+0x9a>
    14b4:	2d 81       	ldd	r18, Y+5	; 0x05
    14b6:	3e 81       	ldd	r19, Y+6	; 0x06
    14b8:	22 30       	cpi	r18, 0x02	; 2
    14ba:	31 05       	cpc	r19, r1
    14bc:	a1 f0       	breq	.+40     	; 0x14e6 <DIO_enugetportval+0x80>
    14be:	8d 81       	ldd	r24, Y+5	; 0x05
    14c0:	9e 81       	ldd	r25, Y+6	; 0x06
    14c2:	83 30       	cpi	r24, 0x03	; 3
    14c4:	91 05       	cpc	r25, r1
    14c6:	b1 f0       	breq	.+44     	; 0x14f4 <DIO_enugetportval+0x8e>
    14c8:	1b c0       	rjmp	.+54     	; 0x1500 <DIO_enugetportval+0x9a>
	 		 case DIO_PORTA :
	 			* copy_pu8value=PINA;
    14ca:	e9 e3       	ldi	r30, 0x39	; 57
    14cc:	f0 e0       	ldi	r31, 0x00	; 0
    14ce:	80 81       	ld	r24, Z
    14d0:	eb 81       	ldd	r30, Y+3	; 0x03
    14d2:	fc 81       	ldd	r31, Y+4	; 0x04
    14d4:	80 83       	st	Z, r24
    14d6:	14 c0       	rjmp	.+40     	; 0x1500 <DIO_enugetportval+0x9a>
	 		   break;
	 		 case DIO_PORTB :
	 			* copy_pu8value=PINB;
    14d8:	e6 e3       	ldi	r30, 0x36	; 54
    14da:	f0 e0       	ldi	r31, 0x00	; 0
    14dc:	80 81       	ld	r24, Z
    14de:	eb 81       	ldd	r30, Y+3	; 0x03
    14e0:	fc 81       	ldd	r31, Y+4	; 0x04
    14e2:	80 83       	st	Z, r24
    14e4:	0d c0       	rjmp	.+26     	; 0x1500 <DIO_enugetportval+0x9a>
	 			   break;
	 		 case DIO_PORTC :
	 			* copy_pu8value=PINC;
    14e6:	e3 e3       	ldi	r30, 0x33	; 51
    14e8:	f0 e0       	ldi	r31, 0x00	; 0
    14ea:	80 81       	ld	r24, Z
    14ec:	eb 81       	ldd	r30, Y+3	; 0x03
    14ee:	fc 81       	ldd	r31, Y+4	; 0x04
    14f0:	80 83       	st	Z, r24
    14f2:	06 c0       	rjmp	.+12     	; 0x1500 <DIO_enugetportval+0x9a>
	 			   break;
	 		 case DIO_PORTD :
	 			* copy_pu8value=PIND;
    14f4:	e0 e3       	ldi	r30, 0x30	; 48
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	80 81       	ld	r24, Z
    14fa:	eb 81       	ldd	r30, Y+3	; 0x03
    14fc:	fc 81       	ldd	r31, Y+4	; 0x04
    14fe:	80 83       	st	Z, r24
	 			   break;
	 		 }
	 		  local_enuerrorstate=ES_OK;
    1500:	19 82       	std	Y+1, r1	; 0x01
    1502:	05 c0       	rjmp	.+10     	; 0x150e <DIO_enugetportval+0xa8>
	 	 }
	 	 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
    1504:	83 e0       	ldi	r24, 0x03	; 3
    1506:	89 83       	std	Y+1, r24	; 0x01
    1508:	02 c0       	rjmp	.+4      	; 0x150e <DIO_enugetportval+0xa8>

	}


 else{
	 local_enuerrorstate=ES_NULL_POINTER;
    150a:	82 e0       	ldi	r24, 0x02	; 2
    150c:	89 83       	std	Y+1, r24	; 0x01
 }


		return local_enuerrorstate;
    150e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1510:	26 96       	adiw	r28, 0x06	; 6
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	de bf       	out	0x3e, r29	; 62
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	cd bf       	out	0x3d, r28	; 61
    151c:	cf 91       	pop	r28
    151e:	df 91       	pop	r29
    1520:	08 95       	ret

00001522 <DIO_enugetpinval>:

ES_ERROR DIO_enugetpinval(u8 copy_u8portid,u8 copy_u8pinid,u8* copy_pu8value){
    1522:	df 93       	push	r29
    1524:	cf 93       	push	r28
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	27 97       	sbiw	r28, 0x07	; 7
    152c:	0f b6       	in	r0, 0x3f	; 63
    152e:	f8 94       	cli
    1530:	de bf       	out	0x3e, r29	; 62
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	cd bf       	out	0x3d, r28	; 61
    1536:	8a 83       	std	Y+2, r24	; 0x02
    1538:	6b 83       	std	Y+3, r22	; 0x03
    153a:	5d 83       	std	Y+5, r21	; 0x05
    153c:	4c 83       	std	Y+4, r20	; 0x04
	ES_ERROR local_enuerrorstate=ES_OK;
    153e:	19 82       	std	Y+1, r1	; 0x01
	 if(copy_pu8value!=NULL){
    1540:	8c 81       	ldd	r24, Y+4	; 0x04
    1542:	9d 81       	ldd	r25, Y+5	; 0x05
    1544:	00 97       	sbiw	r24, 0x00	; 0
    1546:	09 f4       	brne	.+2      	; 0x154a <DIO_enugetpinval+0x28>
    1548:	7d c0       	rjmp	.+250    	; 0x1644 <DIO_enugetpinval+0x122>
	if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7 ){
    154a:	8a 81       	ldd	r24, Y+2	; 0x02
    154c:	84 30       	cpi	r24, 0x04	; 4
    154e:	08 f0       	brcs	.+2      	; 0x1552 <DIO_enugetpinval+0x30>
    1550:	76 c0       	rjmp	.+236    	; 0x163e <DIO_enugetpinval+0x11c>
    1552:	8b 81       	ldd	r24, Y+3	; 0x03
    1554:	88 30       	cpi	r24, 0x08	; 8
    1556:	08 f0       	brcs	.+2      	; 0x155a <DIO_enugetpinval+0x38>
    1558:	72 c0       	rjmp	.+228    	; 0x163e <DIO_enugetpinval+0x11c>

				 switch(copy_u8portid){
    155a:	8a 81       	ldd	r24, Y+2	; 0x02
    155c:	28 2f       	mov	r18, r24
    155e:	30 e0       	ldi	r19, 0x00	; 0
    1560:	3f 83       	std	Y+7, r19	; 0x07
    1562:	2e 83       	std	Y+6, r18	; 0x06
    1564:	4e 81       	ldd	r20, Y+6	; 0x06
    1566:	5f 81       	ldd	r21, Y+7	; 0x07
    1568:	41 30       	cpi	r20, 0x01	; 1
    156a:	51 05       	cpc	r21, r1
    156c:	59 f1       	breq	.+86     	; 0x15c4 <DIO_enugetpinval+0xa2>
    156e:	8e 81       	ldd	r24, Y+6	; 0x06
    1570:	9f 81       	ldd	r25, Y+7	; 0x07
    1572:	82 30       	cpi	r24, 0x02	; 2
    1574:	91 05       	cpc	r25, r1
    1576:	34 f4       	brge	.+12     	; 0x1584 <DIO_enugetpinval+0x62>
    1578:	2e 81       	ldd	r18, Y+6	; 0x06
    157a:	3f 81       	ldd	r19, Y+7	; 0x07
    157c:	21 15       	cp	r18, r1
    157e:	31 05       	cpc	r19, r1
    1580:	69 f0       	breq	.+26     	; 0x159c <DIO_enugetpinval+0x7a>
    1582:	5b c0       	rjmp	.+182    	; 0x163a <DIO_enugetpinval+0x118>
    1584:	4e 81       	ldd	r20, Y+6	; 0x06
    1586:	5f 81       	ldd	r21, Y+7	; 0x07
    1588:	42 30       	cpi	r20, 0x02	; 2
    158a:	51 05       	cpc	r21, r1
    158c:	79 f1       	breq	.+94     	; 0x15ec <DIO_enugetpinval+0xca>
    158e:	8e 81       	ldd	r24, Y+6	; 0x06
    1590:	9f 81       	ldd	r25, Y+7	; 0x07
    1592:	83 30       	cpi	r24, 0x03	; 3
    1594:	91 05       	cpc	r25, r1
    1596:	09 f4       	brne	.+2      	; 0x159a <DIO_enugetpinval+0x78>
    1598:	3d c0       	rjmp	.+122    	; 0x1614 <DIO_enugetpinval+0xf2>
    159a:	4f c0       	rjmp	.+158    	; 0x163a <DIO_enugetpinval+0x118>
				 case DIO_PORTA :
					 * copy_pu8value=	(PINA>>copy_u8pinid)&MASK_BIT;
    159c:	e9 e3       	ldi	r30, 0x39	; 57
    159e:	f0 e0       	ldi	r31, 0x00	; 0
    15a0:	80 81       	ld	r24, Z
    15a2:	28 2f       	mov	r18, r24
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	8b 81       	ldd	r24, Y+3	; 0x03
    15a8:	88 2f       	mov	r24, r24
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	a9 01       	movw	r20, r18
    15ae:	02 c0       	rjmp	.+4      	; 0x15b4 <DIO_enugetpinval+0x92>
    15b0:	55 95       	asr	r21
    15b2:	47 95       	ror	r20
    15b4:	8a 95       	dec	r24
    15b6:	e2 f7       	brpl	.-8      	; 0x15b0 <DIO_enugetpinval+0x8e>
    15b8:	ca 01       	movw	r24, r20
    15ba:	81 70       	andi	r24, 0x01	; 1
    15bc:	ec 81       	ldd	r30, Y+4	; 0x04
    15be:	fd 81       	ldd	r31, Y+5	; 0x05
    15c0:	80 83       	st	Z, r24
    15c2:	3b c0       	rjmp	.+118    	; 0x163a <DIO_enugetpinval+0x118>
				   break;
				 case DIO_PORTB :
					 * copy_pu8value=	(PINB>>copy_u8pinid)&MASK_BIT;
    15c4:	e6 e3       	ldi	r30, 0x36	; 54
    15c6:	f0 e0       	ldi	r31, 0x00	; 0
    15c8:	80 81       	ld	r24, Z
    15ca:	28 2f       	mov	r18, r24
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	8b 81       	ldd	r24, Y+3	; 0x03
    15d0:	88 2f       	mov	r24, r24
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	a9 01       	movw	r20, r18
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <DIO_enugetpinval+0xba>
    15d8:	55 95       	asr	r21
    15da:	47 95       	ror	r20
    15dc:	8a 95       	dec	r24
    15de:	e2 f7       	brpl	.-8      	; 0x15d8 <DIO_enugetpinval+0xb6>
    15e0:	ca 01       	movw	r24, r20
    15e2:	81 70       	andi	r24, 0x01	; 1
    15e4:	ec 81       	ldd	r30, Y+4	; 0x04
    15e6:	fd 81       	ldd	r31, Y+5	; 0x05
    15e8:	80 83       	st	Z, r24
    15ea:	27 c0       	rjmp	.+78     	; 0x163a <DIO_enugetpinval+0x118>
					   break;
				 case DIO_PORTC :
					 * copy_pu8value=	(PINC>>copy_u8pinid)&MASK_BIT;
    15ec:	e3 e3       	ldi	r30, 0x33	; 51
    15ee:	f0 e0       	ldi	r31, 0x00	; 0
    15f0:	80 81       	ld	r24, Z
    15f2:	28 2f       	mov	r18, r24
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	8b 81       	ldd	r24, Y+3	; 0x03
    15f8:	88 2f       	mov	r24, r24
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	a9 01       	movw	r20, r18
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <DIO_enugetpinval+0xe2>
    1600:	55 95       	asr	r21
    1602:	47 95       	ror	r20
    1604:	8a 95       	dec	r24
    1606:	e2 f7       	brpl	.-8      	; 0x1600 <DIO_enugetpinval+0xde>
    1608:	ca 01       	movw	r24, r20
    160a:	81 70       	andi	r24, 0x01	; 1
    160c:	ec 81       	ldd	r30, Y+4	; 0x04
    160e:	fd 81       	ldd	r31, Y+5	; 0x05
    1610:	80 83       	st	Z, r24
    1612:	13 c0       	rjmp	.+38     	; 0x163a <DIO_enugetpinval+0x118>
					   break;
				 case DIO_PORTD :
					 * copy_pu8value=	(PIND>>copy_u8pinid)&MASK_BIT;
    1614:	e0 e3       	ldi	r30, 0x30	; 48
    1616:	f0 e0       	ldi	r31, 0x00	; 0
    1618:	80 81       	ld	r24, Z
    161a:	28 2f       	mov	r18, r24
    161c:	30 e0       	ldi	r19, 0x00	; 0
    161e:	8b 81       	ldd	r24, Y+3	; 0x03
    1620:	88 2f       	mov	r24, r24
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	a9 01       	movw	r20, r18
    1626:	02 c0       	rjmp	.+4      	; 0x162c <DIO_enugetpinval+0x10a>
    1628:	55 95       	asr	r21
    162a:	47 95       	ror	r20
    162c:	8a 95       	dec	r24
    162e:	e2 f7       	brpl	.-8      	; 0x1628 <DIO_enugetpinval+0x106>
    1630:	ca 01       	movw	r24, r20
    1632:	81 70       	andi	r24, 0x01	; 1
    1634:	ec 81       	ldd	r30, Y+4	; 0x04
    1636:	fd 81       	ldd	r31, Y+5	; 0x05
    1638:	80 83       	st	Z, r24
					   break;
				 }
				  local_enuerrorstate=ES_OK;
    163a:	19 82       	std	Y+1, r1	; 0x01
    163c:	05 c0       	rjmp	.+10     	; 0x1648 <DIO_enugetpinval+0x126>
			 }

	else  {local_enuerrorstate=ES_OUT_OF_RANGE;}}
    163e:	83 e0       	ldi	r24, 0x03	; 3
    1640:	89 83       	std	Y+1, r24	; 0x01
    1642:	02 c0       	rjmp	.+4      	; 0x1648 <DIO_enugetpinval+0x126>
	else local_enuerrorstate=ES_NULL_POINTER;
    1644:	82 e0       	ldi	r24, 0x02	; 2
    1646:	89 83       	std	Y+1, r24	; 0x01

		return local_enuerrorstate;
    1648:	89 81       	ldd	r24, Y+1	; 0x01
}
    164a:	27 96       	adiw	r28, 0x07	; 7
    164c:	0f b6       	in	r0, 0x3f	; 63
    164e:	f8 94       	cli
    1650:	de bf       	out	0x3e, r29	; 62
    1652:	0f be       	out	0x3f, r0	; 63
    1654:	cd bf       	out	0x3d, r28	; 61
    1656:	cf 91       	pop	r28
    1658:	df 91       	pop	r29
    165a:	08 95       	ret

0000165c <ADC_int>:
#include"BIT_SET.h"




void ADC_int(vREF_type vref,SCALER_TYPE scale){
    165c:	df 93       	push	r29
    165e:	cf 93       	push	r28
    1660:	00 d0       	rcall	.+0      	; 0x1662 <ADC_int+0x6>
    1662:	00 d0       	rcall	.+0      	; 0x1664 <ADC_int+0x8>
    1664:	cd b7       	in	r28, 0x3d	; 61
    1666:	de b7       	in	r29, 0x3e	; 62
    1668:	89 83       	std	Y+1, r24	; 0x01
    166a:	6a 83       	std	Y+2, r22	; 0x02

	switch(vref){
    166c:	89 81       	ldd	r24, Y+1	; 0x01
    166e:	28 2f       	mov	r18, r24
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	3c 83       	std	Y+4, r19	; 0x04
    1674:	2b 83       	std	Y+3, r18	; 0x03
    1676:	8b 81       	ldd	r24, Y+3	; 0x03
    1678:	9c 81       	ldd	r25, Y+4	; 0x04
    167a:	81 30       	cpi	r24, 0x01	; 1
    167c:	91 05       	cpc	r25, r1
    167e:	c1 f0       	breq	.+48     	; 0x16b0 <ADC_int+0x54>
    1680:	2b 81       	ldd	r18, Y+3	; 0x03
    1682:	3c 81       	ldd	r19, Y+4	; 0x04
    1684:	22 30       	cpi	r18, 0x02	; 2
    1686:	31 05       	cpc	r19, r1
    1688:	11 f1       	breq	.+68     	; 0x16ce <ADC_int+0x72>
    168a:	8b 81       	ldd	r24, Y+3	; 0x03
    168c:	9c 81       	ldd	r25, Y+4	; 0x04
    168e:	00 97       	sbiw	r24, 0x00	; 0
    1690:	61 f5       	brne	.+88     	; 0x16ea <ADC_int+0x8e>
	case AREF:
         RESET_BIT(ADMUX,vREF_0);
    1692:	a7 e2       	ldi	r26, 0x27	; 39
    1694:	b0 e0       	ldi	r27, 0x00	; 0
    1696:	e7 e2       	ldi	r30, 0x27	; 39
    1698:	f0 e0       	ldi	r31, 0x00	; 0
    169a:	80 81       	ld	r24, Z
    169c:	8f 7b       	andi	r24, 0xBF	; 191
    169e:	8c 93       	st	X, r24
         RESET_BIT(ADMUX,vREF_1);
    16a0:	a7 e2       	ldi	r26, 0x27	; 39
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	e7 e2       	ldi	r30, 0x27	; 39
    16a6:	f0 e0       	ldi	r31, 0x00	; 0
    16a8:	80 81       	ld	r24, Z
    16aa:	8f 77       	andi	r24, 0x7F	; 127
    16ac:	8c 93       	st	X, r24
    16ae:	1d c0       	rjmp	.+58     	; 0x16ea <ADC_int+0x8e>
		break;
	case AVCC:
       SET_BIT(ADMUX,vREF_0);
    16b0:	a7 e2       	ldi	r26, 0x27	; 39
    16b2:	b0 e0       	ldi	r27, 0x00	; 0
    16b4:	e7 e2       	ldi	r30, 0x27	; 39
    16b6:	f0 e0       	ldi	r31, 0x00	; 0
    16b8:	80 81       	ld	r24, Z
    16ba:	80 64       	ori	r24, 0x40	; 64
    16bc:	8c 93       	st	X, r24
       RESET_BIT(ADMUX,vREF_1);
    16be:	a7 e2       	ldi	r26, 0x27	; 39
    16c0:	b0 e0       	ldi	r27, 0x00	; 0
    16c2:	e7 e2       	ldi	r30, 0x27	; 39
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 81       	ld	r24, Z
    16c8:	8f 77       	andi	r24, 0x7F	; 127
    16ca:	8c 93       	st	X, r24
    16cc:	0e c0       	rjmp	.+28     	; 0x16ea <ADC_int+0x8e>
		break;
	case _256:
		SET_BIT(ADMUX,vREF_0);
    16ce:	a7 e2       	ldi	r26, 0x27	; 39
    16d0:	b0 e0       	ldi	r27, 0x00	; 0
    16d2:	e7 e2       	ldi	r30, 0x27	; 39
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	80 81       	ld	r24, Z
    16d8:	80 64       	ori	r24, 0x40	; 64
    16da:	8c 93       	st	X, r24
		SET_BIT(ADMUX,vREF_1);
    16dc:	a7 e2       	ldi	r26, 0x27	; 39
    16de:	b0 e0       	ldi	r27, 0x00	; 0
    16e0:	e7 e2       	ldi	r30, 0x27	; 39
    16e2:	f0 e0       	ldi	r31, 0x00	; 0
    16e4:	80 81       	ld	r24, Z
    16e6:	80 68       	ori	r24, 0x80	; 128
    16e8:	8c 93       	st	X, r24
		break;
	}

	//scaller
	ADCSRA&=0xf8;
    16ea:	a6 e2       	ldi	r26, 0x26	; 38
    16ec:	b0 e0       	ldi	r27, 0x00	; 0
    16ee:	e6 e2       	ldi	r30, 0x26	; 38
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	80 81       	ld	r24, Z
    16f4:	88 7f       	andi	r24, 0xF8	; 248
    16f6:	8c 93       	st	X, r24
	ADCSRA|=scale;
    16f8:	a6 e2       	ldi	r26, 0x26	; 38
    16fa:	b0 e0       	ldi	r27, 0x00	; 0
    16fc:	e6 e2       	ldi	r30, 0x26	; 38
    16fe:	f0 e0       	ldi	r31, 0x00	; 0
    1700:	90 81       	ld	r25, Z
    1702:	8a 81       	ldd	r24, Y+2	; 0x02
    1704:	89 2b       	or	r24, r25
    1706:	8c 93       	st	X, r24
	//enable ADC  pin7
	SET_BIT(ADCSRA,ADC_ENABLE);
    1708:	a6 e2       	ldi	r26, 0x26	; 38
    170a:	b0 e0       	ldi	r27, 0x00	; 0
    170c:	e6 e2       	ldi	r30, 0x26	; 38
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	80 81       	ld	r24, Z
    1712:	80 68       	ori	r24, 0x80	; 128
    1714:	8c 93       	st	X, r24

	}
    1716:	0f 90       	pop	r0
    1718:	0f 90       	pop	r0
    171a:	0f 90       	pop	r0
    171c:	0f 90       	pop	r0
    171e:	cf 91       	pop	r28
    1720:	df 91       	pop	r29
    1722:	08 95       	ret

00001724 <ADC_read>:


u16 ADC_read(CHANNEL_TYPE channel){
    1724:	df 93       	push	r29
    1726:	cf 93       	push	r28
    1728:	0f 92       	push	r0
    172a:	cd b7       	in	r28, 0x3d	; 61
    172c:	de b7       	in	r29, 0x3e	; 62
    172e:	89 83       	std	Y+1, r24	; 0x01
	//SELECT CHANNEL
	ADMUX&=0XE0;
    1730:	a7 e2       	ldi	r26, 0x27	; 39
    1732:	b0 e0       	ldi	r27, 0x00	; 0
    1734:	e7 e2       	ldi	r30, 0x27	; 39
    1736:	f0 e0       	ldi	r31, 0x00	; 0
    1738:	80 81       	ld	r24, Z
    173a:	80 7e       	andi	r24, 0xE0	; 224
    173c:	8c 93       	st	X, r24
	ADMUX|=channel;
    173e:	a7 e2       	ldi	r26, 0x27	; 39
    1740:	b0 e0       	ldi	r27, 0x00	; 0
    1742:	e7 e2       	ldi	r30, 0x27	; 39
    1744:	f0 e0       	ldi	r31, 0x00	; 0
    1746:	90 81       	ld	r25, Z
    1748:	89 81       	ldd	r24, Y+1	; 0x01
    174a:	89 2b       	or	r24, r25
    174c:	8c 93       	st	X, r24
	//START CONVERSION
	SET_BIT(ADCSRA,ADC_SRART_CON);
    174e:	a6 e2       	ldi	r26, 0x26	; 38
    1750:	b0 e0       	ldi	r27, 0x00	; 0
    1752:	e6 e2       	ldi	r30, 0x26	; 38
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	80 81       	ld	r24, Z
    1758:	80 64       	ori	r24, 0x40	; 64
    175a:	8c 93       	st	X, r24
	while(GET_BIT(ADCSRA,ADC_SRART_CON));
    175c:	e6 e2       	ldi	r30, 0x26	; 38
    175e:	f0 e0       	ldi	r31, 0x00	; 0
    1760:	80 81       	ld	r24, Z
    1762:	82 95       	swap	r24
    1764:	86 95       	lsr	r24
    1766:	86 95       	lsr	r24
    1768:	83 70       	andi	r24, 0x03	; 3
    176a:	88 2f       	mov	r24, r24
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	81 70       	andi	r24, 0x01	; 1
    1770:	90 70       	andi	r25, 0x00	; 0
    1772:	88 23       	and	r24, r24
    1774:	99 f7       	brne	.-26     	; 0x175c <ADC_read+0x38>
	return ADC_DATA_RE;
    1776:	e4 e2       	ldi	r30, 0x24	; 36
    1778:	f0 e0       	ldi	r31, 0x00	; 0
    177a:	80 81       	ld	r24, Z
    177c:	91 81       	ldd	r25, Z+1	; 0x01
}
    177e:	0f 90       	pop	r0
    1780:	cf 91       	pop	r28
    1782:	df 91       	pop	r29
    1784:	08 95       	ret

00001786 <main>:
#include"stdTypes.h"
#include"errorState.h"
#include"ADC.h"
#include"ADC_int.h"
#include"MCAL/DIO_int.h"
int main(){
    1786:	df 93       	push	r29
    1788:	cf 93       	push	r28
    178a:	00 d0       	rcall	.+0      	; 0x178c <main+0x6>
    178c:	00 d0       	rcall	.+0      	; 0x178e <main+0x8>
    178e:	cd b7       	in	r28, 0x3d	; 61
    1790:	de b7       	in	r29, 0x3e	; 62
	DIO_enuInit();
    1792:	0e 94 af 06 	call	0xd5e	; 0xd5e <DIO_enuInit>
	DIO_enuSetpindir(DIO_u8PORTA,DIO_u8PIN0, DIO_u8INPUT);
    1796:	80 e0       	ldi	r24, 0x00	; 0
    1798:	60 e0       	ldi	r22, 0x00	; 0
    179a:	40 e0       	ldi	r20, 0x00	; 0
    179c:	0e 94 73 07 	call	0xee6	; 0xee6 <DIO_enuSetpindir>
	DIO_enuSetpindir(DIO_u8PORTD,DIO_u8PIN0, DIO_u8OUTPUT);
    17a0:	83 e0       	ldi	r24, 0x03	; 3
    17a2:	60 e0       	ldi	r22, 0x00	; 0
    17a4:	41 e0       	ldi	r20, 0x01	; 1
    17a6:	0e 94 73 07 	call	0xee6	; 0xee6 <DIO_enuSetpindir>
	ADC_int(AVCC,ADC_SCALER_64);
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	66 e0       	ldi	r22, 0x06	; 6
    17ae:	0e 94 2e 0b 	call	0x165c	; 0x165c <ADC_int>

	while(1){
		u16 data;
		u16 temp;
		data=ADC_read(CH_0);
    17b2:	80 e0       	ldi	r24, 0x00	; 0
    17b4:	0e 94 92 0b 	call	0x1724	; 0x1724 <ADC_read>
    17b8:	9c 83       	std	Y+4, r25	; 0x04
    17ba:	8b 83       	std	Y+3, r24	; 0x03
		temp=(data*0.0048828 )/0.01;
    17bc:	8b 81       	ldd	r24, Y+3	; 0x03
    17be:	9c 81       	ldd	r25, Y+4	; 0x04
    17c0:	cc 01       	movw	r24, r24
    17c2:	a0 e0       	ldi	r26, 0x00	; 0
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	bc 01       	movw	r22, r24
    17c8:	cd 01       	movw	r24, r26
    17ca:	0e 94 41 04 	call	0x882	; 0x882 <__floatunsisf>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	bc 01       	movw	r22, r24
    17d4:	cd 01       	movw	r24, r26
    17d6:	25 ee       	ldi	r18, 0xE5	; 229
    17d8:	3f ef       	ldi	r19, 0xFF	; 255
    17da:	4f e9       	ldi	r20, 0x9F	; 159
    17dc:	5b e3       	ldi	r21, 0x3B	; 59
    17de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17e2:	dc 01       	movw	r26, r24
    17e4:	cb 01       	movw	r24, r22
    17e6:	bc 01       	movw	r22, r24
    17e8:	cd 01       	movw	r24, r26
    17ea:	2a e0       	ldi	r18, 0x0A	; 10
    17ec:	37 ed       	ldi	r19, 0xD7	; 215
    17ee:	43 e2       	ldi	r20, 0x23	; 35
    17f0:	5c e3       	ldi	r21, 0x3C	; 60
    17f2:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    17f6:	dc 01       	movw	r26, r24
    17f8:	cb 01       	movw	r24, r22
    17fa:	bc 01       	movw	r22, r24
    17fc:	cd 01       	movw	r24, r26
    17fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	9a 83       	std	Y+2, r25	; 0x02
    1808:	89 83       	std	Y+1, r24	; 0x01
    180a:	0a c0       	rjmp	.+20     	; 0x1820 <main+0x9a>
		while(temp==50){
			DIO_enuSetpinval(DIO_u8PORTD,DIO_u8PIN0,DIO_u8HIGH);
    180c:	83 e0       	ldi	r24, 0x03	; 3
    180e:	60 e0       	ldi	r22, 0x00	; 0
    1810:	41 e0       	ldi	r20, 0x01	; 1
    1812:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_enuSetpinval>
			data=ADC_read(CH_0);
    1816:	80 e0       	ldi	r24, 0x00	; 0
    1818:	0e 94 92 0b 	call	0x1724	; 0x1724 <ADC_read>
    181c:	9c 83       	std	Y+4, r25	; 0x04
    181e:	8b 83       	std	Y+3, r24	; 0x03
	while(1){
		u16 data;
		u16 temp;
		data=ADC_read(CH_0);
		temp=(data*0.0048828 )/0.01;
		while(temp==50){
    1820:	89 81       	ldd	r24, Y+1	; 0x01
    1822:	9a 81       	ldd	r25, Y+2	; 0x02
    1824:	82 33       	cpi	r24, 0x32	; 50
    1826:	91 05       	cpc	r25, r1
    1828:	89 f3       	breq	.-30     	; 0x180c <main+0x86>
			DIO_enuSetpinval(DIO_u8PORTD,DIO_u8PIN0,DIO_u8HIGH);
			data=ADC_read(CH_0);
		}
		DIO_enuSetpinval(DIO_u8PORTD,DIO_u8PIN0,DIO_u8LOW);
    182a:	83 e0       	ldi	r24, 0x03	; 3
    182c:	60 e0       	ldi	r22, 0x00	; 0
    182e:	40 e0       	ldi	r20, 0x00	; 0
    1830:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_enuSetpinval>
    1834:	be cf       	rjmp	.-132    	; 0x17b2 <main+0x2c>

00001836 <__prologue_saves__>:
    1836:	2f 92       	push	r2
    1838:	3f 92       	push	r3
    183a:	4f 92       	push	r4
    183c:	5f 92       	push	r5
    183e:	6f 92       	push	r6
    1840:	7f 92       	push	r7
    1842:	8f 92       	push	r8
    1844:	9f 92       	push	r9
    1846:	af 92       	push	r10
    1848:	bf 92       	push	r11
    184a:	cf 92       	push	r12
    184c:	df 92       	push	r13
    184e:	ef 92       	push	r14
    1850:	ff 92       	push	r15
    1852:	0f 93       	push	r16
    1854:	1f 93       	push	r17
    1856:	cf 93       	push	r28
    1858:	df 93       	push	r29
    185a:	cd b7       	in	r28, 0x3d	; 61
    185c:	de b7       	in	r29, 0x3e	; 62
    185e:	ca 1b       	sub	r28, r26
    1860:	db 0b       	sbc	r29, r27
    1862:	0f b6       	in	r0, 0x3f	; 63
    1864:	f8 94       	cli
    1866:	de bf       	out	0x3e, r29	; 62
    1868:	0f be       	out	0x3f, r0	; 63
    186a:	cd bf       	out	0x3d, r28	; 61
    186c:	09 94       	ijmp

0000186e <__epilogue_restores__>:
    186e:	2a 88       	ldd	r2, Y+18	; 0x12
    1870:	39 88       	ldd	r3, Y+17	; 0x11
    1872:	48 88       	ldd	r4, Y+16	; 0x10
    1874:	5f 84       	ldd	r5, Y+15	; 0x0f
    1876:	6e 84       	ldd	r6, Y+14	; 0x0e
    1878:	7d 84       	ldd	r7, Y+13	; 0x0d
    187a:	8c 84       	ldd	r8, Y+12	; 0x0c
    187c:	9b 84       	ldd	r9, Y+11	; 0x0b
    187e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1880:	b9 84       	ldd	r11, Y+9	; 0x09
    1882:	c8 84       	ldd	r12, Y+8	; 0x08
    1884:	df 80       	ldd	r13, Y+7	; 0x07
    1886:	ee 80       	ldd	r14, Y+6	; 0x06
    1888:	fd 80       	ldd	r15, Y+5	; 0x05
    188a:	0c 81       	ldd	r16, Y+4	; 0x04
    188c:	1b 81       	ldd	r17, Y+3	; 0x03
    188e:	aa 81       	ldd	r26, Y+2	; 0x02
    1890:	b9 81       	ldd	r27, Y+1	; 0x01
    1892:	ce 0f       	add	r28, r30
    1894:	d1 1d       	adc	r29, r1
    1896:	0f b6       	in	r0, 0x3f	; 63
    1898:	f8 94       	cli
    189a:	de bf       	out	0x3e, r29	; 62
    189c:	0f be       	out	0x3f, r0	; 63
    189e:	cd bf       	out	0x3d, r28	; 61
    18a0:	ed 01       	movw	r28, r26
    18a2:	08 95       	ret

000018a4 <_exit>:
    18a4:	f8 94       	cli

000018a6 <__stop_program>:
    18a6:	ff cf       	rjmp	.-2      	; 0x18a6 <__stop_program>
