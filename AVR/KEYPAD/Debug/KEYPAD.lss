
KEYPAD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000ad6  00000b4a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000e7c  00000000  00000000  00000b64  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000005e4  00000000  00000000  000019e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ed       	ldi	r30, 0xD6	; 214
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 60 05 	call	0xac0	; 0xac0 <main>
  7a:	0c 94 69 05 	jmp	0xad2	; 0xad2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_enuInit>:
#include"DIO_cofig.h"
#include"errorState.h"
#include "stdTypes.h"


ES_ERROR DIO_enuInit(void){
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	0f 92       	push	r0
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62
ES_ERROR local_enuerrorstate=ES_NOK;
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	89 83       	std	Y+1, r24	; 0x01

DDRA=conc(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
  90:	ea e3       	ldi	r30, 0x3A	; 58
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	80 83       	st	Z, r24
DDRB=conc(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
  98:	e7 e3       	ldi	r30, 0x37	; 55
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	80 83       	st	Z, r24
DDRC=conc(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
  a0:	e4 e3       	ldi	r30, 0x34	; 52
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	8d ea       	ldi	r24, 0xAD	; 173
  a6:	80 83       	st	Z, r24
DDRD=conc(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
  a8:	e1 e3       	ldi	r30, 0x31	; 49
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	85 ed       	ldi	r24, 0xD5	; 213
  ae:	80 83       	st	Z, r24

PORTA=conc(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
  b0:	eb e3       	ldi	r30, 0x3B	; 59
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	10 82       	st	Z, r1
PORTB=conc(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
  b6:	e8 e3       	ldi	r30, 0x38	; 56
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	10 82       	st	Z, r1
PORTC=conc(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
  bc:	e5 e3       	ldi	r30, 0x35	; 53
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	10 82       	st	Z, r1
PORTD=conc(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
  c2:	e2 e3       	ldi	r30, 0x32	; 50
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	10 82       	st	Z, r1

    local_enuerrorstate=ES_OK;
  c8:	19 82       	std	Y+1, r1	; 0x01

return local_enuerrorstate;
  ca:	89 81       	ldd	r24, Y+1	; 0x01
}
  cc:	0f 90       	pop	r0
  ce:	cf 91       	pop	r28
  d0:	df 91       	pop	r29
  d2:	08 95       	ret

000000d4 <DIO_enuSetportdir>:

ES_ERROR DIO_enuSetportdir(u8 copy_u8portid,u8 copy_u8value){
  d4:	df 93       	push	r29
  d6:	cf 93       	push	r28
  d8:	00 d0       	rcall	.+0      	; 0xda <DIO_enuSetportdir+0x6>
  da:	00 d0       	rcall	.+0      	; 0xdc <DIO_enuSetportdir+0x8>
  dc:	00 d0       	rcall	.+0      	; 0xde <DIO_enuSetportdir+0xa>
  de:	cd b7       	in	r28, 0x3d	; 61
  e0:	de b7       	in	r29, 0x3e	; 62
  e2:	8b 83       	std	Y+3, r24	; 0x03
  e4:	6c 83       	std	Y+4, r22	; 0x04
	ES_ERROR local_enuerrorstate=ES_NOK;
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	8a 83       	std	Y+2, r24	; 0x02

	 if( copy_u8portid<=DIO_PORTD){
  ea:	8b 81       	ldd	r24, Y+3	; 0x03
  ec:	84 30       	cpi	r24, 0x04	; 4
  ee:	a0 f5       	brcc	.+104    	; 0x158 <DIO_enuSetportdir+0x84>
		 switch(copy_u8portid){
  f0:	8b 81       	ldd	r24, Y+3	; 0x03
  f2:	28 2f       	mov	r18, r24
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	3e 83       	std	Y+6, r19	; 0x06
  f8:	2d 83       	std	Y+5, r18	; 0x05
  fa:	8d 81       	ldd	r24, Y+5	; 0x05
  fc:	9e 81       	ldd	r25, Y+6	; 0x06
  fe:	81 30       	cpi	r24, 0x01	; 1
 100:	91 05       	cpc	r25, r1
 102:	d1 f0       	breq	.+52     	; 0x138 <DIO_enuSetportdir+0x64>
 104:	2d 81       	ldd	r18, Y+5	; 0x05
 106:	3e 81       	ldd	r19, Y+6	; 0x06
 108:	22 30       	cpi	r18, 0x02	; 2
 10a:	31 05       	cpc	r19, r1
 10c:	2c f4       	brge	.+10     	; 0x118 <DIO_enuSetportdir+0x44>
 10e:	8d 81       	ldd	r24, Y+5	; 0x05
 110:	9e 81       	ldd	r25, Y+6	; 0x06
 112:	00 97       	sbiw	r24, 0x00	; 0
 114:	61 f0       	breq	.+24     	; 0x12e <DIO_enuSetportdir+0x5a>
 116:	1e c0       	rjmp	.+60     	; 0x154 <DIO_enuSetportdir+0x80>
 118:	2d 81       	ldd	r18, Y+5	; 0x05
 11a:	3e 81       	ldd	r19, Y+6	; 0x06
 11c:	22 30       	cpi	r18, 0x02	; 2
 11e:	31 05       	cpc	r19, r1
 120:	81 f0       	breq	.+32     	; 0x142 <DIO_enuSetportdir+0x6e>
 122:	8d 81       	ldd	r24, Y+5	; 0x05
 124:	9e 81       	ldd	r25, Y+6	; 0x06
 126:	83 30       	cpi	r24, 0x03	; 3
 128:	91 05       	cpc	r25, r1
 12a:	81 f0       	breq	.+32     	; 0x14c <DIO_enuSetportdir+0x78>
 12c:	13 c0       	rjmp	.+38     	; 0x154 <DIO_enuSetportdir+0x80>
		 case DIO_PORTA :
			DDRA=copy_u8value;
 12e:	ea e3       	ldi	r30, 0x3A	; 58
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	8c 81       	ldd	r24, Y+4	; 0x04
 134:	80 83       	st	Z, r24
 136:	0e c0       	rjmp	.+28     	; 0x154 <DIO_enuSetportdir+0x80>
		   break;
		 case DIO_PORTB :
			DDRB=copy_u8value;
 138:	e7 e3       	ldi	r30, 0x37	; 55
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	8c 81       	ldd	r24, Y+4	; 0x04
 13e:	80 83       	st	Z, r24
 140:	09 c0       	rjmp	.+18     	; 0x154 <DIO_enuSetportdir+0x80>
			   break;
		 case DIO_PORTC :
			DDRC=copy_u8value;
 142:	e4 e3       	ldi	r30, 0x34	; 52
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	8c 81       	ldd	r24, Y+4	; 0x04
 148:	80 83       	st	Z, r24
 14a:	04 c0       	rjmp	.+8      	; 0x154 <DIO_enuSetportdir+0x80>
			   break;
		 case DIO_PORTD :
			DDRD=copy_u8value;
 14c:	e1 e3       	ldi	r30, 0x31	; 49
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	8c 81       	ldd	r24, Y+4	; 0x04
 152:	80 83       	st	Z, r24
			   break;
		 }
		 ES_ERROR local_enuerrorstate=ES_OK;
 154:	19 82       	std	Y+1, r1	; 0x01
 156:	02 c0       	rjmp	.+4      	; 0x15c <DIO_enuSetportdir+0x88>
	 }
	 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
 158:	83 e0       	ldi	r24, 0x03	; 3
 15a:	8a 83       	std	Y+2, r24	; 0x02

	return local_enuerrorstate;
 15c:	8a 81       	ldd	r24, Y+2	; 0x02
}
 15e:	26 96       	adiw	r28, 0x06	; 6
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	f8 94       	cli
 164:	de bf       	out	0x3e, r29	; 62
 166:	0f be       	out	0x3f, r0	; 63
 168:	cd bf       	out	0x3d, r28	; 61
 16a:	cf 91       	pop	r28
 16c:	df 91       	pop	r29
 16e:	08 95       	ret

00000170 <DIO_enuSetportval>:



ES_ERROR DIO_enuSetportval(u8 copy_u8portid,u8 copy_u8value){
 170:	df 93       	push	r29
 172:	cf 93       	push	r28
 174:	00 d0       	rcall	.+0      	; 0x176 <DIO_enuSetportval+0x6>
 176:	00 d0       	rcall	.+0      	; 0x178 <DIO_enuSetportval+0x8>
 178:	00 d0       	rcall	.+0      	; 0x17a <DIO_enuSetportval+0xa>
 17a:	cd b7       	in	r28, 0x3d	; 61
 17c:	de b7       	in	r29, 0x3e	; 62
 17e:	8b 83       	std	Y+3, r24	; 0x03
 180:	6c 83       	std	Y+4, r22	; 0x04
	ES_ERROR local_enuerrorstate=ES_NOK;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	8a 83       	std	Y+2, r24	; 0x02

	 if( copy_u8portid<=DIO_PORTD){
 186:	8b 81       	ldd	r24, Y+3	; 0x03
 188:	84 30       	cpi	r24, 0x04	; 4
 18a:	a0 f5       	brcc	.+104    	; 0x1f4 <DIO_enuSetportval+0x84>
		 switch(copy_u8portid){
 18c:	8b 81       	ldd	r24, Y+3	; 0x03
 18e:	28 2f       	mov	r18, r24
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	3e 83       	std	Y+6, r19	; 0x06
 194:	2d 83       	std	Y+5, r18	; 0x05
 196:	8d 81       	ldd	r24, Y+5	; 0x05
 198:	9e 81       	ldd	r25, Y+6	; 0x06
 19a:	81 30       	cpi	r24, 0x01	; 1
 19c:	91 05       	cpc	r25, r1
 19e:	d1 f0       	breq	.+52     	; 0x1d4 <DIO_enuSetportval+0x64>
 1a0:	2d 81       	ldd	r18, Y+5	; 0x05
 1a2:	3e 81       	ldd	r19, Y+6	; 0x06
 1a4:	22 30       	cpi	r18, 0x02	; 2
 1a6:	31 05       	cpc	r19, r1
 1a8:	2c f4       	brge	.+10     	; 0x1b4 <DIO_enuSetportval+0x44>
 1aa:	8d 81       	ldd	r24, Y+5	; 0x05
 1ac:	9e 81       	ldd	r25, Y+6	; 0x06
 1ae:	00 97       	sbiw	r24, 0x00	; 0
 1b0:	61 f0       	breq	.+24     	; 0x1ca <DIO_enuSetportval+0x5a>
 1b2:	1e c0       	rjmp	.+60     	; 0x1f0 <DIO_enuSetportval+0x80>
 1b4:	2d 81       	ldd	r18, Y+5	; 0x05
 1b6:	3e 81       	ldd	r19, Y+6	; 0x06
 1b8:	22 30       	cpi	r18, 0x02	; 2
 1ba:	31 05       	cpc	r19, r1
 1bc:	81 f0       	breq	.+32     	; 0x1de <DIO_enuSetportval+0x6e>
 1be:	8d 81       	ldd	r24, Y+5	; 0x05
 1c0:	9e 81       	ldd	r25, Y+6	; 0x06
 1c2:	83 30       	cpi	r24, 0x03	; 3
 1c4:	91 05       	cpc	r25, r1
 1c6:	81 f0       	breq	.+32     	; 0x1e8 <DIO_enuSetportval+0x78>
 1c8:	13 c0       	rjmp	.+38     	; 0x1f0 <DIO_enuSetportval+0x80>
		 case DIO_PORTA :
			PORTA=copy_u8value;
 1ca:	eb e3       	ldi	r30, 0x3B	; 59
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	8c 81       	ldd	r24, Y+4	; 0x04
 1d0:	80 83       	st	Z, r24
 1d2:	0e c0       	rjmp	.+28     	; 0x1f0 <DIO_enuSetportval+0x80>
		   break;
		 case DIO_PORTB :
			PORTB=copy_u8value;
 1d4:	e8 e3       	ldi	r30, 0x38	; 56
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	8c 81       	ldd	r24, Y+4	; 0x04
 1da:	80 83       	st	Z, r24
 1dc:	09 c0       	rjmp	.+18     	; 0x1f0 <DIO_enuSetportval+0x80>
			   break;
		 case DIO_PORTC :
			PORTC=copy_u8value;
 1de:	e5 e3       	ldi	r30, 0x35	; 53
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	8c 81       	ldd	r24, Y+4	; 0x04
 1e4:	80 83       	st	Z, r24
 1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <DIO_enuSetportval+0x80>
			   break;
		 case DIO_PORTD :
			PORTD=copy_u8value;
 1e8:	e2 e3       	ldi	r30, 0x32	; 50
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	8c 81       	ldd	r24, Y+4	; 0x04
 1ee:	80 83       	st	Z, r24
			   break;
		 }
		 ES_ERROR local_enuerrorstate=ES_OK;
 1f0:	19 82       	std	Y+1, r1	; 0x01
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_enuSetportval+0x88>
	 }
	 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
 1f4:	83 e0       	ldi	r24, 0x03	; 3
 1f6:	8a 83       	std	Y+2, r24	; 0x02

	return local_enuerrorstate;
 1f8:	8a 81       	ldd	r24, Y+2	; 0x02
}
 1fa:	26 96       	adiw	r28, 0x06	; 6
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	cf 91       	pop	r28
 208:	df 91       	pop	r29
 20a:	08 95       	ret

0000020c <DIO_enuSetpindir>:
ES_ERROR DIO_enuSetpindir(u8 copy_u8portid,u8 copy_u8pinid,u8 copy_u8value){
 20c:	df 93       	push	r29
 20e:	cf 93       	push	r28
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
 214:	27 97       	sbiw	r28, 0x07	; 7
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	de bf       	out	0x3e, r29	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	cd bf       	out	0x3d, r28	; 61
 220:	8b 83       	std	Y+3, r24	; 0x03
 222:	6c 83       	std	Y+4, r22	; 0x04
 224:	4d 83       	std	Y+5, r20	; 0x05
	ES_ERROR local_enuerrorstate=ES_NOK;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	8a 83       	std	Y+2, r24	; 0x02

if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7&&copy_u8value<=OUTPUT ){
 22a:	8b 81       	ldd	r24, Y+3	; 0x03
 22c:	84 30       	cpi	r24, 0x04	; 4
 22e:	08 f0       	brcs	.+2      	; 0x232 <DIO_enuSetpindir+0x26>
 230:	d4 c0       	rjmp	.+424    	; 0x3da <DIO_enuSetpindir+0x1ce>
 232:	8c 81       	ldd	r24, Y+4	; 0x04
 234:	88 30       	cpi	r24, 0x08	; 8
 236:	08 f0       	brcs	.+2      	; 0x23a <DIO_enuSetpindir+0x2e>
 238:	d0 c0       	rjmp	.+416    	; 0x3da <DIO_enuSetpindir+0x1ce>
 23a:	8d 81       	ldd	r24, Y+5	; 0x05
 23c:	82 30       	cpi	r24, 0x02	; 2
 23e:	08 f0       	brcs	.+2      	; 0x242 <DIO_enuSetpindir+0x36>
 240:	cc c0       	rjmp	.+408    	; 0x3da <DIO_enuSetpindir+0x1ce>
	 if( copy_u8portid<=DIO_PORTD){
 242:	8b 81       	ldd	r24, Y+3	; 0x03
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	08 f0       	brcs	.+2      	; 0x24a <DIO_enuSetpindir+0x3e>
 248:	ca c0       	rjmp	.+404    	; 0x3de <DIO_enuSetpindir+0x1d2>
			 switch(copy_u8portid){
 24a:	8b 81       	ldd	r24, Y+3	; 0x03
 24c:	28 2f       	mov	r18, r24
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	3f 83       	std	Y+7, r19	; 0x07
 252:	2e 83       	std	Y+6, r18	; 0x06
 254:	6e 81       	ldd	r22, Y+6	; 0x06
 256:	7f 81       	ldd	r23, Y+7	; 0x07
 258:	61 30       	cpi	r22, 0x01	; 1
 25a:	71 05       	cpc	r23, r1
 25c:	09 f4       	brne	.+2      	; 0x260 <DIO_enuSetpindir+0x54>
 25e:	41 c0       	rjmp	.+130    	; 0x2e2 <DIO_enuSetpindir+0xd6>
 260:	8e 81       	ldd	r24, Y+6	; 0x06
 262:	9f 81       	ldd	r25, Y+7	; 0x07
 264:	82 30       	cpi	r24, 0x02	; 2
 266:	91 05       	cpc	r25, r1
 268:	34 f4       	brge	.+12     	; 0x276 <DIO_enuSetpindir+0x6a>
 26a:	2e 81       	ldd	r18, Y+6	; 0x06
 26c:	3f 81       	ldd	r19, Y+7	; 0x07
 26e:	21 15       	cp	r18, r1
 270:	31 05       	cpc	r19, r1
 272:	71 f0       	breq	.+28     	; 0x290 <DIO_enuSetpindir+0x84>
 274:	b0 c0       	rjmp	.+352    	; 0x3d6 <DIO_enuSetpindir+0x1ca>
 276:	6e 81       	ldd	r22, Y+6	; 0x06
 278:	7f 81       	ldd	r23, Y+7	; 0x07
 27a:	62 30       	cpi	r22, 0x02	; 2
 27c:	71 05       	cpc	r23, r1
 27e:	09 f4       	brne	.+2      	; 0x282 <DIO_enuSetpindir+0x76>
 280:	59 c0       	rjmp	.+178    	; 0x334 <DIO_enuSetpindir+0x128>
 282:	8e 81       	ldd	r24, Y+6	; 0x06
 284:	9f 81       	ldd	r25, Y+7	; 0x07
 286:	83 30       	cpi	r24, 0x03	; 3
 288:	91 05       	cpc	r25, r1
 28a:	09 f4       	brne	.+2      	; 0x28e <DIO_enuSetpindir+0x82>
 28c:	7c c0       	rjmp	.+248    	; 0x386 <DIO_enuSetpindir+0x17a>
 28e:	a3 c0       	rjmp	.+326    	; 0x3d6 <DIO_enuSetpindir+0x1ca>
			 case DIO_PORTA :
				DDRA&=~(MASK_BIT<<copy_u8pinid);
 290:	aa e3       	ldi	r26, 0x3A	; 58
 292:	b0 e0       	ldi	r27, 0x00	; 0
 294:	ea e3       	ldi	r30, 0x3A	; 58
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	80 81       	ld	r24, Z
 29a:	48 2f       	mov	r20, r24
 29c:	8c 81       	ldd	r24, Y+4	; 0x04
 29e:	28 2f       	mov	r18, r24
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <DIO_enuSetpindir+0xa0>
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	2a 95       	dec	r18
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <DIO_enuSetpindir+0x9c>
 2b0:	80 95       	com	r24
 2b2:	84 23       	and	r24, r20
 2b4:	8c 93       	st	X, r24
				DDRA|=(copy_u8value<<copy_u8pinid);
 2b6:	aa e3       	ldi	r26, 0x3A	; 58
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	ea e3       	ldi	r30, 0x3A	; 58
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	80 81       	ld	r24, Z
 2c0:	48 2f       	mov	r20, r24
 2c2:	8d 81       	ldd	r24, Y+5	; 0x05
 2c4:	28 2f       	mov	r18, r24
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ca:	88 2f       	mov	r24, r24
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	b9 01       	movw	r22, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_enuSetpindir+0xca>
 2d2:	66 0f       	add	r22, r22
 2d4:	77 1f       	adc	r23, r23
 2d6:	8a 95       	dec	r24
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_enuSetpindir+0xc6>
 2da:	cb 01       	movw	r24, r22
 2dc:	84 2b       	or	r24, r20
 2de:	8c 93       	st	X, r24
 2e0:	7a c0       	rjmp	.+244    	; 0x3d6 <DIO_enuSetpindir+0x1ca>
			   break;
			 case DIO_PORTB :
					DDRB&=~(MASK_BIT<<copy_u8pinid);
 2e2:	a7 e3       	ldi	r26, 0x37	; 55
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	e7 e3       	ldi	r30, 0x37	; 55
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	48 2f       	mov	r20, r24
 2ee:	8c 81       	ldd	r24, Y+4	; 0x04
 2f0:	28 2f       	mov	r18, r24
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_enuSetpindir+0xf2>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	2a 95       	dec	r18
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_enuSetpindir+0xee>
 302:	80 95       	com	r24
 304:	84 23       	and	r24, r20
 306:	8c 93       	st	X, r24
				    DDRB|=(copy_u8value<<copy_u8pinid);
 308:	a7 e3       	ldi	r26, 0x37	; 55
 30a:	b0 e0       	ldi	r27, 0x00	; 0
 30c:	e7 e3       	ldi	r30, 0x37	; 55
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	48 2f       	mov	r20, r24
 314:	8d 81       	ldd	r24, Y+5	; 0x05
 316:	28 2f       	mov	r18, r24
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	8c 81       	ldd	r24, Y+4	; 0x04
 31c:	88 2f       	mov	r24, r24
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	b9 01       	movw	r22, r18
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_enuSetpindir+0x11c>
 324:	66 0f       	add	r22, r22
 326:	77 1f       	adc	r23, r23
 328:	8a 95       	dec	r24
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_enuSetpindir+0x118>
 32c:	cb 01       	movw	r24, r22
 32e:	84 2b       	or	r24, r20
 330:	8c 93       	st	X, r24
 332:	51 c0       	rjmp	.+162    	; 0x3d6 <DIO_enuSetpindir+0x1ca>
				   break;
			 case DIO_PORTC :
				 DDRC&=~(MASK_BIT<<copy_u8pinid);
 334:	a4 e3       	ldi	r26, 0x34	; 52
 336:	b0 e0       	ldi	r27, 0x00	; 0
 338:	e4 e3       	ldi	r30, 0x34	; 52
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	80 81       	ld	r24, Z
 33e:	48 2f       	mov	r20, r24
 340:	8c 81       	ldd	r24, Y+4	; 0x04
 342:	28 2f       	mov	r18, r24
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	02 c0       	rjmp	.+4      	; 0x350 <DIO_enuSetpindir+0x144>
 34c:	88 0f       	add	r24, r24
 34e:	99 1f       	adc	r25, r25
 350:	2a 95       	dec	r18
 352:	e2 f7       	brpl	.-8      	; 0x34c <DIO_enuSetpindir+0x140>
 354:	80 95       	com	r24
 356:	84 23       	and	r24, r20
 358:	8c 93       	st	X, r24
				 DDRC|=(copy_u8value<<copy_u8pinid);
 35a:	a4 e3       	ldi	r26, 0x34	; 52
 35c:	b0 e0       	ldi	r27, 0x00	; 0
 35e:	e4 e3       	ldi	r30, 0x34	; 52
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	80 81       	ld	r24, Z
 364:	48 2f       	mov	r20, r24
 366:	8d 81       	ldd	r24, Y+5	; 0x05
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	8c 81       	ldd	r24, Y+4	; 0x04
 36e:	88 2f       	mov	r24, r24
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	b9 01       	movw	r22, r18
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_enuSetpindir+0x16e>
 376:	66 0f       	add	r22, r22
 378:	77 1f       	adc	r23, r23
 37a:	8a 95       	dec	r24
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_enuSetpindir+0x16a>
 37e:	cb 01       	movw	r24, r22
 380:	84 2b       	or	r24, r20
 382:	8c 93       	st	X, r24
 384:	28 c0       	rjmp	.+80     	; 0x3d6 <DIO_enuSetpindir+0x1ca>
				   break;
			 case DIO_PORTD :
				 DDRD&=~(MASK_BIT<<copy_u8pinid);
 386:	a1 e3       	ldi	r26, 0x31	; 49
 388:	b0 e0       	ldi	r27, 0x00	; 0
 38a:	e1 e3       	ldi	r30, 0x31	; 49
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	80 81       	ld	r24, Z
 390:	48 2f       	mov	r20, r24
 392:	8c 81       	ldd	r24, Y+4	; 0x04
 394:	28 2f       	mov	r18, r24
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <DIO_enuSetpindir+0x196>
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	2a 95       	dec	r18
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <DIO_enuSetpindir+0x192>
 3a6:	80 95       	com	r24
 3a8:	84 23       	and	r24, r20
 3aa:	8c 93       	st	X, r24
				 DDRD|=(copy_u8value<<copy_u8pinid);
 3ac:	a1 e3       	ldi	r26, 0x31	; 49
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	e1 e3       	ldi	r30, 0x31	; 49
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	48 2f       	mov	r20, r24
 3b8:	8d 81       	ldd	r24, Y+5	; 0x05
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	8c 81       	ldd	r24, Y+4	; 0x04
 3c0:	88 2f       	mov	r24, r24
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	b9 01       	movw	r22, r18
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_enuSetpindir+0x1c0>
 3c8:	66 0f       	add	r22, r22
 3ca:	77 1f       	adc	r23, r23
 3cc:	8a 95       	dec	r24
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_enuSetpindir+0x1bc>
 3d0:	cb 01       	movw	r24, r22
 3d2:	84 2b       	or	r24, r20
 3d4:	8c 93       	st	X, r24
				   break;
			 }
			 ES_ERROR local_enuerrorstate=ES_OK;
 3d6:	19 82       	std	Y+1, r1	; 0x01
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <DIO_enuSetpindir+0x1d2>
		 }
}
else  {local_enuerrorstate=ES_OUT_OF_RANGE;}
 3da:	83 e0       	ldi	r24, 0x03	; 3
 3dc:	8a 83       	std	Y+2, r24	; 0x02

		return local_enuerrorstate;
 3de:	8a 81       	ldd	r24, Y+2	; 0x02
}
 3e0:	27 96       	adiw	r28, 0x07	; 7
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	cf 91       	pop	r28
 3ee:	df 91       	pop	r29
 3f0:	08 95       	ret

000003f2 <DIO_enuSetpinval>:

ES_ERROR DIO_enuSetpinval(u8 copy_u8portid,u8 copy_u8pinid,u8 copy_u8value){
 3f2:	df 93       	push	r29
 3f4:	cf 93       	push	r28
 3f6:	cd b7       	in	r28, 0x3d	; 61
 3f8:	de b7       	in	r29, 0x3e	; 62
 3fa:	27 97       	sbiw	r28, 0x07	; 7
 3fc:	0f b6       	in	r0, 0x3f	; 63
 3fe:	f8 94       	cli
 400:	de bf       	out	0x3e, r29	; 62
 402:	0f be       	out	0x3f, r0	; 63
 404:	cd bf       	out	0x3d, r28	; 61
 406:	8b 83       	std	Y+3, r24	; 0x03
 408:	6c 83       	std	Y+4, r22	; 0x04
 40a:	4d 83       	std	Y+5, r20	; 0x05
	ES_ERROR local_enuerrorstate=ES_OK;
 40c:	1a 82       	std	Y+2, r1	; 0x02

	if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7&&copy_u8value<=OUTPUT ){
 40e:	8b 81       	ldd	r24, Y+3	; 0x03
 410:	84 30       	cpi	r24, 0x04	; 4
 412:	08 f0       	brcs	.+2      	; 0x416 <DIO_enuSetpinval+0x24>
 414:	d4 c0       	rjmp	.+424    	; 0x5be <DIO_enuSetpinval+0x1cc>
 416:	8c 81       	ldd	r24, Y+4	; 0x04
 418:	88 30       	cpi	r24, 0x08	; 8
 41a:	08 f0       	brcs	.+2      	; 0x41e <DIO_enuSetpinval+0x2c>
 41c:	d0 c0       	rjmp	.+416    	; 0x5be <DIO_enuSetpinval+0x1cc>
 41e:	8d 81       	ldd	r24, Y+5	; 0x05
 420:	82 30       	cpi	r24, 0x02	; 2
 422:	08 f0       	brcs	.+2      	; 0x426 <DIO_enuSetpinval+0x34>
 424:	cc c0       	rjmp	.+408    	; 0x5be <DIO_enuSetpinval+0x1cc>
		 if( copy_u8portid<=DIO_PORTD){
 426:	8b 81       	ldd	r24, Y+3	; 0x03
 428:	84 30       	cpi	r24, 0x04	; 4
 42a:	08 f0       	brcs	.+2      	; 0x42e <DIO_enuSetpinval+0x3c>
 42c:	ca c0       	rjmp	.+404    	; 0x5c2 <DIO_enuSetpinval+0x1d0>
				 switch(copy_u8portid){
 42e:	8b 81       	ldd	r24, Y+3	; 0x03
 430:	28 2f       	mov	r18, r24
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	3f 83       	std	Y+7, r19	; 0x07
 436:	2e 83       	std	Y+6, r18	; 0x06
 438:	6e 81       	ldd	r22, Y+6	; 0x06
 43a:	7f 81       	ldd	r23, Y+7	; 0x07
 43c:	61 30       	cpi	r22, 0x01	; 1
 43e:	71 05       	cpc	r23, r1
 440:	09 f4       	brne	.+2      	; 0x444 <DIO_enuSetpinval+0x52>
 442:	41 c0       	rjmp	.+130    	; 0x4c6 <DIO_enuSetpinval+0xd4>
 444:	8e 81       	ldd	r24, Y+6	; 0x06
 446:	9f 81       	ldd	r25, Y+7	; 0x07
 448:	82 30       	cpi	r24, 0x02	; 2
 44a:	91 05       	cpc	r25, r1
 44c:	34 f4       	brge	.+12     	; 0x45a <DIO_enuSetpinval+0x68>
 44e:	2e 81       	ldd	r18, Y+6	; 0x06
 450:	3f 81       	ldd	r19, Y+7	; 0x07
 452:	21 15       	cp	r18, r1
 454:	31 05       	cpc	r19, r1
 456:	71 f0       	breq	.+28     	; 0x474 <DIO_enuSetpinval+0x82>
 458:	b0 c0       	rjmp	.+352    	; 0x5ba <DIO_enuSetpinval+0x1c8>
 45a:	6e 81       	ldd	r22, Y+6	; 0x06
 45c:	7f 81       	ldd	r23, Y+7	; 0x07
 45e:	62 30       	cpi	r22, 0x02	; 2
 460:	71 05       	cpc	r23, r1
 462:	09 f4       	brne	.+2      	; 0x466 <DIO_enuSetpinval+0x74>
 464:	59 c0       	rjmp	.+178    	; 0x518 <DIO_enuSetpinval+0x126>
 466:	8e 81       	ldd	r24, Y+6	; 0x06
 468:	9f 81       	ldd	r25, Y+7	; 0x07
 46a:	83 30       	cpi	r24, 0x03	; 3
 46c:	91 05       	cpc	r25, r1
 46e:	09 f4       	brne	.+2      	; 0x472 <DIO_enuSetpinval+0x80>
 470:	7c c0       	rjmp	.+248    	; 0x56a <DIO_enuSetpinval+0x178>
 472:	a3 c0       	rjmp	.+326    	; 0x5ba <DIO_enuSetpinval+0x1c8>
				 case DIO_PORTA :
					PORTA&=~(MASK_BIT<<copy_u8pinid);
 474:	ab e3       	ldi	r26, 0x3B	; 59
 476:	b0 e0       	ldi	r27, 0x00	; 0
 478:	eb e3       	ldi	r30, 0x3B	; 59
 47a:	f0 e0       	ldi	r31, 0x00	; 0
 47c:	80 81       	ld	r24, Z
 47e:	48 2f       	mov	r20, r24
 480:	8c 81       	ldd	r24, Y+4	; 0x04
 482:	28 2f       	mov	r18, r24
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	02 c0       	rjmp	.+4      	; 0x490 <DIO_enuSetpinval+0x9e>
 48c:	88 0f       	add	r24, r24
 48e:	99 1f       	adc	r25, r25
 490:	2a 95       	dec	r18
 492:	e2 f7       	brpl	.-8      	; 0x48c <DIO_enuSetpinval+0x9a>
 494:	80 95       	com	r24
 496:	84 23       	and	r24, r20
 498:	8c 93       	st	X, r24
					PORTA|=(copy_u8value<<copy_u8pinid);
 49a:	ab e3       	ldi	r26, 0x3B	; 59
 49c:	b0 e0       	ldi	r27, 0x00	; 0
 49e:	eb e3       	ldi	r30, 0x3B	; 59
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	80 81       	ld	r24, Z
 4a4:	48 2f       	mov	r20, r24
 4a6:	8d 81       	ldd	r24, Y+5	; 0x05
 4a8:	28 2f       	mov	r18, r24
 4aa:	30 e0       	ldi	r19, 0x00	; 0
 4ac:	8c 81       	ldd	r24, Y+4	; 0x04
 4ae:	88 2f       	mov	r24, r24
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	b9 01       	movw	r22, r18
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <DIO_enuSetpinval+0xc8>
 4b6:	66 0f       	add	r22, r22
 4b8:	77 1f       	adc	r23, r23
 4ba:	8a 95       	dec	r24
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <DIO_enuSetpinval+0xc4>
 4be:	cb 01       	movw	r24, r22
 4c0:	84 2b       	or	r24, r20
 4c2:	8c 93       	st	X, r24
 4c4:	7a c0       	rjmp	.+244    	; 0x5ba <DIO_enuSetpinval+0x1c8>
				   break;
				 case DIO_PORTB :
						PORTB&=~(MASK_BIT<<copy_u8pinid);
 4c6:	a8 e3       	ldi	r26, 0x38	; 56
 4c8:	b0 e0       	ldi	r27, 0x00	; 0
 4ca:	e8 e3       	ldi	r30, 0x38	; 56
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	80 81       	ld	r24, Z
 4d0:	48 2f       	mov	r20, r24
 4d2:	8c 81       	ldd	r24, Y+4	; 0x04
 4d4:	28 2f       	mov	r18, r24
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <DIO_enuSetpinval+0xf0>
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	2a 95       	dec	r18
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <DIO_enuSetpinval+0xec>
 4e6:	80 95       	com	r24
 4e8:	84 23       	and	r24, r20
 4ea:	8c 93       	st	X, r24
					    PORTB|=(copy_u8value<<copy_u8pinid);
 4ec:	a8 e3       	ldi	r26, 0x38	; 56
 4ee:	b0 e0       	ldi	r27, 0x00	; 0
 4f0:	e8 e3       	ldi	r30, 0x38	; 56
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	80 81       	ld	r24, Z
 4f6:	48 2f       	mov	r20, r24
 4f8:	8d 81       	ldd	r24, Y+5	; 0x05
 4fa:	28 2f       	mov	r18, r24
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	8c 81       	ldd	r24, Y+4	; 0x04
 500:	88 2f       	mov	r24, r24
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	b9 01       	movw	r22, r18
 506:	02 c0       	rjmp	.+4      	; 0x50c <DIO_enuSetpinval+0x11a>
 508:	66 0f       	add	r22, r22
 50a:	77 1f       	adc	r23, r23
 50c:	8a 95       	dec	r24
 50e:	e2 f7       	brpl	.-8      	; 0x508 <DIO_enuSetpinval+0x116>
 510:	cb 01       	movw	r24, r22
 512:	84 2b       	or	r24, r20
 514:	8c 93       	st	X, r24
 516:	51 c0       	rjmp	.+162    	; 0x5ba <DIO_enuSetpinval+0x1c8>
					   break;
				 case DIO_PORTC :
					 PORTC&=~(MASK_BIT<<copy_u8pinid);
 518:	a5 e3       	ldi	r26, 0x35	; 53
 51a:	b0 e0       	ldi	r27, 0x00	; 0
 51c:	e5 e3       	ldi	r30, 0x35	; 53
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	80 81       	ld	r24, Z
 522:	48 2f       	mov	r20, r24
 524:	8c 81       	ldd	r24, Y+4	; 0x04
 526:	28 2f       	mov	r18, r24
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	02 c0       	rjmp	.+4      	; 0x534 <DIO_enuSetpinval+0x142>
 530:	88 0f       	add	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	2a 95       	dec	r18
 536:	e2 f7       	brpl	.-8      	; 0x530 <DIO_enuSetpinval+0x13e>
 538:	80 95       	com	r24
 53a:	84 23       	and	r24, r20
 53c:	8c 93       	st	X, r24
					 PORTC|=(copy_u8value<<copy_u8pinid);
 53e:	a5 e3       	ldi	r26, 0x35	; 53
 540:	b0 e0       	ldi	r27, 0x00	; 0
 542:	e5 e3       	ldi	r30, 0x35	; 53
 544:	f0 e0       	ldi	r31, 0x00	; 0
 546:	80 81       	ld	r24, Z
 548:	48 2f       	mov	r20, r24
 54a:	8d 81       	ldd	r24, Y+5	; 0x05
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	8c 81       	ldd	r24, Y+4	; 0x04
 552:	88 2f       	mov	r24, r24
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	b9 01       	movw	r22, r18
 558:	02 c0       	rjmp	.+4      	; 0x55e <DIO_enuSetpinval+0x16c>
 55a:	66 0f       	add	r22, r22
 55c:	77 1f       	adc	r23, r23
 55e:	8a 95       	dec	r24
 560:	e2 f7       	brpl	.-8      	; 0x55a <DIO_enuSetpinval+0x168>
 562:	cb 01       	movw	r24, r22
 564:	84 2b       	or	r24, r20
 566:	8c 93       	st	X, r24
 568:	28 c0       	rjmp	.+80     	; 0x5ba <DIO_enuSetpinval+0x1c8>
					   break;
				 case DIO_PORTD :
					 PORTD&=~(MASK_BIT<<copy_u8pinid);
 56a:	a2 e3       	ldi	r26, 0x32	; 50
 56c:	b0 e0       	ldi	r27, 0x00	; 0
 56e:	e2 e3       	ldi	r30, 0x32	; 50
 570:	f0 e0       	ldi	r31, 0x00	; 0
 572:	80 81       	ld	r24, Z
 574:	48 2f       	mov	r20, r24
 576:	8c 81       	ldd	r24, Y+4	; 0x04
 578:	28 2f       	mov	r18, r24
 57a:	30 e0       	ldi	r19, 0x00	; 0
 57c:	81 e0       	ldi	r24, 0x01	; 1
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	02 c0       	rjmp	.+4      	; 0x586 <DIO_enuSetpinval+0x194>
 582:	88 0f       	add	r24, r24
 584:	99 1f       	adc	r25, r25
 586:	2a 95       	dec	r18
 588:	e2 f7       	brpl	.-8      	; 0x582 <DIO_enuSetpinval+0x190>
 58a:	80 95       	com	r24
 58c:	84 23       	and	r24, r20
 58e:	8c 93       	st	X, r24
					 PORTD|=(copy_u8value<<copy_u8pinid);
 590:	a2 e3       	ldi	r26, 0x32	; 50
 592:	b0 e0       	ldi	r27, 0x00	; 0
 594:	e2 e3       	ldi	r30, 0x32	; 50
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	48 2f       	mov	r20, r24
 59c:	8d 81       	ldd	r24, Y+5	; 0x05
 59e:	28 2f       	mov	r18, r24
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	8c 81       	ldd	r24, Y+4	; 0x04
 5a4:	88 2f       	mov	r24, r24
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	b9 01       	movw	r22, r18
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <DIO_enuSetpinval+0x1be>
 5ac:	66 0f       	add	r22, r22
 5ae:	77 1f       	adc	r23, r23
 5b0:	8a 95       	dec	r24
 5b2:	e2 f7       	brpl	.-8      	; 0x5ac <DIO_enuSetpinval+0x1ba>
 5b4:	cb 01       	movw	r24, r22
 5b6:	84 2b       	or	r24, r20
 5b8:	8c 93       	st	X, r24
					   break;
				 }
				 ES_ERROR local_enuerrorstate=ES_OK;
 5ba:	19 82       	std	Y+1, r1	; 0x01
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <DIO_enuSetpinval+0x1d0>
			 }
	}
	else  {local_enuerrorstate=ES_OUT_OF_RANGE;}
 5be:	83 e0       	ldi	r24, 0x03	; 3
 5c0:	8a 83       	std	Y+2, r24	; 0x02

		return local_enuerrorstate;
 5c2:	8a 81       	ldd	r24, Y+2	; 0x02
}
 5c4:	27 96       	adiw	r28, 0x07	; 7
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	f8 94       	cli
 5ca:	de bf       	out	0x3e, r29	; 62
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	cd bf       	out	0x3d, r28	; 61
 5d0:	cf 91       	pop	r28
 5d2:	df 91       	pop	r29
 5d4:	08 95       	ret

000005d6 <DIO_enutogport>:

ES_ERROR DIO_enutogport(u8 copy_u8portid){
 5d6:	df 93       	push	r29
 5d8:	cf 93       	push	r28
 5da:	00 d0       	rcall	.+0      	; 0x5dc <DIO_enutogport+0x6>
 5dc:	00 d0       	rcall	.+0      	; 0x5de <DIO_enutogport+0x8>
 5de:	0f 92       	push	r0
 5e0:	cd b7       	in	r28, 0x3d	; 61
 5e2:	de b7       	in	r29, 0x3e	; 62
 5e4:	8b 83       	std	Y+3, r24	; 0x03
	ES_ERROR local_enuerrorstate=ES_NOK;
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	8a 83       	std	Y+2, r24	; 0x02


	 if( copy_u8portid<=DIO_PORTD){
 5ea:	8b 81       	ldd	r24, Y+3	; 0x03
 5ec:	84 30       	cpi	r24, 0x04	; 4
 5ee:	08 f0       	brcs	.+2      	; 0x5f2 <DIO_enutogport+0x1c>
 5f0:	40 c0       	rjmp	.+128    	; 0x672 <DIO_enutogport+0x9c>
			 switch(copy_u8portid){
 5f2:	8b 81       	ldd	r24, Y+3	; 0x03
 5f4:	28 2f       	mov	r18, r24
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	3d 83       	std	Y+5, r19	; 0x05
 5fa:	2c 83       	std	Y+4, r18	; 0x04
 5fc:	8c 81       	ldd	r24, Y+4	; 0x04
 5fe:	9d 81       	ldd	r25, Y+5	; 0x05
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	91 05       	cpc	r25, r1
 604:	e9 f0       	breq	.+58     	; 0x640 <DIO_enutogport+0x6a>
 606:	2c 81       	ldd	r18, Y+4	; 0x04
 608:	3d 81       	ldd	r19, Y+5	; 0x05
 60a:	22 30       	cpi	r18, 0x02	; 2
 60c:	31 05       	cpc	r19, r1
 60e:	2c f4       	brge	.+10     	; 0x61a <DIO_enutogport+0x44>
 610:	8c 81       	ldd	r24, Y+4	; 0x04
 612:	9d 81       	ldd	r25, Y+5	; 0x05
 614:	00 97       	sbiw	r24, 0x00	; 0
 616:	61 f0       	breq	.+24     	; 0x630 <DIO_enutogport+0x5a>
 618:	2a c0       	rjmp	.+84     	; 0x66e <DIO_enutogport+0x98>
 61a:	2c 81       	ldd	r18, Y+4	; 0x04
 61c:	3d 81       	ldd	r19, Y+5	; 0x05
 61e:	22 30       	cpi	r18, 0x02	; 2
 620:	31 05       	cpc	r19, r1
 622:	b1 f0       	breq	.+44     	; 0x650 <DIO_enutogport+0x7a>
 624:	8c 81       	ldd	r24, Y+4	; 0x04
 626:	9d 81       	ldd	r25, Y+5	; 0x05
 628:	83 30       	cpi	r24, 0x03	; 3
 62a:	91 05       	cpc	r25, r1
 62c:	c9 f0       	breq	.+50     	; 0x660 <DIO_enutogport+0x8a>
 62e:	1f c0       	rjmp	.+62     	; 0x66e <DIO_enutogport+0x98>
			 case DIO_PORTA :
				PORTA=~PORTA;
 630:	ab e3       	ldi	r26, 0x3B	; 59
 632:	b0 e0       	ldi	r27, 0x00	; 0
 634:	eb e3       	ldi	r30, 0x3B	; 59
 636:	f0 e0       	ldi	r31, 0x00	; 0
 638:	80 81       	ld	r24, Z
 63a:	80 95       	com	r24
 63c:	8c 93       	st	X, r24
 63e:	17 c0       	rjmp	.+46     	; 0x66e <DIO_enutogport+0x98>
			   break;
			 case DIO_PORTB :
				PORTB=~PORTB;
 640:	a8 e3       	ldi	r26, 0x38	; 56
 642:	b0 e0       	ldi	r27, 0x00	; 0
 644:	e8 e3       	ldi	r30, 0x38	; 56
 646:	f0 e0       	ldi	r31, 0x00	; 0
 648:	80 81       	ld	r24, Z
 64a:	80 95       	com	r24
 64c:	8c 93       	st	X, r24
 64e:	0f c0       	rjmp	.+30     	; 0x66e <DIO_enutogport+0x98>
				   break;
			 case DIO_PORTC :
				PORTC=~PORTC;
 650:	a5 e3       	ldi	r26, 0x35	; 53
 652:	b0 e0       	ldi	r27, 0x00	; 0
 654:	e5 e3       	ldi	r30, 0x35	; 53
 656:	f0 e0       	ldi	r31, 0x00	; 0
 658:	80 81       	ld	r24, Z
 65a:	80 95       	com	r24
 65c:	8c 93       	st	X, r24
 65e:	07 c0       	rjmp	.+14     	; 0x66e <DIO_enutogport+0x98>
				   break;
			 case DIO_PORTD :
				PORTD=~PORTD;
 660:	a2 e3       	ldi	r26, 0x32	; 50
 662:	b0 e0       	ldi	r27, 0x00	; 0
 664:	e2 e3       	ldi	r30, 0x32	; 50
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	80 81       	ld	r24, Z
 66a:	80 95       	com	r24
 66c:	8c 93       	st	X, r24
				   break;
			 }
			 ES_ERROR local_enuerrorstate=ES_OK;
 66e:	19 82       	std	Y+1, r1	; 0x01
 670:	02 c0       	rjmp	.+4      	; 0x676 <DIO_enutogport+0xa0>
		 }
		 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
 672:	83 e0       	ldi	r24, 0x03	; 3
 674:	8a 83       	std	Y+2, r24	; 0x02


		return local_enuerrorstate;
 676:	8a 81       	ldd	r24, Y+2	; 0x02
}
 678:	0f 90       	pop	r0
 67a:	0f 90       	pop	r0
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	cf 91       	pop	r28
 684:	df 91       	pop	r29
 686:	08 95       	ret

00000688 <DIO_enutogpin>:

ES_ERROR DIO_enutogpin(u8 copy_u8portid,u8 copy_u8pinid){
 688:	df 93       	push	r29
 68a:	cf 93       	push	r28
 68c:	00 d0       	rcall	.+0      	; 0x68e <DIO_enutogpin+0x6>
 68e:	00 d0       	rcall	.+0      	; 0x690 <DIO_enutogpin+0x8>
 690:	00 d0       	rcall	.+0      	; 0x692 <DIO_enutogpin+0xa>
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
 696:	8b 83       	std	Y+3, r24	; 0x03
 698:	6c 83       	std	Y+4, r22	; 0x04
	ES_ERROR local_enuerrorstate=ES_OK;
 69a:	1a 82       	std	Y+2, r1	; 0x02

	if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7 ){
 69c:	8b 81       	ldd	r24, Y+3	; 0x03
 69e:	84 30       	cpi	r24, 0x04	; 4
 6a0:	08 f0       	brcs	.+2      	; 0x6a4 <DIO_enutogpin+0x1c>
 6a2:	74 c0       	rjmp	.+232    	; 0x78c <DIO_enutogpin+0x104>
 6a4:	8c 81       	ldd	r24, Y+4	; 0x04
 6a6:	88 30       	cpi	r24, 0x08	; 8
 6a8:	08 f0       	brcs	.+2      	; 0x6ac <DIO_enutogpin+0x24>
 6aa:	70 c0       	rjmp	.+224    	; 0x78c <DIO_enutogpin+0x104>

					 switch(copy_u8portid){
 6ac:	8b 81       	ldd	r24, Y+3	; 0x03
 6ae:	28 2f       	mov	r18, r24
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	3e 83       	std	Y+6, r19	; 0x06
 6b4:	2d 83       	std	Y+5, r18	; 0x05
 6b6:	8d 81       	ldd	r24, Y+5	; 0x05
 6b8:	9e 81       	ldd	r25, Y+6	; 0x06
 6ba:	81 30       	cpi	r24, 0x01	; 1
 6bc:	91 05       	cpc	r25, r1
 6be:	49 f1       	breq	.+82     	; 0x712 <DIO_enutogpin+0x8a>
 6c0:	2d 81       	ldd	r18, Y+5	; 0x05
 6c2:	3e 81       	ldd	r19, Y+6	; 0x06
 6c4:	22 30       	cpi	r18, 0x02	; 2
 6c6:	31 05       	cpc	r19, r1
 6c8:	2c f4       	brge	.+10     	; 0x6d4 <DIO_enutogpin+0x4c>
 6ca:	8d 81       	ldd	r24, Y+5	; 0x05
 6cc:	9e 81       	ldd	r25, Y+6	; 0x06
 6ce:	00 97       	sbiw	r24, 0x00	; 0
 6d0:	61 f0       	breq	.+24     	; 0x6ea <DIO_enutogpin+0x62>
 6d2:	5a c0       	rjmp	.+180    	; 0x788 <DIO_enutogpin+0x100>
 6d4:	2d 81       	ldd	r18, Y+5	; 0x05
 6d6:	3e 81       	ldd	r19, Y+6	; 0x06
 6d8:	22 30       	cpi	r18, 0x02	; 2
 6da:	31 05       	cpc	r19, r1
 6dc:	71 f1       	breq	.+92     	; 0x73a <DIO_enutogpin+0xb2>
 6de:	8d 81       	ldd	r24, Y+5	; 0x05
 6e0:	9e 81       	ldd	r25, Y+6	; 0x06
 6e2:	83 30       	cpi	r24, 0x03	; 3
 6e4:	91 05       	cpc	r25, r1
 6e6:	e9 f1       	breq	.+122    	; 0x762 <DIO_enutogpin+0xda>
 6e8:	4f c0       	rjmp	.+158    	; 0x788 <DIO_enutogpin+0x100>
					 case DIO_PORTA :
						PORTA^=(MASK_BIT<<copy_u8pinid);
 6ea:	ab e3       	ldi	r26, 0x3B	; 59
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	eb e3       	ldi	r30, 0x3B	; 59
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	80 81       	ld	r24, Z
 6f4:	48 2f       	mov	r20, r24
 6f6:	8c 81       	ldd	r24, Y+4	; 0x04
 6f8:	28 2f       	mov	r18, r24
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	02 2e       	mov	r0, r18
 702:	02 c0       	rjmp	.+4      	; 0x708 <DIO_enutogpin+0x80>
 704:	88 0f       	add	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	0a 94       	dec	r0
 70a:	e2 f7       	brpl	.-8      	; 0x704 <DIO_enutogpin+0x7c>
 70c:	84 27       	eor	r24, r20
 70e:	8c 93       	st	X, r24
 710:	3b c0       	rjmp	.+118    	; 0x788 <DIO_enutogpin+0x100>

					   break;
					 case DIO_PORTB :
						 PORTB^=(MASK_BIT<<copy_u8pinid);
 712:	a8 e3       	ldi	r26, 0x38	; 56
 714:	b0 e0       	ldi	r27, 0x00	; 0
 716:	e8 e3       	ldi	r30, 0x38	; 56
 718:	f0 e0       	ldi	r31, 0x00	; 0
 71a:	80 81       	ld	r24, Z
 71c:	48 2f       	mov	r20, r24
 71e:	8c 81       	ldd	r24, Y+4	; 0x04
 720:	28 2f       	mov	r18, r24
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	81 e0       	ldi	r24, 0x01	; 1
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	02 2e       	mov	r0, r18
 72a:	02 c0       	rjmp	.+4      	; 0x730 <DIO_enutogpin+0xa8>
 72c:	88 0f       	add	r24, r24
 72e:	99 1f       	adc	r25, r25
 730:	0a 94       	dec	r0
 732:	e2 f7       	brpl	.-8      	; 0x72c <DIO_enutogpin+0xa4>
 734:	84 27       	eor	r24, r20
 736:	8c 93       	st	X, r24
 738:	27 c0       	rjmp	.+78     	; 0x788 <DIO_enutogpin+0x100>
						   break;
					 case DIO_PORTC :
						 PORTC^=(MASK_BIT<<copy_u8pinid);
 73a:	a5 e3       	ldi	r26, 0x35	; 53
 73c:	b0 e0       	ldi	r27, 0x00	; 0
 73e:	e5 e3       	ldi	r30, 0x35	; 53
 740:	f0 e0       	ldi	r31, 0x00	; 0
 742:	80 81       	ld	r24, Z
 744:	48 2f       	mov	r20, r24
 746:	8c 81       	ldd	r24, Y+4	; 0x04
 748:	28 2f       	mov	r18, r24
 74a:	30 e0       	ldi	r19, 0x00	; 0
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	02 2e       	mov	r0, r18
 752:	02 c0       	rjmp	.+4      	; 0x758 <DIO_enutogpin+0xd0>
 754:	88 0f       	add	r24, r24
 756:	99 1f       	adc	r25, r25
 758:	0a 94       	dec	r0
 75a:	e2 f7       	brpl	.-8      	; 0x754 <DIO_enutogpin+0xcc>
 75c:	84 27       	eor	r24, r20
 75e:	8c 93       	st	X, r24
 760:	13 c0       	rjmp	.+38     	; 0x788 <DIO_enutogpin+0x100>
						   break;
					 case DIO_PORTD :
						 PORTD^=(MASK_BIT<<copy_u8pinid);
 762:	a2 e3       	ldi	r26, 0x32	; 50
 764:	b0 e0       	ldi	r27, 0x00	; 0
 766:	e2 e3       	ldi	r30, 0x32	; 50
 768:	f0 e0       	ldi	r31, 0x00	; 0
 76a:	80 81       	ld	r24, Z
 76c:	48 2f       	mov	r20, r24
 76e:	8c 81       	ldd	r24, Y+4	; 0x04
 770:	28 2f       	mov	r18, r24
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	81 e0       	ldi	r24, 0x01	; 1
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	02 2e       	mov	r0, r18
 77a:	02 c0       	rjmp	.+4      	; 0x780 <DIO_enutogpin+0xf8>
 77c:	88 0f       	add	r24, r24
 77e:	99 1f       	adc	r25, r25
 780:	0a 94       	dec	r0
 782:	e2 f7       	brpl	.-8      	; 0x77c <DIO_enutogpin+0xf4>
 784:	84 27       	eor	r24, r20
 786:	8c 93       	st	X, r24
						   break;
					 }
					 ES_ERROR local_enuerrorstate=ES_OK;
 788:	19 82       	std	Y+1, r1	; 0x01
 78a:	02 c0       	rjmp	.+4      	; 0x790 <DIO_enutogpin+0x108>
				 }

		else  {local_enuerrorstate=ES_OUT_OF_RANGE;}
 78c:	83 e0       	ldi	r24, 0x03	; 3
 78e:	8a 83       	std	Y+2, r24	; 0x02


		return local_enuerrorstate;
 790:	8a 81       	ldd	r24, Y+2	; 0x02
}
 792:	26 96       	adiw	r28, 0x06	; 6
 794:	0f b6       	in	r0, 0x3f	; 63
 796:	f8 94       	cli
 798:	de bf       	out	0x3e, r29	; 62
 79a:	0f be       	out	0x3f, r0	; 63
 79c:	cd bf       	out	0x3d, r28	; 61
 79e:	cf 91       	pop	r28
 7a0:	df 91       	pop	r29
 7a2:	08 95       	ret

000007a4 <DIO_enugetportval>:

ES_ERROR DIO_enugetportval(u8 copy_u8portid,u8* copy_pu8value){
 7a4:	df 93       	push	r29
 7a6:	cf 93       	push	r28
 7a8:	cd b7       	in	r28, 0x3d	; 61
 7aa:	de b7       	in	r29, 0x3e	; 62
 7ac:	28 97       	sbiw	r28, 0x08	; 8
 7ae:	0f b6       	in	r0, 0x3f	; 63
 7b0:	f8 94       	cli
 7b2:	de bf       	out	0x3e, r29	; 62
 7b4:	0f be       	out	0x3f, r0	; 63
 7b6:	cd bf       	out	0x3d, r28	; 61
 7b8:	8c 83       	std	Y+4, r24	; 0x04
 7ba:	7e 83       	std	Y+6, r23	; 0x06
 7bc:	6d 83       	std	Y+5, r22	; 0x05
	ES_ERROR local_enuerrorstate=ES_OK;
 7be:	1b 82       	std	Y+3, r1	; 0x03
 if(copy_pu8value=!NULL){
 7c0:	81 e0       	ldi	r24, 0x01	; 1
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	9e 83       	std	Y+6, r25	; 0x06
 7c6:	8d 83       	std	Y+5, r24	; 0x05
	 if( copy_u8portid<=DIO_PORTD){
 7c8:	8c 81       	ldd	r24, Y+4	; 0x04
 7ca:	84 30       	cpi	r24, 0x04	; 4
 7cc:	e0 f5       	brcc	.+120    	; 0x846 <DIO_enugetportval+0xa2>
	 		 switch(copy_u8portid){
 7ce:	8c 81       	ldd	r24, Y+4	; 0x04
 7d0:	28 2f       	mov	r18, r24
 7d2:	30 e0       	ldi	r19, 0x00	; 0
 7d4:	38 87       	std	Y+8, r19	; 0x08
 7d6:	2f 83       	std	Y+7, r18	; 0x07
 7d8:	8f 81       	ldd	r24, Y+7	; 0x07
 7da:	98 85       	ldd	r25, Y+8	; 0x08
 7dc:	81 30       	cpi	r24, 0x01	; 1
 7de:	91 05       	cpc	r25, r1
 7e0:	e1 f0       	breq	.+56     	; 0x81a <DIO_enugetportval+0x76>
 7e2:	2f 81       	ldd	r18, Y+7	; 0x07
 7e4:	38 85       	ldd	r19, Y+8	; 0x08
 7e6:	22 30       	cpi	r18, 0x02	; 2
 7e8:	31 05       	cpc	r19, r1
 7ea:	2c f4       	brge	.+10     	; 0x7f6 <DIO_enugetportval+0x52>
 7ec:	8f 81       	ldd	r24, Y+7	; 0x07
 7ee:	98 85       	ldd	r25, Y+8	; 0x08
 7f0:	00 97       	sbiw	r24, 0x00	; 0
 7f2:	61 f0       	breq	.+24     	; 0x80c <DIO_enugetportval+0x68>
 7f4:	26 c0       	rjmp	.+76     	; 0x842 <DIO_enugetportval+0x9e>
 7f6:	2f 81       	ldd	r18, Y+7	; 0x07
 7f8:	38 85       	ldd	r19, Y+8	; 0x08
 7fa:	22 30       	cpi	r18, 0x02	; 2
 7fc:	31 05       	cpc	r19, r1
 7fe:	a1 f0       	breq	.+40     	; 0x828 <DIO_enugetportval+0x84>
 800:	8f 81       	ldd	r24, Y+7	; 0x07
 802:	98 85       	ldd	r25, Y+8	; 0x08
 804:	83 30       	cpi	r24, 0x03	; 3
 806:	91 05       	cpc	r25, r1
 808:	b1 f0       	breq	.+44     	; 0x836 <DIO_enugetportval+0x92>
 80a:	1b c0       	rjmp	.+54     	; 0x842 <DIO_enugetportval+0x9e>
	 		 case DIO_PORTA :
	 			* copy_pu8value=PINA;
 80c:	e9 e3       	ldi	r30, 0x39	; 57
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	80 81       	ld	r24, Z
 812:	ed 81       	ldd	r30, Y+5	; 0x05
 814:	fe 81       	ldd	r31, Y+6	; 0x06
 816:	80 83       	st	Z, r24
 818:	14 c0       	rjmp	.+40     	; 0x842 <DIO_enugetportval+0x9e>
	 		   break;
	 		 case DIO_PORTB :
	 			* copy_pu8value=PINB;
 81a:	e6 e3       	ldi	r30, 0x36	; 54
 81c:	f0 e0       	ldi	r31, 0x00	; 0
 81e:	80 81       	ld	r24, Z
 820:	ed 81       	ldd	r30, Y+5	; 0x05
 822:	fe 81       	ldd	r31, Y+6	; 0x06
 824:	80 83       	st	Z, r24
 826:	0d c0       	rjmp	.+26     	; 0x842 <DIO_enugetportval+0x9e>
	 			   break;
	 		 case DIO_PORTC :
	 			* copy_pu8value=PINC;
 828:	e3 e3       	ldi	r30, 0x33	; 51
 82a:	f0 e0       	ldi	r31, 0x00	; 0
 82c:	80 81       	ld	r24, Z
 82e:	ed 81       	ldd	r30, Y+5	; 0x05
 830:	fe 81       	ldd	r31, Y+6	; 0x06
 832:	80 83       	st	Z, r24
 834:	06 c0       	rjmp	.+12     	; 0x842 <DIO_enugetportval+0x9e>
	 			   break;
	 		 case DIO_PORTD :
	 			* copy_pu8value=PIND;
 836:	e0 e3       	ldi	r30, 0x30	; 48
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	80 81       	ld	r24, Z
 83c:	ed 81       	ldd	r30, Y+5	; 0x05
 83e:	fe 81       	ldd	r31, Y+6	; 0x06
 840:	80 83       	st	Z, r24
	 			   break;
	 		 }
	 		 ES_ERROR local_enuerrorstate=ES_OK;
 842:	19 82       	std	Y+1, r1	; 0x01
 844:	02 c0       	rjmp	.+4      	; 0x84a <DIO_enugetportval+0xa6>
	 	 }
	 	 else{local_enuerrorstate=ES_OUT_OF_RANGE;}
 846:	83 e0       	ldi	r24, 0x03	; 3
 848:	8b 83       	std	Y+3, r24	; 0x03




	 ES_ERROR local_enuerrorstate=ES_OK;}
 84a:	1a 82       	std	Y+2, r1	; 0x02
 else{
	 ES_ERROR local_enuerrorstate=ES_NULL_POINTER;
 }


		return local_enuerrorstate;
 84c:	8b 81       	ldd	r24, Y+3	; 0x03
}
 84e:	28 96       	adiw	r28, 0x08	; 8
 850:	0f b6       	in	r0, 0x3f	; 63
 852:	f8 94       	cli
 854:	de bf       	out	0x3e, r29	; 62
 856:	0f be       	out	0x3f, r0	; 63
 858:	cd bf       	out	0x3d, r28	; 61
 85a:	cf 91       	pop	r28
 85c:	df 91       	pop	r29
 85e:	08 95       	ret

00000860 <DIO_enugetpinval>:

ES_ERROR DIO_enugetpinval(u8 copy_u8portid,u8 copy_u8pinid,u8* copy_pu8value){
 860:	df 93       	push	r29
 862:	cf 93       	push	r28
 864:	cd b7       	in	r28, 0x3d	; 61
 866:	de b7       	in	r29, 0x3e	; 62
 868:	2f 97       	sbiw	r28, 0x0f	; 15
 86a:	0f b6       	in	r0, 0x3f	; 63
 86c:	f8 94       	cli
 86e:	de bf       	out	0x3e, r29	; 62
 870:	0f be       	out	0x3f, r0	; 63
 872:	cd bf       	out	0x3d, r28	; 61
 874:	8a 83       	std	Y+2, r24	; 0x02
 876:	6b 83       	std	Y+3, r22	; 0x03
 878:	5d 83       	std	Y+5, r21	; 0x05
 87a:	4c 83       	std	Y+4, r20	; 0x04
	ES_ERROR local_enuerrorstate=ES_OK;
 87c:	19 82       	std	Y+1, r1	; 0x01
	 if(copy_pu8value=!NULL){
 87e:	81 e0       	ldi	r24, 0x01	; 1
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	9d 83       	std	Y+5, r25	; 0x05
 884:	8c 83       	std	Y+4, r24	; 0x04
	if(copy_u8portid<=DIO_PORTD&& copy_u8pinid<=DIO_PIN7 ){
 886:	8a 81       	ldd	r24, Y+2	; 0x02
 888:	84 30       	cpi	r24, 0x04	; 4
 88a:	08 f0       	brcs	.+2      	; 0x88e <DIO_enugetpinval+0x2e>
 88c:	9b c0       	rjmp	.+310    	; 0x9c4 <DIO_enugetpinval+0x164>
 88e:	8b 81       	ldd	r24, Y+3	; 0x03
 890:	88 30       	cpi	r24, 0x08	; 8
 892:	08 f0       	brcs	.+2      	; 0x896 <DIO_enugetpinval+0x36>
 894:	97 c0       	rjmp	.+302    	; 0x9c4 <DIO_enugetpinval+0x164>

				 switch(copy_u8portid){
 896:	8a 81       	ldd	r24, Y+2	; 0x02
 898:	28 2f       	mov	r18, r24
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	3f 87       	std	Y+15, r19	; 0x0f
 89e:	2e 87       	std	Y+14, r18	; 0x0e
 8a0:	4e 85       	ldd	r20, Y+14	; 0x0e
 8a2:	5f 85       	ldd	r21, Y+15	; 0x0f
 8a4:	41 30       	cpi	r20, 0x01	; 1
 8a6:	51 05       	cpc	r21, r1
 8a8:	a9 f1       	breq	.+106    	; 0x914 <DIO_enugetpinval+0xb4>
 8aa:	8e 85       	ldd	r24, Y+14	; 0x0e
 8ac:	9f 85       	ldd	r25, Y+15	; 0x0f
 8ae:	82 30       	cpi	r24, 0x02	; 2
 8b0:	91 05       	cpc	r25, r1
 8b2:	34 f4       	brge	.+12     	; 0x8c0 <DIO_enugetpinval+0x60>
 8b4:	2e 85       	ldd	r18, Y+14	; 0x0e
 8b6:	3f 85       	ldd	r19, Y+15	; 0x0f
 8b8:	21 15       	cp	r18, r1
 8ba:	31 05       	cpc	r19, r1
 8bc:	71 f0       	breq	.+28     	; 0x8da <DIO_enugetpinval+0x7a>
 8be:	80 c0       	rjmp	.+256    	; 0x9c0 <DIO_enugetpinval+0x160>
 8c0:	4e 85       	ldd	r20, Y+14	; 0x0e
 8c2:	5f 85       	ldd	r21, Y+15	; 0x0f
 8c4:	42 30       	cpi	r20, 0x02	; 2
 8c6:	51 05       	cpc	r21, r1
 8c8:	09 f4       	brne	.+2      	; 0x8cc <DIO_enugetpinval+0x6c>
 8ca:	41 c0       	rjmp	.+130    	; 0x94e <DIO_enugetpinval+0xee>
 8cc:	8e 85       	ldd	r24, Y+14	; 0x0e
 8ce:	9f 85       	ldd	r25, Y+15	; 0x0f
 8d0:	83 30       	cpi	r24, 0x03	; 3
 8d2:	91 05       	cpc	r25, r1
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <DIO_enugetpinval+0x78>
 8d6:	58 c0       	rjmp	.+176    	; 0x988 <DIO_enugetpinval+0x128>
 8d8:	73 c0       	rjmp	.+230    	; 0x9c0 <DIO_enugetpinval+0x160>
				 case DIO_PORTA :
					 * copy_pu8value=	(PINA>>copy_u8pinid)&&MASK_BIT;
 8da:	e9 e3       	ldi	r30, 0x39	; 57
 8dc:	f0 e0       	ldi	r31, 0x00	; 0
 8de:	80 81       	ld	r24, Z
 8e0:	28 2f       	mov	r18, r24
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	8b 81       	ldd	r24, Y+3	; 0x03
 8e6:	88 2f       	mov	r24, r24
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	a9 01       	movw	r20, r18
 8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <DIO_enugetpinval+0x92>
 8ee:	55 95       	asr	r21
 8f0:	47 95       	ror	r20
 8f2:	8a 95       	dec	r24
 8f4:	e2 f7       	brpl	.-8      	; 0x8ee <DIO_enugetpinval+0x8e>
 8f6:	ca 01       	movw	r24, r20
 8f8:	00 97       	sbiw	r24, 0x00	; 0
 8fa:	29 f0       	breq	.+10     	; 0x906 <DIO_enugetpinval+0xa6>
 8fc:	81 e0       	ldi	r24, 0x01	; 1
 8fe:	90 e0       	ldi	r25, 0x00	; 0
 900:	9d 87       	std	Y+13, r25	; 0x0d
 902:	8c 87       	std	Y+12, r24	; 0x0c
 904:	02 c0       	rjmp	.+4      	; 0x90a <DIO_enugetpinval+0xaa>
 906:	1d 86       	std	Y+13, r1	; 0x0d
 908:	1c 86       	std	Y+12, r1	; 0x0c
 90a:	8c 85       	ldd	r24, Y+12	; 0x0c
 90c:	ec 81       	ldd	r30, Y+4	; 0x04
 90e:	fd 81       	ldd	r31, Y+5	; 0x05
 910:	80 83       	st	Z, r24
 912:	56 c0       	rjmp	.+172    	; 0x9c0 <DIO_enugetpinval+0x160>
				   break;
				 case DIO_PORTB :
					 * copy_pu8value=	(PINB>>copy_u8pinid)&&MASK_BIT;
 914:	e6 e3       	ldi	r30, 0x36	; 54
 916:	f0 e0       	ldi	r31, 0x00	; 0
 918:	80 81       	ld	r24, Z
 91a:	28 2f       	mov	r18, r24
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	8b 81       	ldd	r24, Y+3	; 0x03
 920:	88 2f       	mov	r24, r24
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	a9 01       	movw	r20, r18
 926:	02 c0       	rjmp	.+4      	; 0x92c <DIO_enugetpinval+0xcc>
 928:	55 95       	asr	r21
 92a:	47 95       	ror	r20
 92c:	8a 95       	dec	r24
 92e:	e2 f7       	brpl	.-8      	; 0x928 <DIO_enugetpinval+0xc8>
 930:	ca 01       	movw	r24, r20
 932:	00 97       	sbiw	r24, 0x00	; 0
 934:	29 f0       	breq	.+10     	; 0x940 <DIO_enugetpinval+0xe0>
 936:	81 e0       	ldi	r24, 0x01	; 1
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	9b 87       	std	Y+11, r25	; 0x0b
 93c:	8a 87       	std	Y+10, r24	; 0x0a
 93e:	02 c0       	rjmp	.+4      	; 0x944 <DIO_enugetpinval+0xe4>
 940:	1b 86       	std	Y+11, r1	; 0x0b
 942:	1a 86       	std	Y+10, r1	; 0x0a
 944:	8a 85       	ldd	r24, Y+10	; 0x0a
 946:	ec 81       	ldd	r30, Y+4	; 0x04
 948:	fd 81       	ldd	r31, Y+5	; 0x05
 94a:	80 83       	st	Z, r24
 94c:	39 c0       	rjmp	.+114    	; 0x9c0 <DIO_enugetpinval+0x160>
					   break;
				 case DIO_PORTC :
					 * copy_pu8value=	(PINC>>copy_u8pinid)&&MASK_BIT;
 94e:	e3 e3       	ldi	r30, 0x33	; 51
 950:	f0 e0       	ldi	r31, 0x00	; 0
 952:	80 81       	ld	r24, Z
 954:	28 2f       	mov	r18, r24
 956:	30 e0       	ldi	r19, 0x00	; 0
 958:	8b 81       	ldd	r24, Y+3	; 0x03
 95a:	88 2f       	mov	r24, r24
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	a9 01       	movw	r20, r18
 960:	02 c0       	rjmp	.+4      	; 0x966 <DIO_enugetpinval+0x106>
 962:	55 95       	asr	r21
 964:	47 95       	ror	r20
 966:	8a 95       	dec	r24
 968:	e2 f7       	brpl	.-8      	; 0x962 <DIO_enugetpinval+0x102>
 96a:	ca 01       	movw	r24, r20
 96c:	00 97       	sbiw	r24, 0x00	; 0
 96e:	29 f0       	breq	.+10     	; 0x97a <DIO_enugetpinval+0x11a>
 970:	81 e0       	ldi	r24, 0x01	; 1
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	99 87       	std	Y+9, r25	; 0x09
 976:	88 87       	std	Y+8, r24	; 0x08
 978:	02 c0       	rjmp	.+4      	; 0x97e <DIO_enugetpinval+0x11e>
 97a:	19 86       	std	Y+9, r1	; 0x09
 97c:	18 86       	std	Y+8, r1	; 0x08
 97e:	88 85       	ldd	r24, Y+8	; 0x08
 980:	ec 81       	ldd	r30, Y+4	; 0x04
 982:	fd 81       	ldd	r31, Y+5	; 0x05
 984:	80 83       	st	Z, r24
 986:	1c c0       	rjmp	.+56     	; 0x9c0 <DIO_enugetpinval+0x160>
					   break;
				 case DIO_PORTD :
					 * copy_pu8value=	(PIND>>copy_u8pinid)&&MASK_BIT;
 988:	e0 e3       	ldi	r30, 0x30	; 48
 98a:	f0 e0       	ldi	r31, 0x00	; 0
 98c:	80 81       	ld	r24, Z
 98e:	28 2f       	mov	r18, r24
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	8b 81       	ldd	r24, Y+3	; 0x03
 994:	88 2f       	mov	r24, r24
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	a9 01       	movw	r20, r18
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <DIO_enugetpinval+0x140>
 99c:	55 95       	asr	r21
 99e:	47 95       	ror	r20
 9a0:	8a 95       	dec	r24
 9a2:	e2 f7       	brpl	.-8      	; 0x99c <DIO_enugetpinval+0x13c>
 9a4:	ca 01       	movw	r24, r20
 9a6:	00 97       	sbiw	r24, 0x00	; 0
 9a8:	29 f0       	breq	.+10     	; 0x9b4 <DIO_enugetpinval+0x154>
 9aa:	81 e0       	ldi	r24, 0x01	; 1
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	9f 83       	std	Y+7, r25	; 0x07
 9b0:	8e 83       	std	Y+6, r24	; 0x06
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <DIO_enugetpinval+0x158>
 9b4:	1f 82       	std	Y+7, r1	; 0x07
 9b6:	1e 82       	std	Y+6, r1	; 0x06
 9b8:	8e 81       	ldd	r24, Y+6	; 0x06
 9ba:	ec 81       	ldd	r30, Y+4	; 0x04
 9bc:	fd 81       	ldd	r31, Y+5	; 0x05
 9be:	80 83       	st	Z, r24
					   break;
				 }
				  local_enuerrorstate=ES_OK;
 9c0:	19 82       	std	Y+1, r1	; 0x01
 9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <DIO_enugetpinval+0x168>
			 }

	else  {local_enuerrorstate=ES_OUT_OF_RANGE;}}
 9c4:	83 e0       	ldi	r24, 0x03	; 3
 9c6:	89 83       	std	Y+1, r24	; 0x01
	else local_enuerrorstate=ES_NULL_POINTER;

		return local_enuerrorstate;
 9c8:	89 81       	ldd	r24, Y+1	; 0x01
}
 9ca:	2f 96       	adiw	r28, 0x0f	; 15
 9cc:	0f b6       	in	r0, 0x3f	; 63
 9ce:	f8 94       	cli
 9d0:	de bf       	out	0x3e, r29	; 62
 9d2:	0f be       	out	0x3f, r0	; 63
 9d4:	cd bf       	out	0x3d, r28	; 61
 9d6:	cf 91       	pop	r28
 9d8:	df 91       	pop	r29
 9da:	08 95       	ret

000009dc <KEYPAD_enuGetpressedKey>:

#include "KEYPAD_config.h"
#include "KEYPAD_priv.h"

u8 KEYPAD_enuGetpressedKey(void)
{
 9dc:	df 93       	push	r29
 9de:	cf 93       	push	r28
 9e0:	00 d0       	rcall	.+0      	; 0x9e2 <KEYPAD_enuGetpressedKey+0x6>
 9e2:	00 d0       	rcall	.+0      	; 0x9e4 <KEYPAD_enuGetpressedKey+0x8>
 9e4:	0f 92       	push	r0
 9e6:	cd b7       	in	r28, 0x3d	; 61
 9e8:	de b7       	in	r29, 0x3e	; 62
    u8 local_u8pressedKey= KEYPAD_NO_PRESSED_KEY;
 9ea:	1b 82       	std	Y+3, r1	; 0x03
static	u8 local_u8ketpadArr[4][4]=KEYPAD_ARR;
static	u8 local_u8AkeypadColumnArr[COLUMN_NUM]={KEYPAD_COLUMN0_PIN ,KEYPAD_COLUMN1_PIN ,KEYPAD_COLUMN2_PIN,KEYPAD_COLUMN3_PIN};
static	u8 local_u8AkeypadRowArr[ROW_NUM]={KEYPAD_ROW0_PIN ,KEYPAD_ROW1_PIN ,KEYPAD_ROW2_PIN,KEYPAD_ROW3_PIN};

	u8 local_u8ColumnIter=0;
 9ec:	1a 82       	std	Y+2, r1	; 0x02
	u8 local_u8RowIter=0;
 9ee:	19 82       	std	Y+1, r1	; 0x01
 9f0:	58 c0       	rjmp	.+176    	; 0xaa2 <KEYPAD_enuGetpressedKey+0xc6>
  for(;local_u8ColumnIter<COLUMN_NUM;local_u8ColumnIter++)
  {
	  //activate currant column
	   DIO_enuSetpinval(KEYPAD_PORT,local_u8AkeypadColumnArr[local_u8RowIter],DIO_u8LOW);
 9f2:	89 81       	ldd	r24, Y+1	; 0x01
 9f4:	88 2f       	mov	r24, r24
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	fc 01       	movw	r30, r24
 9fa:	ec 59       	subi	r30, 0x9C	; 156
 9fc:	ff 4f       	sbci	r31, 0xFF	; 255
 9fe:	90 81       	ld	r25, Z
 a00:	80 e0       	ldi	r24, 0x00	; 0
 a02:	69 2f       	mov	r22, r25
 a04:	40 e0       	ldi	r20, 0x00	; 0
 a06:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <DIO_enuSetpinval>
       for(; local_u8RowIter<ROW_NUM; local_u8RowIter++)
 a0a:	89 81       	ldd	r24, Y+1	; 0x01
 a0c:	84 30       	cpi	r24, 0x04	; 4
 a0e:	d0 f5       	brcc	.+116    	; 0xa84 <KEYPAD_enuGetpressedKey+0xa8>
       {
    	   u8 local_u8RowVal;
    	   DIO_enugetpinval(KEYPAD_PORT,local_u8AkeypadRowArr[local_u8RowIter],&local_u8RowVal);
 a10:	89 81       	ldd	r24, Y+1	; 0x01
 a12:	88 2f       	mov	r24, r24
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	fc 01       	movw	r30, r24
 a18:	e0 5a       	subi	r30, 0xA0	; 160
 a1a:	ff 4f       	sbci	r31, 0xFF	; 255
 a1c:	90 81       	ld	r25, Z
 a1e:	9e 01       	movw	r18, r28
 a20:	2c 5f       	subi	r18, 0xFC	; 252
 a22:	3f 4f       	sbci	r19, 0xFF	; 255
 a24:	80 e0       	ldi	r24, 0x00	; 0
 a26:	69 2f       	mov	r22, r25
 a28:	a9 01       	movw	r20, r18
 a2a:	0e 94 30 04 	call	0x860	; 0x860 <DIO_enugetpinval>
    	 //check if switch is pressed
    	   if(local_u8RowVal==DIO_u8LOW)
 a2e:	8c 81       	ldd	r24, Y+4	; 0x04
 a30:	88 23       	and	r24, r24
 a32:	11 f5       	brne	.+68     	; 0xa78 <KEYPAD_enuGetpressedKey+0x9c>
    		  local_u8pressedKey=local_u8ketpadArr[local_u8RowIter][local_u8ColumnIter];
 a34:	89 81       	ldd	r24, Y+1	; 0x01
 a36:	48 2f       	mov	r20, r24
 a38:	50 e0       	ldi	r21, 0x00	; 0
 a3a:	8a 81       	ldd	r24, Y+2	; 0x02
 a3c:	28 2f       	mov	r18, r24
 a3e:	30 e0       	ldi	r19, 0x00	; 0
 a40:	ca 01       	movw	r24, r20
 a42:	88 0f       	add	r24, r24
 a44:	99 1f       	adc	r25, r25
 a46:	88 0f       	add	r24, r24
 a48:	99 1f       	adc	r25, r25
 a4a:	82 0f       	add	r24, r18
 a4c:	93 1f       	adc	r25, r19
 a4e:	fc 01       	movw	r30, r24
 a50:	e8 59       	subi	r30, 0x98	; 152
 a52:	ff 4f       	sbci	r31, 0xFF	; 255
 a54:	80 81       	ld	r24, Z
 a56:	8b 83       	std	Y+3, r24	; 0x03
 a58:	0f c0       	rjmp	.+30     	; 0xa78 <KEYPAD_enuGetpressedKey+0x9c>
    	   //polling until the key is released
    	   while(local_u8RowVal==DIO_u8LOW)
    	    {
    	    	DIO_enugetpinval(KEYPAD_PORT,local_u8AkeypadRowArr[local_u8RowIter],&local_u8RowVal);
 a5a:	89 81       	ldd	r24, Y+1	; 0x01
 a5c:	88 2f       	mov	r24, r24
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	fc 01       	movw	r30, r24
 a62:	e0 5a       	subi	r30, 0xA0	; 160
 a64:	ff 4f       	sbci	r31, 0xFF	; 255
 a66:	90 81       	ld	r25, Z
 a68:	9e 01       	movw	r18, r28
 a6a:	2c 5f       	subi	r18, 0xFC	; 252
 a6c:	3f 4f       	sbci	r19, 0xFF	; 255
 a6e:	80 e0       	ldi	r24, 0x00	; 0
 a70:	69 2f       	mov	r22, r25
 a72:	a9 01       	movw	r20, r18
 a74:	0e 94 30 04 	call	0x860	; 0x860 <DIO_enugetpinval>
    	   DIO_enugetpinval(KEYPAD_PORT,local_u8AkeypadRowArr[local_u8RowIter],&local_u8RowVal);
    	 //check if switch is pressed
    	   if(local_u8RowVal==DIO_u8LOW)
    		  local_u8pressedKey=local_u8ketpadArr[local_u8RowIter][local_u8ColumnIter];
    	   //polling until the key is released
    	   while(local_u8RowVal==DIO_u8LOW)
 a78:	8c 81       	ldd	r24, Y+4	; 0x04
 a7a:	88 23       	and	r24, r24
 a7c:	71 f3       	breq	.-36     	; 0xa5a <KEYPAD_enuGetpressedKey+0x7e>
    	    {
    	    	DIO_enugetpinval(KEYPAD_PORT,local_u8AkeypadRowArr[local_u8RowIter],&local_u8RowVal);
    	    }
    	      return local_u8pressedKey;
 a7e:	8b 81       	ldd	r24, Y+3	; 0x03
 a80:	8d 83       	std	Y+5, r24	; 0x05
 a82:	15 c0       	rjmp	.+42     	; 0xaae <KEYPAD_enuGetpressedKey+0xd2>
       }
       //deactivate currant column
       DIO_enuSetpinval(KEYPAD_PORT,local_u8AkeypadColumnArr[local_u8RowIter],DIO_u8HIGH);
 a84:	89 81       	ldd	r24, Y+1	; 0x01
 a86:	88 2f       	mov	r24, r24
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	fc 01       	movw	r30, r24
 a8c:	ec 59       	subi	r30, 0x9C	; 156
 a8e:	ff 4f       	sbci	r31, 0xFF	; 255
 a90:	90 81       	ld	r25, Z
 a92:	80 e0       	ldi	r24, 0x00	; 0
 a94:	69 2f       	mov	r22, r25
 a96:	41 e0       	ldi	r20, 0x01	; 1
 a98:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <DIO_enuSetpinval>
static	u8 local_u8AkeypadColumnArr[COLUMN_NUM]={KEYPAD_COLUMN0_PIN ,KEYPAD_COLUMN1_PIN ,KEYPAD_COLUMN2_PIN,KEYPAD_COLUMN3_PIN};
static	u8 local_u8AkeypadRowArr[ROW_NUM]={KEYPAD_ROW0_PIN ,KEYPAD_ROW1_PIN ,KEYPAD_ROW2_PIN,KEYPAD_ROW3_PIN};

	u8 local_u8ColumnIter=0;
	u8 local_u8RowIter=0;
  for(;local_u8ColumnIter<COLUMN_NUM;local_u8ColumnIter++)
 a9c:	8a 81       	ldd	r24, Y+2	; 0x02
 a9e:	8f 5f       	subi	r24, 0xFF	; 255
 aa0:	8a 83       	std	Y+2, r24	; 0x02
 aa2:	8a 81       	ldd	r24, Y+2	; 0x02
 aa4:	84 30       	cpi	r24, 0x04	; 4
 aa6:	08 f4       	brcc	.+2      	; 0xaaa <KEYPAD_enuGetpressedKey+0xce>
 aa8:	a4 cf       	rjmp	.-184    	; 0x9f2 <KEYPAD_enuGetpressedKey+0x16>
    	      return local_u8pressedKey;
       }
       //deactivate currant column
       DIO_enuSetpinval(KEYPAD_PORT,local_u8AkeypadColumnArr[local_u8RowIter],DIO_u8HIGH);
  }
  return local_u8pressedKey;
 aaa:	8b 81       	ldd	r24, Y+3	; 0x03
 aac:	8d 83       	std	Y+5, r24	; 0x05
 aae:	8d 81       	ldd	r24, Y+5	; 0x05
}
 ab0:	0f 90       	pop	r0
 ab2:	0f 90       	pop	r0
 ab4:	0f 90       	pop	r0
 ab6:	0f 90       	pop	r0
 ab8:	0f 90       	pop	r0
 aba:	cf 91       	pop	r28
 abc:	df 91       	pop	r29
 abe:	08 95       	ret

00000ac0 <main>:
 */
#include "stdTypes.h"
#include "errorState.h"
#include "DIO_int.h"
#include "KEYPAD_int.h "
int main(void){
 ac0:	df 93       	push	r29
 ac2:	cf 93       	push	r28
 ac4:	cd b7       	in	r28, 0x3d	; 61
 ac6:	de b7       	in	r29, 0x3e	; 62



	return 0;
 ac8:	80 e0       	ldi	r24, 0x00	; 0
 aca:	90 e0       	ldi	r25, 0x00	; 0
}
 acc:	cf 91       	pop	r28
 ace:	df 91       	pop	r29
 ad0:	08 95       	ret

00000ad2 <_exit>:
 ad2:	f8 94       	cli

00000ad4 <__stop_program>:
 ad4:	ff cf       	rjmp	.-2      	; 0xad4 <__stop_program>
